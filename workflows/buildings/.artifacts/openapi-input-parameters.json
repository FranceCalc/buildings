
{
    "type": "object",
    "properties": {
        "string-input-1205:2540:1246": {
            "type": "string",
            "default": "GWh",
            "description": "Enter Description",
            "example": "GWh"
        },
        "string-input-1205:2540:1245": {
            "type": "string",
            "default": "bld_energy-need_district.*",
            "description": "Enter Description",
            "example": "bld_energy-need_district.*"
        },
        "string-input-1205:3430:2951:349": {
            "type": "string",
            "default": "fed_uncalibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_uncalibrated"
        },
        "string-input-1205:2127:349": {
            "type": "string",
            "default": "bld_emissions_appliances",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_emissions_appliances"
        },
        "single-selection-1205:3430:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1205:3058:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1205:3036:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_emissions-CH4_residential_non-space-heating_gas-ff-natural[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_emissions-CH4_residential_non-space-heating_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_residential_non-space-heating_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_residential_non-space-heating_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_non-residential_education_gas-bio[Mt]",
                    "bld_emissions-N2O_non-residential_education_gas-bio[Mt]",
                    "bld_emissions-CH4_non-residential_education_gas-bio[Mt]",
                    "bld_emissions-CO2_non-residential_health_gas-bio[Mt]",
                    "bld_emissions-N2O_non-residential_health_gas-bio[Mt]",
                    "bld_emissions-CH4_non-residential_health_gas-bio[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_gas-bio[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_gas-bio[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_gas-bio[Mt]",
                    "bld_emissions-CO2_non-residential_offices_gas-bio[Mt]",
                    "bld_emissions-N2O_non-residential_offices_gas-bio[Mt]",
                    "bld_emissions-CH4_non-residential_offices_gas-bio[Mt]",
                    "bld_emissions-CO2_non-residential_other_gas-bio[Mt]",
                    "bld_emissions-N2O_non-residential_other_gas-bio[Mt]",
                    "bld_emissions-CH4_non-residential_other_gas-bio[Mt]",
                    "bld_emissions-CO2_non-residential_trade_gas-bio[Mt]",
                    "bld_emissions-N2O_non-residential_trade_gas-bio[Mt]",
                    "bld_emissions-CH4_non-residential_trade_gas-bio[Mt]",
                    "bld_emissions-CO2_residential_mfh_gas-bio[Mt]",
                    "bld_emissions-N2O_residential_mfh_gas-bio[Mt]",
                    "bld_emissions-CH4_residential_mfh_gas-bio[Mt]",
                    "bld_emissions-CO2_residential_sfh_gas-bio[Mt]",
                    "bld_emissions-N2O_residential_sfh_gas-bio[Mt]",
                    "bld_emissions-CH4_residential_sfh_gas-bio[Mt]",
                    "bld_emissions-CO2_non-residential_education_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_non-residential_education_gas-ff-natural[Mt]",
                    "bld_emissions-CH4_non-residential_education_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_non-residential_health_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_non-residential_health_gas-ff-natural[Mt]",
                    "bld_emissions-CH4_non-residential_health_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_gas-ff-natural[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_non-residential_offices_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_non-residential_offices_gas-ff-natural[Mt]",
                    "bld_emissions-CH4_non-residential_offices_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_non-residential_other_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_non-residential_other_gas-ff-natural[Mt]",
                    "bld_emissions-CH4_non-residential_other_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_non-residential_trade_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_non-residential_trade_gas-ff-natural[Mt]",
                    "bld_emissions-CH4_non-residential_trade_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_residential_mfh_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_residential_mfh_gas-ff-natural[Mt]",
                    "bld_emissions-CH4_residential_mfh_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_residential_sfh_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_residential_sfh_gas-ff-natural[Mt]",
                    "bld_emissions-CH4_residential_sfh_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_non-residential_education_heat-ambient[Mt]",
                    "bld_emissions-N2O_non-residential_education_heat-ambient[Mt]",
                    "bld_emissions-CH4_non-residential_education_heat-ambient[Mt]",
                    "bld_emissions-CO2_non-residential_health_heat-ambient[Mt]",
                    "bld_emissions-N2O_non-residential_health_heat-ambient[Mt]",
                    "bld_emissions-CH4_non-residential_health_heat-ambient[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_heat-ambient[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_heat-ambient[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_heat-ambient[Mt]",
                    "bld_emissions-CO2_non-residential_offices_heat-ambient[Mt]",
                    "bld_emissions-N2O_non-residential_offices_heat-ambient[Mt]",
                    "bld_emissions-CH4_non-residential_offices_heat-ambient[Mt]",
                    "bld_emissions-CO2_non-residential_other_heat-ambient[Mt]",
                    "bld_emissions-N2O_non-residential_other_heat-ambient[Mt]",
                    "bld_emissions-CH4_non-residential_other_heat-ambient[Mt]",
                    "bld_emissions-CO2_non-residential_trade_heat-ambient[Mt]",
                    "bld_emissions-N2O_non-residential_trade_heat-ambient[Mt]",
                    "bld_emissions-CH4_non-residential_trade_heat-ambient[Mt]",
                    "bld_emissions-CO2_residential_mfh_heat-ambient[Mt]",
                    "bld_emissions-N2O_residential_mfh_heat-ambient[Mt]",
                    "bld_emissions-CH4_residential_mfh_heat-ambient[Mt]",
                    "bld_emissions-CO2_residential_sfh_heat-ambient[Mt]",
                    "bld_emissions-N2O_residential_sfh_heat-ambient[Mt]",
                    "bld_emissions-CH4_residential_sfh_heat-ambient[Mt]",
                    "bld_emissions-CO2_non-residential_education_heat-geothermal[Mt]",
                    "bld_emissions-N2O_non-residential_education_heat-geothermal[Mt]",
                    "bld_emissions-CH4_non-residential_education_heat-geothermal[Mt]",
                    "bld_emissions-CO2_non-residential_health_heat-geothermal[Mt]",
                    "bld_emissions-N2O_non-residential_health_heat-geothermal[Mt]",
                    "bld_emissions-CH4_non-residential_health_heat-geothermal[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_heat-geothermal[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_heat-geothermal[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_heat-geothermal[Mt]",
                    "bld_emissions-CO2_non-residential_offices_heat-geothermal[Mt]",
                    "bld_emissions-N2O_non-residential_offices_heat-geothermal[Mt]",
                    "bld_emissions-CH4_non-residential_offices_heat-geothermal[Mt]",
                    "bld_emissions-CO2_non-residential_other_heat-geothermal[Mt]",
                    "bld_emissions-N2O_non-residential_other_heat-geothermal[Mt]",
                    "bld_emissions-CH4_non-residential_other_heat-geothermal[Mt]",
                    "bld_emissions-CO2_non-residential_trade_heat-geothermal[Mt]",
                    "bld_emissions-N2O_non-residential_trade_heat-geothermal[Mt]",
                    "bld_emissions-CH4_non-residential_trade_heat-geothermal[Mt]",
                    "bld_emissions-CO2_residential_mfh_heat-geothermal[Mt]",
                    "bld_emissions-N2O_residential_mfh_heat-geothermal[Mt]",
                    "bld_emissions-CH4_residential_mfh_heat-geothermal[Mt]",
                    "bld_emissions-CO2_residential_sfh_heat-geothermal[Mt]",
                    "bld_emissions-N2O_residential_sfh_heat-geothermal[Mt]",
                    "bld_emissions-CH4_residential_sfh_heat-geothermal[Mt]",
                    "bld_emissions-CO2_non-residential_education_heat-solar[Mt]",
                    "bld_emissions-N2O_non-residential_education_heat-solar[Mt]",
                    "bld_emissions-CH4_non-residential_education_heat-solar[Mt]",
                    "bld_emissions-CO2_non-residential_health_heat-solar[Mt]",
                    "bld_emissions-N2O_non-residential_health_heat-solar[Mt]",
                    "bld_emissions-CH4_non-residential_health_heat-solar[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_heat-solar[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_heat-solar[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_heat-solar[Mt]",
                    "bld_emissions-CO2_non-residential_offices_heat-solar[Mt]",
                    "bld_emissions-N2O_non-residential_offices_heat-solar[Mt]",
                    "bld_emissions-CH4_non-residential_offices_heat-solar[Mt]",
                    "bld_emissions-CO2_non-residential_other_heat-solar[Mt]",
                    "bld_emissions-N2O_non-residential_other_heat-solar[Mt]",
                    "bld_emissions-CH4_non-residential_other_heat-solar[Mt]",
                    "bld_emissions-CO2_non-residential_trade_heat-solar[Mt]",
                    "bld_emissions-N2O_non-residential_trade_heat-solar[Mt]",
                    "bld_emissions-CH4_non-residential_trade_heat-solar[Mt]",
                    "bld_emissions-CO2_residential_mfh_heat-solar[Mt]",
                    "bld_emissions-N2O_residential_mfh_heat-solar[Mt]",
                    "bld_emissions-CH4_residential_mfh_heat-solar[Mt]",
                    "bld_emissions-CO2_residential_sfh_heat-solar[Mt]",
                    "bld_emissions-N2O_residential_sfh_heat-solar[Mt]",
                    "bld_emissions-CH4_residential_sfh_heat-solar[Mt]",
                    "bld_emissions-CO2_non-residential_education_liquid-bio-diesel[Mt]",
                    "bld_emissions-N2O_non-residential_education_liquid-bio-diesel[Mt]",
                    "bld_emissions-CH4_non-residential_education_liquid-bio-diesel[Mt]",
                    "bld_emissions-CO2_non-residential_health_liquid-bio-diesel[Mt]",
                    "bld_emissions-N2O_non-residential_health_liquid-bio-diesel[Mt]",
                    "bld_emissions-CH4_non-residential_health_liquid-bio-diesel[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_liquid-bio-diesel[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_liquid-bio-diesel[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_liquid-bio-diesel[Mt]",
                    "bld_emissions-CO2_non-residential_offices_liquid-bio-diesel[Mt]",
                    "bld_emissions-N2O_non-residential_offices_liquid-bio-diesel[Mt]",
                    "bld_emissions-CH4_non-residential_offices_liquid-bio-diesel[Mt]",
                    "bld_emissions-CO2_non-residential_other_liquid-bio-diesel[Mt]",
                    "bld_emissions-N2O_non-residential_other_liquid-bio-diesel[Mt]",
                    "bld_emissions-CH4_non-residential_other_liquid-bio-diesel[Mt]",
                    "bld_emissions-CO2_non-residential_trade_liquid-bio-diesel[Mt]",
                    "bld_emissions-N2O_non-residential_trade_liquid-bio-diesel[Mt]",
                    "bld_emissions-CH4_non-residential_trade_liquid-bio-diesel[Mt]",
                    "bld_emissions-CO2_residential_mfh_liquid-bio-diesel[Mt]",
                    "bld_emissions-N2O_residential_mfh_liquid-bio-diesel[Mt]",
                    "bld_emissions-CH4_residential_mfh_liquid-bio-diesel[Mt]",
                    "bld_emissions-CO2_residential_sfh_liquid-bio-diesel[Mt]",
                    "bld_emissions-N2O_residential_sfh_liquid-bio-diesel[Mt]",
                    "bld_emissions-CH4_residential_sfh_liquid-bio-diesel[Mt]",
                    "bld_emissions-CO2_non-residential_education_liquid-bio-gasoline[Mt]",
                    "bld_emissions-N2O_non-residential_education_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CH4_non-residential_education_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CO2_non-residential_health_liquid-bio-gasoline[Mt]",
                    "bld_emissions-N2O_non-residential_health_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CH4_non-residential_health_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_liquid-bio-gasoline[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CO2_non-residential_offices_liquid-bio-gasoline[Mt]",
                    "bld_emissions-N2O_non-residential_offices_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CH4_non-residential_offices_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CO2_non-residential_other_liquid-bio-gasoline[Mt]",
                    "bld_emissions-N2O_non-residential_other_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CH4_non-residential_other_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CO2_non-residential_trade_liquid-bio-gasoline[Mt]",
                    "bld_emissions-N2O_non-residential_trade_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CH4_non-residential_trade_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CO2_residential_mfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions-N2O_residential_mfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CH4_residential_mfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CO2_residential_sfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions-N2O_residential_sfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CH4_residential_sfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions-CO2_non-residential_education_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-N2O_non-residential_education_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CH4_non-residential_education_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2_non-residential_health_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-N2O_non-residential_health_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CH4_non-residential_health_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2_non-residential_offices_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-N2O_non-residential_offices_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CH4_non-residential_offices_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2_non-residential_other_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-N2O_non-residential_other_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CH4_non-residential_other_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2_non-residential_trade_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-N2O_non-residential_trade_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CH4_non-residential_trade_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2_residential_mfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-N2O_residential_mfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CH4_residential_mfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2_residential_sfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-N2O_residential_sfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CH4_residential_sfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions-CO2_non-residential_education_solid-bio[Mt]",
                    "bld_emissions-N2O_non-residential_education_solid-bio[Mt]",
                    "bld_emissions-CH4_non-residential_education_solid-bio[Mt]",
                    "bld_emissions-CO2_non-residential_health_solid-bio[Mt]",
                    "bld_emissions-N2O_non-residential_health_solid-bio[Mt]",
                    "bld_emissions-CH4_non-residential_health_solid-bio[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_solid-bio[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_solid-bio[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_solid-bio[Mt]",
                    "bld_emissions-CO2_non-residential_offices_solid-bio[Mt]",
                    "bld_emissions-N2O_non-residential_offices_solid-bio[Mt]",
                    "bld_emissions-CH4_non-residential_offices_solid-bio[Mt]",
                    "bld_emissions-CO2_non-residential_other_solid-bio[Mt]",
                    "bld_emissions-N2O_non-residential_other_solid-bio[Mt]",
                    "bld_emissions-CH4_non-residential_other_solid-bio[Mt]",
                    "bld_emissions-CO2_non-residential_trade_solid-bio[Mt]",
                    "bld_emissions-N2O_non-residential_trade_solid-bio[Mt]",
                    "bld_emissions-CH4_non-residential_trade_solid-bio[Mt]",
                    "bld_emissions-CO2_residential_mfh_solid-bio[Mt]",
                    "bld_emissions-N2O_residential_mfh_solid-bio[Mt]",
                    "bld_emissions-CH4_residential_mfh_solid-bio[Mt]",
                    "bld_emissions-CO2_residential_sfh_solid-bio[Mt]",
                    "bld_emissions-N2O_residential_sfh_solid-bio[Mt]",
                    "bld_emissions-CH4_residential_sfh_solid-bio[Mt]",
                    "bld_emissions-CO2_non-residential_education_solid-ff-coal[Mt]",
                    "bld_emissions-N2O_non-residential_education_solid-ff-coal[Mt]",
                    "bld_emissions-CH4_non-residential_education_solid-ff-coal[Mt]",
                    "bld_emissions-CO2_non-residential_health_solid-ff-coal[Mt]",
                    "bld_emissions-N2O_non-residential_health_solid-ff-coal[Mt]",
                    "bld_emissions-CH4_non-residential_health_solid-ff-coal[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_solid-ff-coal[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_solid-ff-coal[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_solid-ff-coal[Mt]",
                    "bld_emissions-CO2_non-residential_offices_solid-ff-coal[Mt]",
                    "bld_emissions-N2O_non-residential_offices_solid-ff-coal[Mt]",
                    "bld_emissions-CH4_non-residential_offices_solid-ff-coal[Mt]",
                    "bld_emissions-CO2_non-residential_other_solid-ff-coal[Mt]",
                    "bld_emissions-N2O_non-residential_other_solid-ff-coal[Mt]",
                    "bld_emissions-CH4_non-residential_other_solid-ff-coal[Mt]",
                    "bld_emissions-CO2_non-residential_trade_solid-ff-coal[Mt]",
                    "bld_emissions-N2O_non-residential_trade_solid-ff-coal[Mt]",
                    "bld_emissions-CH4_non-residential_trade_solid-ff-coal[Mt]",
                    "bld_emissions-CO2_residential_mfh_solid-ff-coal[Mt]",
                    "bld_emissions-N2O_residential_mfh_solid-ff-coal[Mt]",
                    "bld_emissions-CH4_residential_mfh_solid-ff-coal[Mt]",
                    "bld_emissions-CO2_residential_sfh_solid-ff-coal[Mt]",
                    "bld_emissions-N2O_residential_sfh_solid-ff-coal[Mt]",
                    "bld_emissions-CH4_residential_sfh_solid-ff-coal[Mt]",
                    "bld_emissions-CO2_non-residential_education_solid-waste[Mt]",
                    "bld_emissions-N2O_non-residential_education_solid-waste[Mt]",
                    "bld_emissions-CH4_non-residential_education_solid-waste[Mt]",
                    "bld_emissions-CO2_non-residential_health_solid-waste[Mt]",
                    "bld_emissions-N2O_non-residential_health_solid-waste[Mt]",
                    "bld_emissions-CH4_non-residential_health_solid-waste[Mt]",
                    "bld_emissions-CO2_non-residential_hotels_solid-waste[Mt]",
                    "bld_emissions-N2O_non-residential_hotels_solid-waste[Mt]",
                    "bld_emissions-CH4_non-residential_hotels_solid-waste[Mt]",
                    "bld_emissions-CO2_non-residential_offices_solid-waste[Mt]",
                    "bld_emissions-N2O_non-residential_offices_solid-waste[Mt]",
                    "bld_emissions-CH4_non-residential_offices_solid-waste[Mt]",
                    "bld_emissions-CO2_non-residential_other_solid-waste[Mt]",
                    "bld_emissions-N2O_non-residential_other_solid-waste[Mt]",
                    "bld_emissions-CH4_non-residential_other_solid-waste[Mt]",
                    "bld_emissions-CO2_non-residential_trade_solid-waste[Mt]",
                    "bld_emissions-N2O_non-residential_trade_solid-waste[Mt]",
                    "bld_emissions-CH4_non-residential_trade_solid-waste[Mt]",
                    "bld_emissions-CO2_residential_mfh_solid-waste[Mt]",
                    "bld_emissions-N2O_residential_mfh_solid-waste[Mt]",
                    "bld_emissions-CH4_residential_mfh_solid-waste[Mt]",
                    "bld_emissions-CO2_residential_sfh_solid-waste[Mt]",
                    "bld_emissions-N2O_residential_sfh_solid-waste[Mt]",
                    "bld_emissions-CH4_residential_sfh_solid-waste[Mt]"
                ]
            }
        },
        "string-input-1165:1217:349": {
            "type": "string",
            "default": "dhg_energy-demand",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "dhg_energy-demand"
        },
        "string-input-1165:1217:357": {
            "type": "string",
            "default": ".*energy-demand-prelim_.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand-prelim_.*"
        },
        "string-input-2192:5044:1597": {
            "type": "string",
            "default": "$4",
            "description": "Enter Description",
            "example": "$4"
        },
        "string-input-1165:1604:460": {
            "type": "string",
            "default": "TW",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TW"
        },
        "string-input-2192:5044:1596": {
            "type": "string",
            "default": "(.*)_(.*)-(.*)-(.*)-(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)_(.*)-(.*)-(.*)-(.*)_(.*)\\[.*"
        },
        "single-selection-1165:790:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2443:1015:354": {
            "type": "string",
            "default": "Mm²",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mm²"
        },
        "string-input-1165:1217:354": {
            "type": "string",
            "default": "TWh/year",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh/year"
        },
        "data-type-1218:1058:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-1205:837:445": {
            "type": "string",
            "default": "surface-ratio_(.*)",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "surface-ratio_(.*)"
        },
        "string-input-2443:1015:357": {
            "type": "string",
            "default": "bld_.*non-res.*_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "bld_.*non-res.*_.*\\[.*"
        },
        "string-input-1205:837:446": {
            "type": "string",
            "default": ".*constructed-area.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*constructed-area.*"
        },
        "string-input-2819:2806:4890": {
            "type": "string",
            "default": "CH",
            "description": "Enter Description",
            "example": "CH"
        },
        "string-input-1205:837:444": {
            "type": "string",
            "default": "constructed-surface-area",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "constructed-surface-area"
        },
        "string-input-1217:648:343": {
            "type": "string",
            "default": "heat-district-technology-fuel",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "heat-district-technology-fuel"
        },
        "string-input-1154:441:639:444": {
            "type": "string",
            "default": "ots_bld_nonres-floorarea",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "ots_bld_nonres-floorarea"
        },
        "string-input-2584:2058:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-1154:441:639:445": {
            "type": "string",
            "default": ".*nonres-floorarea_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*nonres-floorarea_(.*)\\[.*"
        },
        "string-input-1154:441:639:446": {
            "type": "string",
            "default": ".*1000m2",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*1000m2"
        },
        "string-input-2584:2058:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "single-selection-1205:3213:2231:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2584:2058:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)(\\[.*)"
        },
        "column-filter-1205:3432:2933:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(energy-demand[TWh])",
                    "cooking+Sum(energy-demand[TWh])",
                    "hot-water+Sum(energy-demand[TWh])",
                    "lighting+Sum(energy-demand[TWh])",
                    "space-cooling+Sum(energy-demand[TWh])"
                ]
            }
        },
        "string-input-1217:1091:343": {
            "type": "string",
            "default": "heatcool-technology-fuel_non-residential_space-heating",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "heatcool-technology-fuel_non-residential_space-heating"
        },
        "string-input-1205:2127:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "string-input-1165:2086:1596": {
            "type": "string",
            "default": "(.*)-(.*)_(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)-(.*)_(.*)_(.*)\\[.*"
        },
        "string-input-1165:2086:1597": {
            "type": "string",
            "default": "$4",
            "description": "Enter Description",
            "example": "$4"
        },
        "single-selection-1217:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1165:2086:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-1205:2127:357": {
            "type": "string",
            "default": ".*emissions-(.*ial)_[^e].*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*emissions-(.*ial)_[^e].*\\[.*"
        },
        "column-selection-2192:1632:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:3106:357": {
            "type": "string",
            "default": "stand.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "stand.*"
        },
        "column-filter-1205:2942:2929:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity+Sum(energy-demand_decentral_constructed[TWh])",
                    "gas-bio+Sum(energy-demand_decentral_constructed[TWh])",
                    "gas-ff-natural+Sum(energy-demand_decentral_constructed[TWh])",
                    "heat-ambient+Sum(energy-demand_decentral_constructed[TWh])",
                    "heat-geothermal+Sum(energy-demand_decentral_constructed[TWh])",
                    "heat-solar+Sum(energy-demand_decentral_constructed[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_decentral_constructed[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_decentral_constructed[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_decentral_constructed[TWh])",
                    "solid-bio+Sum(energy-demand_decentral_constructed[TWh])",
                    "solid-ff-coal+Sum(energy-demand_decentral_constructed[TWh])",
                    "solid-waste+Sum(energy-demand_decentral_constructed[TWh])"
                ]
            }
        },
        "string-input-1205:3106:354": {
            "type": "string",
            "default": "TWhstd",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWhstd"
        },
        "single-selection-1165:2792:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "boolean-input-2590:1601:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "column-filter-1205:3099:3105:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "1991+renovated-area[Mm2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "1991+renovated-area[Mm2]",
                    "1992+renovated-area[Mm2]",
                    "1993+renovated-area[Mm2]",
                    "1994+renovated-area[Mm2]",
                    "1995+renovated-area[Mm2]",
                    "1996+renovated-area[Mm2]"
                ]
            }
        },
        "column-filter-1205:3430:2914:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances[TWh]",
                    "cooking[TWh]",
                    "hot-water[TWh]",
                    "lighting[TWh]",
                    "space-cooling[TWh]"
                ]
            }
        },
        "boolean-input-2192:5227:4977:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-2819:4960:4977:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:2998:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-2443:1015:349": {
            "type": "string",
            "default": "bld_floor-area_non-residential",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "bld_floor-area_non-residential"
        },
        "data-type-1215:1174:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical"
                ]
            }
        },
        "single-selection-1205:2640:2232:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Subtraction 1-2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Subtraction 1-2"
            }
        },
        "column-selection-1205:1592:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "buildingtype"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "buildingtype"
            }
        },
        "string-input-1154:441:639:460": {
            "type": "string",
            "default": "1000m2",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "1000m2"
        },
        "single-selection-1205:2640:2231:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Python"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Python"
            }
        },
        "string-input-1205:3213:2232:445": {
            "type": "string",
            "default": "cal(.*)",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal(.*)"
        },
        "string-input-1205:3213:2232:446": {
            "type": "string",
            "default": "energy-demand.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "energy-demand.*"
        },
        "column-filter-1205:3431:2955:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(cal_rate_[%])",
                    "cooking+Sum(cal_rate_[%])",
                    "hot-water+Sum(cal_rate_[%])",
                    "lighting+Sum(cal_rate_[%])",
                    "space-cooling+Sum(cal_rate_[%])"
                ]
            }
        },
        "string-input-1205:3213:2232:444": {
            "type": "string",
            "default": "cal_delta",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_delta"
        },
        "column-filter-2812:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1205:3099:3100:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:2942:2909:843": {
            "type": "string",
            "default": "EU after calibration",
            "description": "Enter Description",
            "example": "EU after calibration"
        },
        "string-input-1176:1162:1181:349": {
            "type": "string",
            "default": "energy_total",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "energy_total"
        },
        "single-selection-2601:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:3429:2952:843": {
            "type": "string",
            "default": "EU uncalibrated",
            "description": "Enter Description",
            "example": "EU uncalibrated"
        },
        "string-input-1205:2941:2857:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "agg-method-2806:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:3016:349": {
            "type": "string",
            "default": "bld_energy-demand_heat",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand_heat"
        },
        "single-selection-1205:2106:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1205:1638:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_nonres-floor-area_non-residential_offices[1000m2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_nonres-floor-area_non-residential_offices[1000m2]",
                    "bld_nonres-floor-area_non-residential_hotels[1000m2]",
                    "bld_nonres-floor-area_non-residential_trade[1000m2]",
                    "bld_nonres-floor-area_non-residential_education[1000m2]",
                    "bld_nonres-floor-area_non-residential_health[1000m2]",
                    "bld_nonres-floor-area_non-residential_other[1000m2]",
                    "bld_floor-area_residential_sfh[1000m2]",
                    "bld_floor-area_residential_mfh[1000m2]"
                ]
            }
        },
        "string-input-1205:837:460": {
            "type": "string",
            "default": "Mm2",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mm2"
        },
        "double-input-2819:5386:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "string-input-1205:3016:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-2819:5047:1599": {
            "type": "string",
            "default": "energycarrier-eurostat",
            "description": "Enter Description",
            "example": "energycarrier-eurostat"
        },
        "string-input-2819:5047:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)\\[.*"
        },
        "string-input-2819:5047:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "string-input-1205:3430:2951:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "single-selection-1205:3106:3219:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1205:2941:2893:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "cal_rate_[%]"
                ]
            }
        },
        "boolean-input-1165:1215:646": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-2192:5044:1599": {
            "type": "string",
            "default": "subsector-eurostat",
            "description": "Enter Description",
            "example": "subsector-eurostat"
        },
        "string-input-1205:3430:2951:357": {
            "type": "string",
            "default": "(.*)\\+.*dem.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*dem.*\\[.*"
        },
        "column-filter-1205:3099:3100:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-2184:843": {
            "type": "string",
            "default": "Energy by building type",
            "description": "Enter Description",
            "example": "Energy by building type"
        },
        "single-selection-1205:1835:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:1393:1150:444": {
            "type": "string",
            "default": "cal_rate",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate"
        },
        "string-input-1205:1393:1150:445": {
            "type": "string",
            "default": "cal_delta_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_delta_(.*)\\[.*"
        },
        "string-input-1205:3429:2927:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "single-selection-1205:724:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-2192:4987:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "boolean-input-1205:2994:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-2192:4987:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-1205:3016:357": {
            "type": "string",
            "default": ".*energy.*_.*tial_.*_(.*)\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy.*_.*tial_.*_(.*)\\[.*"
        },
        "string-input-1176:1162:1181:354": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "unit"
        },
        "string-input-2192:4987:1599": {
            "type": "string",
            "default": "energycarrier-old",
            "description": "Enter Description",
            "example": "energycarrier-old"
        },
        "string-input-1176:1162:1181:357": {
            "type": "string",
            "default": ".*dhg_energy.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*dhg_energy.*"
        },
        "string-input-1205:3213:2232:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "single-selection-1176:408:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "5.1 Electricity"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "5.1 Electricity"
            }
        },
        "string-input-1205:3430:2955:843": {
            "type": "string",
            "default": "EU calibration rate",
            "description": "Enter Description",
            "example": "EU calibration rate"
        },
        "string-input-1165:803:1150:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "data-type-1217:1087:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "single-selection-1217:647:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "double-input-1205:1854:1247": {
            "type": "number",
            "default": 1000000.0,
            "description": "Enter Description",
            "example": 1000000.0
        },
        "single-selection-1205:2421:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1165:2097:349": {
            "type": "string",
            "default": "dhg_emissions_added-heat-district",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "dhg_emissions_added-heat-district"
        },
        "single-selection-1205:2783:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-1205:3158:1601:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1205:2721:1017:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1165:803:1150:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "country-list-2816:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "data-type-1217:648:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "column-filter-1205:2941:2895:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "education+Sum(cal_rate_[%])",
                    "health+Sum(cal_rate_[%])",
                    "hotels+Sum(cal_rate_[%])",
                    "offices+Sum(cal_rate_[%])",
                    "other+Sum(cal_rate_[%])",
                    "trade+Sum(cal_rate_[%])",
                    "mfh+Sum(cal_rate_[%])",
                    "sfh+Sum(cal_rate_[%])"
                ]
            }
        },
        "column-filter-1205:2940:2870:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "subsector",
                    "Years",
                    "use",
                    "energy-demand[GWh]",
                    "cal_rate_[%]",
                    "technology",
                    "energycarrier"
                ]
            }
        },
        "column-filter-2808:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "column-filter-1205:3431:2951:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "appliances+energy-demand[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "appliances+energy-demand[TWh]",
                    "cooking+energy-demand[TWh]",
                    "hot-water+energy-demand[TWh]",
                    "lighting+energy-demand[TWh]",
                    "space-cooling+energy-demand[TWh]"
                ]
            }
        },
        "single-selection-1165:2089:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1165:2097:357": {
            "type": "string",
            "default": ".*emissions_.*_(...)_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*emissions_.*_(...)_.*\\[.*"
        },
        "string-input-1165:2097:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "column-filter-2617:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "lfs_floor-space[1000m2]"
                ]
            }
        },
        "single-selection-1176:1162:1166:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "column-filter-1165:1421": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_capacity_dh_gas-ff-natural[TW]new"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_capacity_dh_gas-ff-natural[TW]new",
                    "dhg_capacity_dh_liquid-ff-heatingoil[TW]new",
                    "dhg_capacity_dh_solid-ff-coal[TW]new",
                    "dhg_capacity_dh_solid-bio[TW]new",
                    "dhg_capacity_dh_heat-ambient[TW]new",
                    "dhg_capacity_dh_heat-solar[TW]new",
                    "dhg_capacity_dh_heat-geothermal[TW]new"
                ]
            }
        },
        "column-filter-1205:1393:1146:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "boolean-input-1205:2987:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "boolean-input-1205:1611:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:3101:2808:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "energydemand-by-sector&ec[TWh]",
                    "energydemand-by-ec[TWh]",
                    "energydemand-by-btype[TWh]"
                ]
            }
        },
        "string-input-1205:1831:1599": {
            "type": "string",
            "default": "buildingtype",
            "description": "Enter Description",
            "example": "buildingtype"
        },
        "column-filter-2795:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_heat_residential_electricity[TWh]",
                    "bld_energy-demand_heat_non-residential_electricity[TWh]",
                    "bld_energy-demand_non-residential_appliances_electricity[TWh]",
                    "bld_energy-demand_non-residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_non-residential_lighting_electricity[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_residential_appliances_electricity[TWh]",
                    "bld_energy-demand_residential_cooking_electricity[TWh]",
                    "bld_energy-demand_residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_residential_lighting_electricity[TWh]",
                    "bld_energy-demand_residential_space-cooling_electricity[TWh]",
                    "bld_energy-need_residential_district_mfh[GWh]",
                    "bld_energy-need_residential_district_sfh[GWh]"
                ]
            }
        },
        "string-input-1205:1831:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "boolean-input-1205:2006:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-1165:803:1150:446": {
            "type": "string",
            "default": "dhg_(emissions_added-heat-district_...)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "dhg_(emissions_added-heat-district_...)\\[.*"
        },
        "string-input-1165:803:1150:445": {
            "type": "string",
            "default": "cal_delta_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_delta_(.*)\\[.*"
        },
        "string-input-1205:1831:1596": {
            "type": "string",
            "default": "bld_(.*)_(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "bld_(.*)_(.*)_(.*)(\\[.*)"
        },
        "string-input-1165:2115:357": {
            "type": "string",
            "default": ".*emissions-CO2.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*emissions-CO2.*"
        },
        "string-input-1165:1604:444": {
            "type": "string",
            "default": "dhg_capacity_dh",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "dhg_capacity_dh"
        },
        "string-input-1165:803:1150:444": {
            "type": "string",
            "default": "cal_rate",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate"
        },
        "string-input-1165:2115:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "column-filter-1205:2942:2938:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity+Sum(energy-demand_decentral_renovated[TWh])",
                    "gas-bio+Sum(energy-demand_decentral_renovated[TWh])",
                    "gas-ff-natural+Sum(energy-demand_decentral_renovated[TWh])",
                    "heat-ambient+Sum(energy-demand_decentral_renovated[TWh])",
                    "heat-geothermal+Sum(energy-demand_decentral_renovated[TWh])",
                    "heat-solar+Sum(energy-demand_decentral_renovated[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_decentral_renovated[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_decentral_renovated[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_decentral_renovated[TWh])",
                    "solid-bio+Sum(energy-demand_decentral_renovated[TWh])",
                    "solid-ff-coal+Sum(energy-demand_decentral_renovated[TWh])",
                    "solid-waste+Sum(energy-demand_decentral_renovated[TWh])"
                ]
            }
        },
        "slider-input-1194:362": {
            "type": "object",
            "properties": {
                "double": {
                    "type": "number",
                    "default": 4.0
                }
            },
            "description": "Heating and Cooling Efficiency of the systems installed in the buildings",
            "example": {
                "double": 4.0
            }
        },
        "slider-input-1194:360": {
            "type": "object",
            "properties": {
                "double": {
                    "type": "number",
                    "default": 4.0
                }
            },
            "description": "Share of different heating and cooling systems installed in the buildings",
            "example": {
                "double": 4.0
            }
        },
        "single-selection-1165:1615:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "agg-method-1205:3099:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1165:1604:445": {
            "type": "string",
            "default": "..._energy-demand_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "..._energy-demand_(.*)\\[.*"
        },
        "string-input-1165:1604:446": {
            "type": "string",
            "default": ".*capacity_(.*)\\[.*]",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*capacity_(.*)\\[.*]"
        },
        "string-input-1205:3431:2933:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "single-selection-1184:1190:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1165:2115:349": {
            "type": "string",
            "default": "CO2emissions",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "CO2emissions"
        },
        "boolean-input-2192:2307:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-2192:1604:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-1205:2339:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:2058:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)(\\[.*)"
        },
        "string-input-1205:2058:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1205:2058:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "slider-input-1194:359": {
            "type": "object",
            "properties": {
                "double": {
                    "type": "number",
                    "default": 4.0
                }
            },
            "description": "Energy Need of the buildings expressing their insulation",
            "example": {
                "double": 4.0
            }
        },
        "single-selection-1205:2640:2380:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-1176:1162:1182:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "single-selection-1205:2789:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "column-selection-2819:5227:4909:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "single-selection-1214:1199:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "6.4 Employment"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "6.4 Employment"
            }
        },
        "single-selection-1165:1604:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "column-filter-1205:2834:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-need_residential_district_mfh[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-need_residential_district_mfh[GWh]",
                    "bld_energy-need_residential_district_sfh[GWh]"
                ]
            }
        },
        "string-input-2443:1017:357": {
            "type": "string",
            "default": "bld_floor-area_residential_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "bld_floor-area_residential_.*\\[.*"
        },
        "single-selection-1214:395": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "2.1 Buildings"
                }
            },
            "description": "Name of the current module",
            "example": {
                "variable_value": "2.1 Buildings"
            }
        },
        "single-selection-1214:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "1.3 Technology"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "1.3 Technology"
            }
        },
        "column-filter-2590:2006:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-need_decentral[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-need_decentral[GWh]",
                    "energy-need_decentral_renovated[GWh]",
                    "energy-need_decentral_constructed[GWh]",
                    "energy-need_decentral_unrenovated[GWh]"
                ]
            }
        },
        "string-input-2443:1017:354": {
            "type": "string",
            "default": "Mm²",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mm²"
        },
        "column-filter-1205:2990:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_non-residential_appliances_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_non-residential_appliances_electricity[TWh]",
                    "bld_energy-demand_non-residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_non-residential_lighting_electricity[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_residential_appliances_electricity[TWh]",
                    "bld_energy-demand_residential_cooking_electricity[TWh]",
                    "bld_energy-demand_residential_cooking_gas-ff-natural[TWh]",
                    "bld_energy-demand_residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_residential_lighting_electricity[TWh]",
                    "bld_energy-demand_residential_space-cooling_electricity[TWh]"
                ]
            }
        },
        "string-input-2601:345": {
            "type": "string",
            "default": "bld_agr",
            "description": "Enter Description",
            "example": "bld_agr"
        },
        "boolean-input-1205:2337:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-selection-2192:5044:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1165:1612:1246": {
            "type": "string",
            "default": "TWh",
            "description": "Enter Description",
            "example": "TWh"
        },
        "string-input-1165:1612:1245": {
            "type": "string",
            "default": "dhg_energy-need_district.*",
            "description": "Enter Description",
            "example": "dhg_energy-need_district.*"
        },
        "string-input-1165:1231:349": {
            "type": "string",
            "default": "dhg_efficiencyXdemandshare-sum",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "dhg_efficiencyXdemandshare-sum"
        },
        "country-list-1205:3099:3100:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "boolean-input-1165:2789:817:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "data-type-1154:1170:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical"
                ]
            }
        },
        "string-input-1205:3101:3084:349": {
            "type": "string",
            "default": "energydemand-by-ec",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "energydemand-by-ec"
        },
        "string-input-2443:1017:349": {
            "type": "string",
            "default": "bld_floor-area_residential",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "bld_floor-area_residential"
        },
        "string-input-1154:441:441:460": {
            "type": "string",
            "default": "1000m2",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "1000m2"
        },
        "string-input-1205:2990:349": {
            "type": "string",
            "default": "bld_energy-demand",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand"
        },
        "boolean-input-1218:1077:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "column-selection-1165:2086:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "energycarrier"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "energycarrier"
            }
        },
        "boolean-input-2443:1593:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1165:1187:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "agg-method-2815:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:3101:3084:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:3101:3084:357": {
            "type": "string",
            "default": ".*heat_.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*heat_.*"
        },
        "column-filter-1205:3099:3100:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "column-filter-2788:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "bld_new_dhg_pipe[km]",
                    "bld_floor-area_new_non-residential[m2]",
                    "bld_floor-area_reno_non-residential[m2]",
                    "bld_floor-area_new_residential[m2]",
                    "bld_floor-area_reno_residential[m2]",
                    "bld_new_fridge[num]",
                    "bld_new_freezer[num]",
                    "bld_new_wmachine[num]",
                    "bld_new_dishwasher[num]",
                    "bld_new_dryer[num]",
                    "bld_new_tv[num]",
                    "bld_new_computer[num]",
                    "bld_new_phone[num]"
                ]
            }
        },
        "boolean-input-1205:3148:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1218:1077:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-selection-2819:1603:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "boolean-input-2585:2004:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-1205:2990:357": {
            "type": "string",
            "default": ".*energy-demand_.*_(.*_.*)\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand_.*_(.*_.*)\\[.*"
        },
        "string-input-1205:1533:444": {
            "type": "string",
            "default": "energy-demand_residential",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-demand_residential"
        },
        "boolean-input-2192:5227:4909:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:1533:445": {
            "type": "string",
            "default": "energy-demand_residential_mfh_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "energy-demand_residential_mfh_(.*)\\[.*"
        },
        "string-input-1205:1533:446": {
            "type": "string",
            "default": "energy-demand_residential_sfh_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "energy-demand_residential_sfh_(.*)\\[.*"
        },
        "string-input-1205:2990:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "single-selection-1205:3432:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1205:3101:3086:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "Austria",
                    "Belgium",
                    "Bulgaria",
                    "Croatia",
                    "Cyprus",
                    "Czech Republic",
                    "Denmark",
                    "Estonia",
                    "Finland",
                    "France",
                    "Germany",
                    "Greece",
                    "Hungary",
                    "Ireland",
                    "Italy",
                    "Latvia",
                    "Lithuania",
                    "Luxembourg",
                    "Malta",
                    "Netherlands",
                    "Poland",
                    "Portugal",
                    "Romania",
                    "Slovakia",
                    "Slovenia",
                    "Spain",
                    "Sweden",
                    "Switzerland",
                    "United Kingdom"
                ]
            }
        },
        "single-selection-1205:3101:3084:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1165:2789:808:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_energy-demand_gas-ff-natural[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_energy-demand_gas-ff-natural[TWh]",
                    "dhg_energy-demand_liquid-ff-heatingoil[TWh]",
                    "dhg_energy-demand_solid-ff-coal[TWh]",
                    "dhg_energy-demand_solid-bio[TWh]",
                    "dhg_energy-demand_heat-ambient[TWh]",
                    "dhg_energy-demand_heat-solar[TWh]",
                    "dhg_energy-demand_heat-geothermal[TWh]"
                ]
            }
        },
        "string-input-2192:4930:4909:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "string-input-2192:4930:4909:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)"
        },
        "string-input-2192:4930:4909:1597": {
            "type": "string",
            "default": "$5",
            "description": "Enter Description",
            "example": "$5"
        },
        "single-selection-1205:2420:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-1205:3065:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "single-selection-1165:1215:645": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "column-filter-1670:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "bld_emissions-CH4[Mt]",
                    "bld_emissions-CO2[Mt]",
                    "bld_emissions-N2O[Mt]",
                    "bld_capex_comp[MEUR]",
                    "bld_capex_dishwasher[MEUR]",
                    "bld_capex_dryer[MEUR]",
                    "bld_capex_freezer[MEUR]",
                    "bld_capex_fridge[MEUR]",
                    "bld_capex_phone[MEUR]",
                    "bld_capex_reno-med-off[MEUR]",
                    "bld_capex_reno-med-sfh[MEUR]",
                    "bld_capex_tv[MEUR]",
                    "bld_capex_wmachine[MEUR]",
                    "bld_energy-demand_appliances_electricity[TWh]",
                    "bld_energy-demand_heat_electricity[TWh]",
                    "bld_energy-demand_heat_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_solid-ff-coal[TWh]",
                    "bld_energy-demand_heat_gas-bio[TWh]",
                    "bld_energy-demand_heat_liquid-bio[TWh]",
                    "bld_energy-demand_heat_solid-bio[TWh]",
                    "bld_energy-demand_heat_heat-solar[TWh]",
                    "bld_energy-demand_heat_heat-ambient[TWh]",
                    "bld_energy-demand_heat_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_appliances[TWh]",
                    "bld_energy-demand_non-residential_education[TWh]",
                    "bld_energy-demand_non-residential_health[TWh]",
                    "bld_energy-demand_non-residential_hotels[TWh]",
                    "bld_energy-demand_non-residential_offices[TWh]",
                    "bld_energy-demand_non-residential_other[TWh]",
                    "bld_energy-demand_non-residential_trade[TWh]",
                    "bld_energy-demand_residential_appliances[TWh]",
                    "bld_energy-demand_residential_mfh[TWh]",
                    "bld_energy-demand_residential_sfh[TWh]",
                    "bld_floor-area_non-residential_education[million_m2]",
                    "bld_floor-area_non-residential_health[million_m2]",
                    "bld_floor-area_non-residential_hotels[million_m2]",
                    "bld_floor-area_non-residential_offices[million_m2]",
                    "bld_floor-area_non-residential_other[million_m2]",
                    "bld_floor-area_non-residential_trade[million_m2]",
                    "bld_floor-area_residential_mfh[million_m2]",
                    "bld_floor-area_residential_sfh[million_m2]",
                    "bld_energy-demand_heat_solid-waste[TWh]"
                ]
            }
        },
        "column-filter-1165:802:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cal_dhg_energy-demand_heat-district[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "cal_dhg_energy-demand_heat-district[TWh]"
                ]
            }
        },
        "string-input-2192:4930:2366:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)"
        },
        "string-input-2596:843": {
            "type": "string",
            "default": "Floor Area",
            "description": "Enter Description",
            "example": "Floor Area"
        },
        "string-input-2192:4930:2366:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "column-filter-1205:2939:2869:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "subsector",
                    "Years",
                    "Years_number",
                    "use",
                    "technology_cal",
                    "energycarrier_cal",
                    "energy-demand[GWh]",
                    "gas",
                    "cal_rate_[%]"
                ]
            }
        },
        "data-type-1154:1163:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical"
                ]
            }
        },
        "single-selection-2809:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "boolean-input-1205:3189:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-2192:4930:2366:1599": {
            "type": "string",
            "default": "energycarrier",
            "description": "Enter Description",
            "example": "energycarrier"
        },
        "single-selection-1205:1130:1419": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "CAPEX"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "CAPEX"
            }
        },
        "single-selection-2809:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-1205:1533:460": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TWh"
        },
        "single-selection-1165:1215:658": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "column-filter-1214:1162:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cal_bld_emissions_non-residential_CH4[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "cal_bld_emissions_non-residential_CH4[Mt]",
                    "cal_bld_emissions_residential_CH4[Mt]",
                    "cal_bld_emissions_non-residential_CO2[Mt]",
                    "cal_bld_emissions_residential_CO2[Mt]",
                    "cal_bld_emissions_non-residential_N2O[Mt]",
                    "cal_bld_emissions_residential_N2O[Mt]",
                    "cal_bld_energy_non-residential_hot-water[TWh]",
                    "cal_bld_energy_non-residential_lighting[TWh]",
                    "cal_bld_energy_non-residential_space-cooling[TWh]",
                    "cal_bld_energy_non-residential_space-heating[TWh]",
                    "cal_bld_energy_residential_appliances[TWh]",
                    "cal_bld_energy_residential_cooking[TWh]",
                    "cal_bld_energy_residential_hot-water[TWh]",
                    "cal_bld_energy_residential_lighting[TWh]",
                    "cal_bld_energy_residential_space-cooling[TWh]",
                    "cal_bld_energy_residential_space-heating[TWh]",
                    "cal_bld_energy_non-residential_appliances[TWh]",
                    "cal_bld_energy_non-residential_cooking[TWh]"
                ]
            }
        },
        "string-input-1205:1603:1599": {
            "type": "string",
            "default": "",
            "description": "Enter Description",
            "example": ""
        },
        "single-selection-1205:3065:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1205:2852:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-1205:3154:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "heatcool-efficiency+Sum(ColumnValues)"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "heatcool-efficiency+Sum(ColumnValues)"
                ]
            }
        },
        "boolean-input-2192:4930:2362:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1214:1162:1181:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1165:1238:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "single-selection-1165:1216:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "disabled-1205:1393:1171": {
            "type": "boolean",
            "default": "false",
            "description": "Disable the node. The first input is copied to the output, and calibration rates are set to 1.",
            "example": false
        },
        "single-selection-1205:3213:2380:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:2942:2927:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "single-selection-2603:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-selection-1165:2081:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "energycarrier"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "energycarrier"
            }
        },
        "column-filter-1165:803:1146:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "boolean-input-438:441:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "single-selection-1165:1215:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "SPLIT"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "SPLIT"
            }
        },
        "column-selection-2192:4930:2366:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "boolean-input-1205:3101:3085:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1205:1603:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-1205:1603:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "column-filter-2793:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_gas-ff-natural[TWh]",
                    "bld_energy-demand_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_solid-ff-coal[TWh]",
                    "bld_energy-demand_electricity[TWh]",
                    "bld_energy-demand_non-residential_appliances_electricity[TWh]",
                    "bld_energy-demand_residential_appliances_electricity[TWh]",
                    "bld_energy-demand_non-residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_heat_residential_electricity[TWh]",
                    "bld_energy-demand_heat_non-residential_electricity[TWh]"
                ]
            }
        },
        "string-input-1205:441:445": {
            "type": "string",
            "default": "bld_appliance-lifetime_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "bld_appliance-lifetime_(.*)\\[.*"
        },
        "string-input-1205:441:444": {
            "type": "string",
            "default": "fts_bld_appliance-lifetime",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "fts_bld_appliance-lifetime"
        },
        "column-selection-2819:5227:4977:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "string-input-1205:441:446": {
            "type": "string",
            "default": "ll_bld_appliance-lifetime_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "ll_bld_appliance-lifetime_(.*)\\[.*"
        },
        "column-filter-2187:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_heat_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_heat_electricity[TWh]",
                    "bld_energy-demand_heat_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_heat-ambient[TWh]",
                    "bld_energy-demand_heat_heat-geothermal[TWh]",
                    "bld_energy-demand_heat_heat-solar[TWh]",
                    "bld_energy-demand_heat_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_solid-bio[TWh]",
                    "bld_energy-demand_heat_solid-ff-coal[TWh]"
                ]
            }
        },
        "string-input-1205:3099:3100:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-selection-2583:1713:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "single-selection-1215:1169:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "string-input-1205:3106:349": {
            "type": "string",
            "default": "Sum",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "Sum"
        },
        "single-selection-2816:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "column-filter-1205:3430:2923:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+cal_rate_[%]",
                    "cooking+cal_rate_[%]",
                    "hot-water+cal_rate_[%]",
                    "lighting+cal_rate_[%]",
                    "space-cooling+cal_rate_[%]"
                ]
            }
        },
        "ecmap-2819:2806:4884": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/ecmap.csv"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/ecmap.csv",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "string-input-1205:2942:2934:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "single-selection-2816:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "No"
            }
        },
        "column-filter-1205:2096:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "emissions_CO2[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "emissions_CO2[Mt]",
                    "emissions_CO2_calibrated[Mt]",
                    "emissions_CH4[Mt]",
                    "emissions_CH4_calibrated[Mt]",
                    "emissions_N2O[Mt]",
                    "emissions_N2O_calibrated[Mt]"
                ]
            }
        },
        "column-filter-1165:2800:2570:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_energy-demand_contribution_heat-waste[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_energy-demand_contribution_heat-waste[TWh]",
                    "dhg_energy-demand_contribution_CHP[TWh]",
                    "dhg_energy-demand_gas-ff-natural[TWh]",
                    "dhg_energy-demand_liquid-ff-heatingoil[TWh]",
                    "dhg_energy-demand_solid-ff-coal[TWh]",
                    "dhg_energy-demand_solid-bio[TWh]",
                    "dhg_energy-demand_heat-ambient[TWh]",
                    "dhg_energy-demand_heat-solar[TWh]",
                    "dhg_energy-demand_heat-geothermal[TWh]"
                ]
            }
        },
        "single-selection-1215:1169:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "column-filter-2443:1017:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_floor-area_residential_sfh[Mm2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_floor-area_residential_sfh[Mm2]",
                    "bld_floor-area_residential_mfh[Mm2]"
                ]
            }
        },
        "single-selection-1154:441:413:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "fts"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "fts"
            }
        },
        "column-filter-1205:2783:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-need_renovated[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-need_renovated[GWh]",
                    "energy-need_constructed[GWh]",
                    "energy-need_unrenovated[GWh]",
                    "energy-need[GWh]"
                ]
            }
        },
        "string-input-1154:441:441:445": {
            "type": "string",
            "default": "ots_bld_nonres-floorarea_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "ots_bld_nonres-floorarea_(.*)\\[.*"
        },
        "string-input-1154:441:441:444": {
            "type": "string",
            "default": "fts_bld_nonres-floorarea",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "fts_bld_nonres-floorarea"
        },
        "single-selection-1205:2852:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1154:1056:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1154:441:441:446": {
            "type": "string",
            "default": "ll_bld_nonres-floorarea_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "ll_bld_nonres-floorarea_(.*)\\[.*"
        },
        "single-selection-1205:2845:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:441:460": {
            "type": "string",
            "default": "a",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "a"
        },
        "string-input-1205:3432:2906:843": {
            "type": "string",
            "default": "EU after calibration",
            "description": "Enter Description",
            "example": "EU after calibration"
        },
        "string-input-1205:3105:2951:843": {
            "type": "string",
            "default": "pipes",
            "description": "Enter Description",
            "example": "pipes"
        },
        "column-filter-1205:3429:2947:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_calibrated_appliances[TWh]",
                    "fed_calibrated_cooking[TWh]",
                    "fed_calibrated_hot-water[TWh]",
                    "fed_calibrated_lighting[TWh]",
                    "fed_calibrated_space-cooling[TWh]"
                ]
            }
        },
        "column-filter-1176:1162:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cal_rate_emissions_heat-district-CO2[%]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "cal_rate_emissions_heat-district-CO2[%]",
                    "cal_rate_emissions_heat-district-CH4[%]",
                    "cal_rate_emissions_heat-district-N2O[%]",
                    "cal_rate_energy_heat-district[%]"
                ]
            }
        },
        "boolean-input-1154:1056:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "boolean-input-2192:2323:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1184:1193:343": {
            "type": "string",
            "default": "climate-monthly-solarradiation",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "climate-monthly-solarradiation"
        },
        "string-input-1165:2799:1246": {
            "type": "string",
            "default": "Mt",
            "description": "Enter Description",
            "example": "Mt"
        },
        "string-input-1205:2640:2232:444": {
            "type": "string",
            "default": "cal_delta",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_delta"
        },
        "string-input-1165:2799:1245": {
            "type": "string",
            "default": ".*emissions.*kt.*",
            "description": "Enter Description",
            "example": ".*emissions.*kt.*"
        },
        "string-input-1205:2640:2232:445": {
            "type": "string",
            "default": "cal(.*)",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal(.*)"
        },
        "single-selection-1205:1533:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-1205:721:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "single-selection-1154:441:441:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-1205:1684:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:3056:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_residential_mfh_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_residential_mfh_electricity[TWh]",
                    "bld_energy-demand_residential_sfh_electricity[TWh]",
                    "bld_energy-demand_residential_mfh_gas-bio[TWh]",
                    "bld_energy-demand_residential_sfh_gas-bio[TWh]",
                    "bld_energy-demand_residential_mfh_gas-ff-natural[TWh]",
                    "bld_energy-demand_residential_sfh_gas-ff-natural[TWh]",
                    "bld_energy-demand_residential_mfh_heat-ambient[TWh]",
                    "bld_energy-demand_residential_sfh_heat-ambient[TWh]",
                    "bld_energy-demand_residential_mfh_heat-geothermal[TWh]",
                    "bld_energy-demand_residential_sfh_heat-geothermal[TWh]",
                    "bld_energy-demand_residential_mfh_heat-solar[TWh]",
                    "bld_energy-demand_residential_sfh_heat-solar[TWh]",
                    "bld_energy-demand_residential_mfh_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_residential_sfh_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_residential_mfh_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_residential_sfh_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_residential_mfh_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_residential_sfh_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_residential_mfh_solid-bio[TWh]",
                    "bld_energy-demand_residential_sfh_solid-bio[TWh]",
                    "bld_energy-demand_residential_mfh_solid-ff-coal[TWh]",
                    "bld_energy-demand_residential_sfh_solid-ff-coal[TWh]",
                    "bld_energy-demand_residential_mfh_solid-waste[TWh]",
                    "bld_energy-demand_residential_sfh_solid-waste[TWh]"
                ]
            }
        },
        "string-input-1205:2640:2232:446": {
            "type": "string",
            "default": "energy-demand.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "energy-demand.*"
        },
        "column-filter-1205:2938:2889:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "energy-demand_decentral_renovated[GWh]",
                    "energy-demand_decentral_constructed[GWh]",
                    "energy-demand_decentral_unrenovated[GWh]",
                    "energy-demand_decentral_[GWh]"
                ]
            }
        },
        "string-input-2821:2331:1597": {
            "type": "string",
            "default": "$1\\[$2\\]",
            "description": "Enter Description",
            "example": "$1\\[$2\\]"
        },
        "string-input-2821:2331:1596": {
            "type": "string",
            "default": "(.*) \\((kt CO2)\\)_(.*)",
            "description": "Enter Description",
            "example": "(.*) \\((kt CO2)\\)_(.*)"
        },
        "column-selection-2192:2308:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "subsector"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "subsector"
            }
        },
        "string-input-2821:2331:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "column-filter-2443:1015:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_nonres-floor-area_non-residential_offices[1000m2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_nonres-floor-area_non-residential_offices[1000m2]",
                    "bld_nonres-floor-area_non-residential_hotels[1000m2]",
                    "bld_nonres-floor-area_non-residential_trade[1000m2]",
                    "bld_nonres-floor-area_non-residential_education[1000m2]",
                    "bld_nonres-floor-area_non-residential_health[1000m2]",
                    "bld_nonres-floor-area_non-residential_other[1000m2]"
                ]
            }
        },
        "boolean-input-1165:2792:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-1205:3099:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "single-selection-1205:2783:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1217:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:3431:2906:843": {
            "type": "string",
            "default": "EU after calibration",
            "description": "Enter Description",
            "example": "EU after calibration"
        },
        "column-filter-1205:3434:2947:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "bld_energy-demand_non-residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_non-residential_appliances_electricity[TWh]",
                    "bld_energy-demand_residential_appliances_electricity[TWh]"
                ]
            }
        },
        "boolean-input-1205:3430:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-1165:2789:821:1175:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "co2factor_gas-ff-natural[gCO2/kWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "co2factor_gas-ff-natural[gCO2/kWh]",
                    "co2factor_solid-ff-coal[gCO2/kWh]",
                    "co2factor_liquid-ff-heatingoil[gCO2/kWh]",
                    "co2factor_electricity[gCO2/kWh]",
                    "co2factor_heat-district[gCO2/kWhtherm]",
                    "co2factor_heat-ambient[gCO2/kWh]",
                    "co2factor_heat-solar[gCO2/kWh]",
                    "co2factor_heat-geothermal[gCO2/kWh]",
                    "co2factor_oth[gCO2/kWh]",
                    "co2factor_solid-bio[gCO2/kWh]",
                    "co2factor_solid-bio-woodlog[gCO2/kWh]",
                    "co2factor_solid-bio-pellets[gCO2/kWh]"
                ]
            }
        },
        "string-input-1205:3216:1246": {
            "type": "string",
            "default": "TWh",
            "description": "Enter Description",
            "example": "TWh"
        },
        "string-input-1176:1162:1188": {
            "type": "string",
            "default": "2015",
            "description": "Enter Description",
            "example": "2015"
        },
        "column-selection-1205:1713:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "boolean-input-2443:1017:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1205:3216:1245": {
            "type": "string",
            "default": ".*\\[GWh\\]",
            "description": "Enter Description",
            "example": ".*\\[GWh\\]"
        },
        "single-selection-1205:2640:2231:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "column-filter-2815:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "single-selection-1205:2834:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1205:1393:1150:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "column-filter-1205:2987:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-demand_residential_appliances_electricity_comp[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-demand_residential_appliances_electricity_comp[TWh]",
                    "energy-demand_residential_appliances_electricity_dishwasher[TWh]",
                    "energy-demand_residential_appliances_electricity_dryer[TWh]",
                    "energy-demand_residential_appliances_electricity_freezer[TWh]",
                    "energy-demand_residential_appliances_electricity_fridge[TWh]",
                    "energy-demand_residential_appliances_electricity_phone[TWh]",
                    "energy-demand_residential_appliances_electricity_tv[TWh]",
                    "energy-demand_residential_appliances_electricity_wmachine[TWh]",
                    "energy-demand_residential_cooking_electricity_all-tech[TWh]",
                    "energy-demand_residential_cooking_gas-ff-natural_all-tech[TWh]",
                    "energy-demand_non-residential_hot-water_electricity_all-tech[TWh]",
                    "energy-demand_residential_hot-water_electricity_all-tech[TWh]",
                    "energy-demand_non-residential_lighting_electricity_all-tech[TWh]",
                    "energy-demand_residential_lighting_electricity_all-tech[TWh]",
                    "energy-demand_non-residential_space-cooling_electricity_all-tech[TWh]",
                    "energy-demand_residential_space-cooling_electricity_all-tech[TWh]",
                    "energy-demand_non-residential_appliances_electricity_comp[TWh]"
                ]
            }
        },
        "boolean-input-1205:2421:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "single-selection-2828:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-2191:354": {
            "type": "string",
            "default": "TWh1000m2",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh1000m2"
        },
        "string-input-1205:3101:3086:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "boolean-input-2192:4930:4909:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:2942:2952:843": {
            "type": "string",
            "default": "EU uncalibrated",
            "description": "Enter Description",
            "example": "EU uncalibrated"
        },
        "string-input-1205:2340:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "single-selection-2590:2006:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:2340:1597": {
            "type": "string",
            "default": "$5",
            "description": "Enter Description",
            "example": "$5"
        },
        "boolean-input-1205:2106:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-1205:1393:1151:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-1205:2340:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)_(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)_(.*)_(.*)(\\[.*)"
        },
        "column-filter-1165:2115:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_emissions-CO2_gas-ff-natural[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_emissions-CO2_gas-ff-natural[Mt]",
                    "dhg_emissions-CO2_heat-ambient[Mt]",
                    "dhg_emissions-CO2_heat-geothermal[Mt]",
                    "dhg_emissions-CO2_heat-solar[Mt]",
                    "dhg_emissions-CO2_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions-CO2_solid-bio[Mt]",
                    "dhg_emissions-CO2_solid-ff-coal[Mt]"
                ]
            }
        },
        "string-input-2819:5239:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2819:5239:1599": {
            "type": "string",
            "default": "technology-old",
            "description": "Enter Description",
            "example": "technology-old"
        },
        "string-input-1165:1172:460": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TWh"
        },
        "string-input-2819:5239:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "single-selection-1214:420:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "5.3 Storage"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "5.3 Storage"
            }
        },
        "boolean-input-2819:1602:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:2994:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-2191:357": {
            "type": "string",
            "default": ".*nonres-floorarea.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*nonres-floorarea.*"
        },
        "column-filter-1205:3429:2952:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_uncalibrated_appliances[TWh]",
                    "fed_uncalibrated_cooking[TWh]",
                    "fed_uncalibrated_hot-water[TWh]",
                    "fed_uncalibrated_lighting[TWh]",
                    "fed_uncalibrated_space-cooling[TWh]"
                ]
            }
        },
        "string-input-2443:1592:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "string-input-1205:3372:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "string-input-2443:1592:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "column-selection-1205:1603:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-2443:1592:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-1205:3372:1597": {
            "type": "string",
            "default": "$4",
            "description": "Enter Description",
            "example": "$4"
        },
        "string-input-1205:3372:1596": {
            "type": "string",
            "default": "(.)\\+(.*)_(.*)_(.*)-(.*)-(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.)\\+(.*)_(.*)_(.*)-(.*)-(.*)(\\[.*)"
        },
        "column-selection-2192:4987:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "energycarrier"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "energycarrier"
            }
        },
        "string-input-1165:2800:2570:349": {
            "type": "string",
            "default": "energy-demand",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "energy-demand"
        },
        "string-input-1205:3099:3105:357": {
            "type": "string",
            "default": "199[2-7].*ren.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "199[2-7].*ren.*"
        },
        "column-filter-1205:3433:2947:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "bld_energy-demand_non-residential_appliances_electricity[TWh]",
                    "bld_energy-demand_non-residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_non-residential_lighting_electricity[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_residential_appliances_electricity[TWh]",
                    "bld_energy-demand_residential_cooking_electricity[TWh]",
                    "bld_energy-demand_residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_residential_lighting_electricity[TWh]",
                    "bld_energy-demand_residential_space-cooling_electricity[TWh]"
                ]
            }
        },
        "string-input-1205:2078:1245": {
            "type": "string",
            "default": ".*emission.*",
            "description": "Enter Description",
            "example": ".*emission.*"
        },
        "column-filter-1205:3429:2906:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances[GWh]",
                    "cooking[GWh]",
                    "hot-water[GWh]",
                    "lighting[GWh]",
                    "space-cooling[GWh]"
                ]
            }
        },
        "string-input-1205:2078:1246": {
            "type": "string",
            "default": "Mt/TWh",
            "description": "Enter Description",
            "example": "Mt/TWh"
        },
        "string-input-1205:3099:3105:354": {
            "type": "string",
            "default": "Mm2",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mm2"
        },
        "string-input-1214:1162:1208:644": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-2191:349": {
            "type": "string",
            "default": "bld_floor-area_non-residential",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "bld_floor-area_non-residential"
        },
        "single-selection-1214:1162:1166:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1214:1162:1208:641": {
            "type": "string",
            "default": "cal_rate_emissions",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate_emissions"
        },
        "string-input-1214:1162:1208:642": {
            "type": "string",
            "default": ".*bld_emissions_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. ",
            "example": ".*bld_emissions_(.*)\\[.*"
        },
        "boolean-input-1205:3101:3083:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1214:1162:1208:643": {
            "type": "string",
            "default": "emissions.*",
            "description": "Pattern selecting the fixed column. The pattern should return only one column.  \nExamples: \"sector_demand_.*\"",
            "example": "emissions.*"
        },
        "string-input-2812:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "boolean-input-1205:1819:1436": {
            "type": "boolean",
            "default": "false",
            "description": "Include unit costs in output",
            "example": false
        },
        "single-selection-1165:1230:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1165:2800:2570:357": {
            "type": "string",
            "default": ".*energy-demand.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand.*"
        },
        "string-input-1165:1172:446": {
            "type": "string",
            "default": "cal_rate.*heat-district\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "cal_rate.*heat-district\\[.*"
        },
        "column-filter-2809:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "boolean-input-1205:3432:2951:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1165:1172:445": {
            "type": "string",
            "default": "..._energy-demand_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "..._energy-demand_(.*)\\[.*"
        },
        "string-input-1165:1172:444": {
            "type": "string",
            "default": "dhg_energy-demand",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "dhg_energy-demand"
        },
        "column-selection-2819:5047:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:722:460": {
            "type": "string",
            "default": "num",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "num"
        },
        "string-input-1165:2800:2570:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "column-filter-1205:2942:2934:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "gas-bio+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "gas-ff-natural+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "heat-ambient+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "heat-geothermal+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "heat-solar+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "solid-bio+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "solid-ff-coal+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "solid-waste+Sum(energy-demand_calibrated_decentral_constructed[TWh])"
                ]
            }
        },
        "column-selection-2583:1684:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "boolean-input-1205:1602:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-1214:1162:1207:646": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "single-selection-1205:3430:2951:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1154:1181:343": {
            "type": "string",
            "default": "fixed-assumptions",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "fixed-assumptions"
        },
        "string-input-1165:1230:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "boolean-input-1205:3099:3104:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "column-filter-1205:2792:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "emission-factor_CO2[Mt/TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "emission-factor_CO2[Mt/TWh]"
                ]
            }
        },
        "string-input-1205:3099:3105:349": {
            "type": "string",
            "default": "1992-1997",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "1992-1997"
        },
        "column-selection-1205:1831:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "single-selection-1165:1172:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1205:2793:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2819:5227:4909:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2819:5227:4909:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-2819:5227:4909:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "string-input-2192:1603:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "string-input-1205:3036:357": {
            "type": "string",
            "default": "bld_emissions-(..._.*tial_.*)_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "bld_emissions-(..._.*tial_.*)_.*\\[.*"
        },
        "string-input-2192:1603:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2192:1603:1596": {
            "type": "string",
            "default": "(.*)(\\(ktoe\\))_(.*)",
            "description": "Enter Description",
            "example": "(.*)(\\(ktoe\\))_(.*)"
        },
        "boolean-input-1205:3058:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "string-input-1176:1162:1208:641": {
            "type": "string",
            "default": "cal_rate_emissions",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate_emissions"
        },
        "string-input-1176:1162:1208:642": {
            "type": "string",
            "default": ".*dhg_emissions_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. ",
            "example": ".*dhg_emissions_(.*)\\[.*"
        },
        "string-input-2819:4867": {
            "type": "string",
            "default": "JRC-IDEES",
            "description": "Enter Description",
            "example": "JRC-IDEES"
        },
        "string-input-1176:1162:1208:643": {
            "type": "string",
            "default": "emissions.*",
            "description": "Pattern selecting the fixed column. The pattern should return only one column.  \nExamples: \"sector_demand_.*\"",
            "example": "emissions.*"
        },
        "string-input-1176:1162:1208:644": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-2828:345": {
            "type": "string",
            "default": "bld_output_cal_node",
            "description": "Enter Description",
            "example": "bld_output_cal_node"
        },
        "boolean-input-1205:1596:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-1217:643:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "string-input-1205:2640:2232:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "string-input-1205:1130:1420": {
            "type": "string",
            "default": "bld_floorarea_(.+)\\[.*",
            "description": "Pattern selecting the activity to use for cost calculation. The technology is identified by a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the technology identifier.\n",
            "example": "bld_floorarea_(.+)\\[.*"
        },
        "string-input-1205:3432:2947:843": {
            "type": "string",
            "default": "EU calibrated",
            "description": "Enter Description",
            "example": "EU calibrated"
        },
        "string-input-1205:3036:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "string-input-1165:1230:445": {
            "type": "string",
            "default": ".*technology.*_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*technology.*_(.*)\\[.*"
        },
        "string-input-1165:1230:444": {
            "type": "string",
            "default": "dhg_efficiencyXdemandshare",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "dhg_efficiencyXdemandshare"
        },
        "country-list-1205:3101:2808:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "string-input-1165:1230:446": {
            "type": "string",
            "default": ".*efficiency_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*efficiency_(.*)\\[.*"
        },
        "string-input-1205:722:445": {
            "type": "string",
            "default": ".*appliance-lifetime_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*appliance-lifetime_(.*)\\[.*"
        },
        "string-input-2808:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:722:444": {
            "type": "string",
            "default": "appliance-new-ratio",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "appliance-new-ratio"
        },
        "string-input-1205:3036:349": {
            "type": "string",
            "default": "bld_emissions",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_emissions"
        },
        "single-selection-1205:3085:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:722:446": {
            "type": "string",
            "default": "divisor-one",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "divisor-one"
        },
        "boolean-input-1165:1615:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1205:2420:444": {
            "type": "string",
            "default": "energy-demand_calibrated",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-demand_calibrated"
        },
        "column-filter-1205:2006:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-need_decentral__renovated[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-need_decentral__renovated[GWh]",
                    "energy-need_decentral__constructed[GWh]",
                    "energy-need_decentral__unrenovated[GWh]",
                    "energy-need_decentral_[GWh]"
                ]
            }
        },
        "column-filter-1205:3065:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_emissions-CH4_residential_appliances[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_emissions-CH4_residential_appliances[Mt]",
                    "bld_emissions-CO2_residential_appliances[Mt]",
                    "bld_emissions-N2O_residential_appliances[Mt]",
                    "bld_emissions-CO2_non-residential_appliances[Mt]",
                    "bld_emissions-N2O_non-residential_appliances[Mt]",
                    "bld_emissions-CH4_non-residential_appliances[Mt]",
                    "bld_emissions-CH4_residential_non-space-heating_gas-ff-natural[Mt]",
                    "bld_emissions-CO2_residential_non-space-heating_gas-ff-natural[Mt]",
                    "bld_emissions-N2O_residential_non-space-heating_gas-ff-natural[Mt]",
                    "bld_emissions_CO2_non-residential_education_gas-bio[Mt]",
                    "bld_emissions_N2O_non-residential_education_gas-bio[Mt]",
                    "bld_emissions_CH4_non-residential_education_gas-bio[Mt]",
                    "bld_emissions_CO2_non-residential_health_gas-bio[Mt]",
                    "bld_emissions_N2O_non-residential_health_gas-bio[Mt]",
                    "bld_emissions_CH4_non-residential_health_gas-bio[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_gas-bio[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_gas-bio[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_gas-bio[Mt]",
                    "bld_emissions_CO2_non-residential_offices_gas-bio[Mt]",
                    "bld_emissions_N2O_non-residential_offices_gas-bio[Mt]",
                    "bld_emissions_CH4_non-residential_offices_gas-bio[Mt]",
                    "bld_emissions_CO2_non-residential_other_gas-bio[Mt]",
                    "bld_emissions_N2O_non-residential_other_gas-bio[Mt]",
                    "bld_emissions_CH4_non-residential_other_gas-bio[Mt]",
                    "bld_emissions_CO2_non-residential_trade_gas-bio[Mt]",
                    "bld_emissions_N2O_non-residential_trade_gas-bio[Mt]",
                    "bld_emissions_CH4_non-residential_trade_gas-bio[Mt]",
                    "bld_emissions_CO2_residential_mfh_gas-bio[Mt]",
                    "bld_emissions_N2O_residential_mfh_gas-bio[Mt]",
                    "bld_emissions_CH4_residential_mfh_gas-bio[Mt]",
                    "bld_emissions_CO2_residential_sfh_gas-bio[Mt]",
                    "bld_emissions_N2O_residential_sfh_gas-bio[Mt]",
                    "bld_emissions_CH4_residential_sfh_gas-bio[Mt]",
                    "bld_emissions_CO2_non-residential_education_gas-ff-natural[Mt]",
                    "bld_emissions_N2O_non-residential_education_gas-ff-natural[Mt]",
                    "bld_emissions_CH4_non-residential_education_gas-ff-natural[Mt]",
                    "bld_emissions_CO2_non-residential_health_gas-ff-natural[Mt]",
                    "bld_emissions_N2O_non-residential_health_gas-ff-natural[Mt]",
                    "bld_emissions_CH4_non-residential_health_gas-ff-natural[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_gas-ff-natural[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_gas-ff-natural[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_gas-ff-natural[Mt]",
                    "bld_emissions_CO2_non-residential_offices_gas-ff-natural[Mt]",
                    "bld_emissions_N2O_non-residential_offices_gas-ff-natural[Mt]",
                    "bld_emissions_CH4_non-residential_offices_gas-ff-natural[Mt]",
                    "bld_emissions_CO2_non-residential_other_gas-ff-natural[Mt]",
                    "bld_emissions_N2O_non-residential_other_gas-ff-natural[Mt]",
                    "bld_emissions_CH4_non-residential_other_gas-ff-natural[Mt]",
                    "bld_emissions_CO2_non-residential_trade_gas-ff-natural[Mt]",
                    "bld_emissions_N2O_non-residential_trade_gas-ff-natural[Mt]",
                    "bld_emissions_CH4_non-residential_trade_gas-ff-natural[Mt]",
                    "bld_emissions_CO2_residential_mfh_gas-ff-natural[Mt]",
                    "bld_emissions_N2O_residential_mfh_gas-ff-natural[Mt]",
                    "bld_emissions_CH4_residential_mfh_gas-ff-natural[Mt]",
                    "bld_emissions_CO2_residential_sfh_gas-ff-natural[Mt]",
                    "bld_emissions_N2O_residential_sfh_gas-ff-natural[Mt]",
                    "bld_emissions_CH4_residential_sfh_gas-ff-natural[Mt]",
                    "bld_emissions_CO2_non-residential_education_heat-ambient[Mt]",
                    "bld_emissions_N2O_non-residential_education_heat-ambient[Mt]",
                    "bld_emissions_CH4_non-residential_education_heat-ambient[Mt]",
                    "bld_emissions_CO2_non-residential_health_heat-ambient[Mt]",
                    "bld_emissions_N2O_non-residential_health_heat-ambient[Mt]",
                    "bld_emissions_CH4_non-residential_health_heat-ambient[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_heat-ambient[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_heat-ambient[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_heat-ambient[Mt]",
                    "bld_emissions_CO2_non-residential_offices_heat-ambient[Mt]",
                    "bld_emissions_N2O_non-residential_offices_heat-ambient[Mt]",
                    "bld_emissions_CH4_non-residential_offices_heat-ambient[Mt]",
                    "bld_emissions_CO2_non-residential_other_heat-ambient[Mt]",
                    "bld_emissions_N2O_non-residential_other_heat-ambient[Mt]",
                    "bld_emissions_CH4_non-residential_other_heat-ambient[Mt]",
                    "bld_emissions_CO2_non-residential_trade_heat-ambient[Mt]",
                    "bld_emissions_N2O_non-residential_trade_heat-ambient[Mt]",
                    "bld_emissions_CH4_non-residential_trade_heat-ambient[Mt]",
                    "bld_emissions_CO2_residential_mfh_heat-ambient[Mt]",
                    "bld_emissions_N2O_residential_mfh_heat-ambient[Mt]",
                    "bld_emissions_CH4_residential_mfh_heat-ambient[Mt]",
                    "bld_emissions_CO2_residential_sfh_heat-ambient[Mt]",
                    "bld_emissions_N2O_residential_sfh_heat-ambient[Mt]",
                    "bld_emissions_CH4_residential_sfh_heat-ambient[Mt]",
                    "bld_emissions_CO2_non-residential_education_heat-geothermal[Mt]",
                    "bld_emissions_N2O_non-residential_education_heat-geothermal[Mt]",
                    "bld_emissions_CH4_non-residential_education_heat-geothermal[Mt]",
                    "bld_emissions_CO2_non-residential_health_heat-geothermal[Mt]",
                    "bld_emissions_N2O_non-residential_health_heat-geothermal[Mt]",
                    "bld_emissions_CH4_non-residential_health_heat-geothermal[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_heat-geothermal[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_heat-geothermal[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_heat-geothermal[Mt]",
                    "bld_emissions_CO2_non-residential_offices_heat-geothermal[Mt]",
                    "bld_emissions_N2O_non-residential_offices_heat-geothermal[Mt]",
                    "bld_emissions_CH4_non-residential_offices_heat-geothermal[Mt]",
                    "bld_emissions_CO2_non-residential_other_heat-geothermal[Mt]",
                    "bld_emissions_N2O_non-residential_other_heat-geothermal[Mt]",
                    "bld_emissions_CH4_non-residential_other_heat-geothermal[Mt]",
                    "bld_emissions_CO2_non-residential_trade_heat-geothermal[Mt]",
                    "bld_emissions_N2O_non-residential_trade_heat-geothermal[Mt]",
                    "bld_emissions_CH4_non-residential_trade_heat-geothermal[Mt]",
                    "bld_emissions_CO2_residential_mfh_heat-geothermal[Mt]",
                    "bld_emissions_N2O_residential_mfh_heat-geothermal[Mt]",
                    "bld_emissions_CH4_residential_mfh_heat-geothermal[Mt]",
                    "bld_emissions_CO2_residential_sfh_heat-geothermal[Mt]",
                    "bld_emissions_N2O_residential_sfh_heat-geothermal[Mt]",
                    "bld_emissions_CH4_residential_sfh_heat-geothermal[Mt]",
                    "bld_emissions_CO2_non-residential_education_heat-solar[Mt]",
                    "bld_emissions_N2O_non-residential_education_heat-solar[Mt]",
                    "bld_emissions_CH4_non-residential_education_heat-solar[Mt]",
                    "bld_emissions_CO2_non-residential_health_heat-solar[Mt]",
                    "bld_emissions_N2O_non-residential_health_heat-solar[Mt]",
                    "bld_emissions_CH4_non-residential_health_heat-solar[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_heat-solar[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_heat-solar[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_heat-solar[Mt]",
                    "bld_emissions_CO2_non-residential_offices_heat-solar[Mt]",
                    "bld_emissions_N2O_non-residential_offices_heat-solar[Mt]",
                    "bld_emissions_CH4_non-residential_offices_heat-solar[Mt]",
                    "bld_emissions_CO2_non-residential_other_heat-solar[Mt]",
                    "bld_emissions_N2O_non-residential_other_heat-solar[Mt]",
                    "bld_emissions_CH4_non-residential_other_heat-solar[Mt]",
                    "bld_emissions_CO2_non-residential_trade_heat-solar[Mt]",
                    "bld_emissions_N2O_non-residential_trade_heat-solar[Mt]",
                    "bld_emissions_CH4_non-residential_trade_heat-solar[Mt]",
                    "bld_emissions_CO2_residential_mfh_heat-solar[Mt]",
                    "bld_emissions_N2O_residential_mfh_heat-solar[Mt]",
                    "bld_emissions_CH4_residential_mfh_heat-solar[Mt]",
                    "bld_emissions_CO2_residential_sfh_heat-solar[Mt]",
                    "bld_emissions_N2O_residential_sfh_heat-solar[Mt]",
                    "bld_emissions_CH4_residential_sfh_heat-solar[Mt]",
                    "bld_emissions_CO2_non-residential_education_liquid-bio-diesel[Mt]",
                    "bld_emissions_N2O_non-residential_education_liquid-bio-diesel[Mt]",
                    "bld_emissions_CH4_non-residential_education_liquid-bio-diesel[Mt]",
                    "bld_emissions_CO2_non-residential_health_liquid-bio-diesel[Mt]",
                    "bld_emissions_N2O_non-residential_health_liquid-bio-diesel[Mt]",
                    "bld_emissions_CH4_non-residential_health_liquid-bio-diesel[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_liquid-bio-diesel[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_liquid-bio-diesel[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_liquid-bio-diesel[Mt]",
                    "bld_emissions_CO2_non-residential_offices_liquid-bio-diesel[Mt]",
                    "bld_emissions_N2O_non-residential_offices_liquid-bio-diesel[Mt]",
                    "bld_emissions_CH4_non-residential_offices_liquid-bio-diesel[Mt]",
                    "bld_emissions_CO2_non-residential_other_liquid-bio-diesel[Mt]",
                    "bld_emissions_N2O_non-residential_other_liquid-bio-diesel[Mt]",
                    "bld_emissions_CH4_non-residential_other_liquid-bio-diesel[Mt]",
                    "bld_emissions_CO2_non-residential_trade_liquid-bio-diesel[Mt]",
                    "bld_emissions_N2O_non-residential_trade_liquid-bio-diesel[Mt]",
                    "bld_emissions_CH4_non-residential_trade_liquid-bio-diesel[Mt]",
                    "bld_emissions_CO2_residential_mfh_liquid-bio-diesel[Mt]",
                    "bld_emissions_N2O_residential_mfh_liquid-bio-diesel[Mt]",
                    "bld_emissions_CH4_residential_mfh_liquid-bio-diesel[Mt]",
                    "bld_emissions_CO2_residential_sfh_liquid-bio-diesel[Mt]",
                    "bld_emissions_N2O_residential_sfh_liquid-bio-diesel[Mt]",
                    "bld_emissions_CH4_residential_sfh_liquid-bio-diesel[Mt]",
                    "bld_emissions_CO2_non-residential_education_liquid-bio-gasoline[Mt]",
                    "bld_emissions_N2O_non-residential_education_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CH4_non-residential_education_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CO2_non-residential_health_liquid-bio-gasoline[Mt]",
                    "bld_emissions_N2O_non-residential_health_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CH4_non-residential_health_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_liquid-bio-gasoline[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CO2_non-residential_offices_liquid-bio-gasoline[Mt]",
                    "bld_emissions_N2O_non-residential_offices_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CH4_non-residential_offices_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CO2_non-residential_other_liquid-bio-gasoline[Mt]",
                    "bld_emissions_N2O_non-residential_other_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CH4_non-residential_other_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CO2_non-residential_trade_liquid-bio-gasoline[Mt]",
                    "bld_emissions_N2O_non-residential_trade_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CH4_non-residential_trade_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CO2_residential_mfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions_N2O_residential_mfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CH4_residential_mfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CO2_residential_sfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions_N2O_residential_sfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CH4_residential_sfh_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CO2_non-residential_education_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_N2O_non-residential_education_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CH4_non-residential_education_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CO2_non-residential_health_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_N2O_non-residential_health_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CH4_non-residential_health_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CO2_non-residential_offices_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_N2O_non-residential_offices_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CH4_non-residential_offices_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CO2_non-residential_other_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_N2O_non-residential_other_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CH4_non-residential_other_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CO2_non-residential_trade_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_N2O_non-residential_trade_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CH4_non-residential_trade_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CO2_residential_mfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_N2O_residential_mfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CH4_residential_mfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CO2_residential_sfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_N2O_residential_sfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CH4_residential_sfh_liquid-ff-heatingoil[Mt]",
                    "bld_emissions_CO2_non-residential_education_solid-bio[Mt]",
                    "bld_emissions_N2O_non-residential_education_solid-bio[Mt]",
                    "bld_emissions_CH4_non-residential_education_solid-bio[Mt]",
                    "bld_emissions_CO2_non-residential_health_solid-bio[Mt]",
                    "bld_emissions_N2O_non-residential_health_solid-bio[Mt]",
                    "bld_emissions_CH4_non-residential_health_solid-bio[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_solid-bio[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_solid-bio[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_solid-bio[Mt]",
                    "bld_emissions_CO2_non-residential_offices_solid-bio[Mt]",
                    "bld_emissions_N2O_non-residential_offices_solid-bio[Mt]",
                    "bld_emissions_CH4_non-residential_offices_solid-bio[Mt]",
                    "bld_emissions_CO2_non-residential_other_solid-bio[Mt]",
                    "bld_emissions_N2O_non-residential_other_solid-bio[Mt]",
                    "bld_emissions_CH4_non-residential_other_solid-bio[Mt]",
                    "bld_emissions_CO2_non-residential_trade_solid-bio[Mt]",
                    "bld_emissions_N2O_non-residential_trade_solid-bio[Mt]",
                    "bld_emissions_CH4_non-residential_trade_solid-bio[Mt]",
                    "bld_emissions_CO2_residential_mfh_solid-bio[Mt]",
                    "bld_emissions_N2O_residential_mfh_solid-bio[Mt]",
                    "bld_emissions_CH4_residential_mfh_solid-bio[Mt]",
                    "bld_emissions_CO2_residential_sfh_solid-bio[Mt]",
                    "bld_emissions_N2O_residential_sfh_solid-bio[Mt]",
                    "bld_emissions_CH4_residential_sfh_solid-bio[Mt]",
                    "bld_emissions_CO2_non-residential_education_solid-ff-coal[Mt]",
                    "bld_emissions_N2O_non-residential_education_solid-ff-coal[Mt]",
                    "bld_emissions_CH4_non-residential_education_solid-ff-coal[Mt]",
                    "bld_emissions_CO2_non-residential_health_solid-ff-coal[Mt]",
                    "bld_emissions_N2O_non-residential_health_solid-ff-coal[Mt]",
                    "bld_emissions_CH4_non-residential_health_solid-ff-coal[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_solid-ff-coal[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_solid-ff-coal[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_solid-ff-coal[Mt]",
                    "bld_emissions_CO2_non-residential_offices_solid-ff-coal[Mt]",
                    "bld_emissions_N2O_non-residential_offices_solid-ff-coal[Mt]",
                    "bld_emissions_CH4_non-residential_offices_solid-ff-coal[Mt]",
                    "bld_emissions_CO2_non-residential_other_solid-ff-coal[Mt]",
                    "bld_emissions_N2O_non-residential_other_solid-ff-coal[Mt]",
                    "bld_emissions_CH4_non-residential_other_solid-ff-coal[Mt]",
                    "bld_emissions_CO2_non-residential_trade_solid-ff-coal[Mt]",
                    "bld_emissions_N2O_non-residential_trade_solid-ff-coal[Mt]",
                    "bld_emissions_CH4_non-residential_trade_solid-ff-coal[Mt]",
                    "bld_emissions_CO2_residential_mfh_solid-ff-coal[Mt]",
                    "bld_emissions_N2O_residential_mfh_solid-ff-coal[Mt]",
                    "bld_emissions_CH4_residential_mfh_solid-ff-coal[Mt]",
                    "bld_emissions_CO2_residential_sfh_solid-ff-coal[Mt]",
                    "bld_emissions_N2O_residential_sfh_solid-ff-coal[Mt]",
                    "bld_emissions_CH4_residential_sfh_solid-ff-coal[Mt]",
                    "bld_emissions_CO2_non-residential_education_solid-waste[Mt]",
                    "bld_emissions_N2O_non-residential_education_solid-waste[Mt]",
                    "bld_emissions_CH4_non-residential_education_solid-waste[Mt]",
                    "bld_emissions_CO2_non-residential_health_solid-waste[Mt]",
                    "bld_emissions_N2O_non-residential_health_solid-waste[Mt]",
                    "bld_emissions_CH4_non-residential_health_solid-waste[Mt]",
                    "bld_emissions_CO2_non-residential_hotels_solid-waste[Mt]",
                    "bld_emissions_N2O_non-residential_hotels_solid-waste[Mt]",
                    "bld_emissions_CH4_non-residential_hotels_solid-waste[Mt]",
                    "bld_emissions_CO2_non-residential_offices_solid-waste[Mt]",
                    "bld_emissions_N2O_non-residential_offices_solid-waste[Mt]",
                    "bld_emissions_CH4_non-residential_offices_solid-waste[Mt]",
                    "bld_emissions_CO2_non-residential_other_solid-waste[Mt]",
                    "bld_emissions_N2O_non-residential_other_solid-waste[Mt]",
                    "bld_emissions_CH4_non-residential_other_solid-waste[Mt]",
                    "bld_emissions_CO2_non-residential_trade_solid-waste[Mt]",
                    "bld_emissions_N2O_non-residential_trade_solid-waste[Mt]",
                    "bld_emissions_CH4_non-residential_trade_solid-waste[Mt]",
                    "bld_emissions_CO2_residential_mfh_solid-waste[Mt]",
                    "bld_emissions_N2O_residential_mfh_solid-waste[Mt]",
                    "bld_emissions_CH4_residential_mfh_solid-waste[Mt]",
                    "bld_emissions_CO2_residential_sfh_solid-waste[Mt]",
                    "bld_emissions_N2O_residential_sfh_solid-waste[Mt]",
                    "bld_emissions_CH4_residential_sfh_solid-waste[Mt]"
                ]
            }
        },
        "string-input-1205:2420:445": {
            "type": "string",
            "default": "energy-demand_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "energy-demand_(.*)\\[.*"
        },
        "string-input-1205:2420:446": {
            "type": "string",
            "default": "cal_rate_.*\\[.*\\]",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "cal_rate_.*\\[.*\\]"
        },
        "single-selection-1165:1172:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2819:1603:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "string-input-2819:1603:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2819:1603:1596": {
            "type": "string",
            "default": "(.*)(\\(ktoe\\))_(.*)",
            "description": "Enter Description",
            "example": "(.*)(\\(ktoe\\))_(.*)"
        },
        "string-input-1205:1014:642": {
            "type": "string",
            "default": ".*mix_(...)_.*\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. ",
            "example": ".*mix_(...)_.*\\[.*"
        },
        "string-input-1205:1014:641": {
            "type": "string",
            "default": "bld_floor-area_residential",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "bld_floor-area_residential"
        },
        "string-input-1205:1014:644": {
            "type": "string",
            "default": "1000m2",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "1000m2"
        },
        "string-input-1205:1014:643": {
            "type": "string",
            "default": ".*floor-area_residential.*",
            "description": "Pattern selecting the fixed column. The pattern should return only one column.  \nExamples: \"sector_demand_.*\"",
            "example": ".*floor-area_residential.*"
        },
        "single-selection-1184:1190:806": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "baseyear: Country-rows, ParameterNames-columns, Category-sheets "
                }
            },
            "description": "Select between 3 different import formats",
            "example": {
                "variable_value": "baseyear: Country-rows, ParameterNames-columns, Category-sheets "
            }
        },
        "column-filter-2815:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_liquid-bio[TWh]"
                ]
            }
        },
        "string-input-2192:2308:1596": {
            "type": "string",
            "default": "(.*):(.*)",
            "description": "Enter Description",
            "example": "(.*):(.*)"
        },
        "string-input-1165:2789:817:357": {
            "type": "string",
            "default": ".*emissions.*district.*CO2.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*emissions.*district.*CO2.*"
        },
        "column-filter-2805:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-2192:2308:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1205:3106:3219:357": {
            "type": "string",
            "default": ".*\\+.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*\\+.*"
        },
        "single-selection-1176:395": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "2.3 District Heating"
                }
            },
            "description": "Name of the current module",
            "example": {
                "variable_value": "2.3 District Heating"
            }
        },
        "string-input-2192:2308:1599": {
            "type": "string",
            "default": "use",
            "description": "Enter Description",
            "example": "use"
        },
        "string-input-1205:3106:3219:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "single-selection-1176:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "3.1a Industry"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "3.1a Industry"
            }
        },
        "slider-input-1194:406": {
            "type": "object",
            "properties": {
                "double": {
                    "type": "number",
                    "default": 4.0
                }
            },
            "description": "Appliance efficiency (energy use in kWh)",
            "example": {
                "double": 4.0
            }
        },
        "column-selection-1205:2340:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "boolean-input-1176:1162:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-selection-1205:3158:1600:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "technology"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "technology"
            }
        },
        "column-selection-2821:2331:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:2942:2938:843": {
            "type": "string",
            "default": "Romania before calibration",
            "description": "Enter Description",
            "example": "Romania before calibration"
        },
        "data-type-1154:1174:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical"
                ]
            }
        },
        "slider-input-1194:400": {
            "type": "object",
            "properties": {
                "double": {
                    "type": "number",
                    "default": 4.0
                }
            },
            "description": "Percentage of district heating per Member State",
            "example": {
                "double": 4.0
            }
        },
        "string-input-2819:5385:1246": {
            "type": "string",
            "default": "TWh",
            "description": "Enter Description",
            "example": "TWh"
        },
        "string-input-2819:5385:1245": {
            "type": "string",
            "default": "ColumnValues",
            "description": "Enter Description",
            "example": "ColumnValues"
        },
        "boolean-input-1165:1436": {
            "type": "boolean",
            "default": "false",
            "description": "Include unit costs in output",
            "example": false
        },
        "single-selection-1184:1189:806": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "constants: constantname-rows, constantvalue-rows"
                }
            },
            "description": "Select between 3 different import formats",
            "example": {
                "variable_value": "constants: constantname-rows, constantvalue-rows"
            }
        },
        "column-selection-1205:3146:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "column-selection-2583:1596:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "column-filter-1179:1146:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cal_tra_calibration_HDV[Gtkm]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "cal_tra_calibration_HDV[Gtkm]",
                    "cal_tra_calibration_rail[Gtkm]",
                    "cal_tra_calibration_IWW[Gtkm]",
                    "cal_tra_calibration_aviation[TWh]",
                    "cal_tra_total[energy]",
                    "cal_tra_rail[energy]",
                    "cal_tra_road[energy]",
                    "cal_tra_aviation-international[energy]",
                    "cal_tra_aviation-domestic[energy]",
                    "cal_tra_navigation-domestic[energy]",
                    "cal_tra_pipeline[energy]",
                    "cal_tra_non-spec[energy]",
                    "cal_tra_calibration_transport-emissions[GtCO2e]"
                ]
            }
        },
        "single-selection-1205:3056:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1214:1162:1182:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Sum(cal_rate_emissions_non-residential_CH4[%])"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "Sum(cal_rate_emissions_non-residential_CH4[%])",
                    "Sum(cal_rate_emissions_non-residential_CO2[%])",
                    "Sum(cal_rate_emissions_non-residential_N2O[%])",
                    "Sum(cal_rate_emissions_residential_CH4[%])",
                    "Sum(cal_rate_emissions_residential_CO2[%])",
                    "Sum(cal_rate_emissions_residential_N2O[%])",
                    "Sum(cal_bld_emissions_non-residential_CH4[Mt])",
                    "Sum(cal_bld_emissions_residential_CH4[Mt])",
                    "Sum(cal_bld_emissions_non-residential_CO2[Mt])",
                    "Sum(cal_bld_emissions_residential_CO2[Mt])",
                    "Sum(cal_bld_emissions_non-residential_N2O[Mt])",
                    "Sum(cal_bld_emissions_residential_N2O[Mt])"
                ]
            }
        },
        "string-input-2618:843": {
            "type": "string",
            "default": "Industry",
            "description": "Enter Description",
            "example": "Industry"
        },
        "column-selection-2819:5239:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "technology"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "technology"
            }
        },
        "single-selection-1205:2640:2380:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "agg-method-1205:3099:3100:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1205:2942:2947:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_calibrated_electricity[TWh]",
                    "fed_calibrated_gas-bio[TWh]",
                    "fed_calibrated_gas-ff-natural[TWh]",
                    "fed_calibrated_heat-ambient[TWh]",
                    "fed_calibrated_heat-geothermal[TWh]",
                    "fed_calibrated_heat-solar[TWh]",
                    "fed_calibrated_liquid-bio-diesel[TWh]",
                    "fed_calibrated_liquid-bio-gasoline[TWh]",
                    "fed_calibrated_liquid-ff-heatingoil[TWh]",
                    "fed_calibrated_solid-bio[TWh]",
                    "fed_calibrated_solid-ff-coal[TWh]",
                    "fed_calibrated_solid-waste[TWh]"
                ]
            }
        },
        "string-input-2815:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-selection-1205:2715:2505:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "Column Header (#2)"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "Column Header (#2)"
            }
        },
        "boolean-input-1205:3154:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "boolean-input-441:441:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-2805:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "single-selection-1205:1819:1419": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "CAPEX"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "CAPEX"
            }
        },
        "single-selection-1165:803:1150:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-2192:4867": {
            "type": "string",
            "default": "JRC-IDEES",
            "description": "Enter Description",
            "example": "JRC-IDEES"
        },
        "slider-input-1194:425": {
            "type": "object",
            "properties": {
                "double": {
                    "type": "number",
                    "default": 4.0
                }
            },
            "description": "Non-residential floor area",
            "example": {
                "double": 4.0
            }
        },
        "string-input-1205:2793:460": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mt"
        },
        "column-filter-2812:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_emissions-CH4[Mt]",
                    "bld_emissions-CO2[Mt]",
                    "bld_emissions-N2O[Mt]"
                ]
            }
        },
        "single-selection-1214:1217:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "6.3 Air Pollution"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "6.3 Air Pollution"
            }
        },
        "boolean-input-1205:3429:2951:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-1154:1182:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_fixed-assumptions_hours[-]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_fixed-assumptions_hours[-]",
                    "ots_bld_fixed-assumptions_Wattperm2[-]"
                ]
            }
        },
        "column-filter-1205:3213:2231:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "single-selection-1205:441:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1165:2789:817:349": {
            "type": "string",
            "default": "dhg_emissions_heat-district_CO2",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "dhg_emissions_heat-district_CO2"
        },
        "string-input-1217:647:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "single-selection-1176:419:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "0.2 Pathway Explorer"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "0.2 Pathway Explorer"
            }
        },
        "string-input-1165:2789:817:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "single-selection-438:328:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "ots"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "ots"
            }
        },
        "string-input-1205:3429:2914:843": {
            "type": "string",
            "default": "EU before calibration",
            "description": "Enter Description",
            "example": "EU before calibration"
        },
        "string-input-1205:3106:3219:349": {
            "type": "string",
            "default": "Sum",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "Sum"
        },
        "boolean-input-1176:1162:1207:646": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-selection-1205:3375:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "column-filter-2812:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "column-selection-1205:3372:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "single-selection-1205:2096:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-1205:2834:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "single-selection-1165:1198:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:2793:446": {
            "type": "string",
            "default": "emission-factor_N2O\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "emission-factor_N2O\\[.*"
        },
        "single-selection-1205:3083:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "double-input-1205:3158:2009:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "boolean-input-1205:1593:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1165:1604:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:724:460": {
            "type": "string",
            "default": "num",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "num"
        },
        "single-selection-1154:1172:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "column-filter-1165:802:1146:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "column-filter-1205:2421:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-demand[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-demand[GWh]"
                ]
            }
        },
        "single-selection-1154:1172:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "single-selection-438:442:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "string-input-1165:2102:357": {
            "type": "string",
            "default": ".*emissions_.*_(...)_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*emissions_.*_(...)_.*\\[.*"
        },
        "column-selection-1205:1594:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-2192:4930:4911:1599": {
            "type": "string",
            "default": "gas",
            "description": "Enter Description",
            "example": "gas"
        },
        "boolean-input-2192:5235:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:722:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 2/1"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 2/1"
            }
        },
        "column-filter-2808:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1165:2102:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "string-input-2192:4930:4911:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)"
        },
        "string-input-1205:2793:444": {
            "type": "string",
            "default": "emissions_N2O",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "emissions_N2O"
        },
        "string-input-1205:2793:445": {
            "type": "string",
            "default": "energy-demand_calibrated_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "energy-demand_calibrated_(.*)\\[.*"
        },
        "single-selection-438:442:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-2192:4930:4911:1597": {
            "type": "string",
            "default": "$6",
            "description": "Enter Description",
            "example": "$6"
        },
        "string-input-1205:3099:3103:349": {
            "type": "string",
            "default": "1990-1995",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "1990-1995"
        },
        "single-selection-1165:802:1151:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "column-selection-1205:3158:3144:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "technology"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "technology"
            }
        },
        "boolean-input-1205:3056:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-2788:843": {
            "type": "string",
            "default": "Minerals",
            "description": "Enter Description",
            "example": "Minerals"
        },
        "string-input-2192:4930:2362:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)"
        },
        "single-selection-1205:721:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-2192:4930:2362:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2192:4930:2362:1599": {
            "type": "string",
            "default": "Country",
            "description": "Enter Description",
            "example": "Country"
        },
        "single-selection-1165:1232:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "string-input-1214:1162:1166:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-1205:724:446": {
            "type": "string",
            "default": ".*appliance-own_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*appliance-own_(.*)\\[.*"
        },
        "boolean-input-2443:1015:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "boolean-input-1205:1393:1150:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-filter-2805:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-2192:2331:1596": {
            "type": "string",
            "default": "(.*) \\((kt CO2)\\)_(.*)",
            "description": "Enter Description",
            "example": "(.*) \\((kt CO2)\\)_(.*)"
        },
        "string-input-1205:3099:3103:354": {
            "type": "string",
            "default": "Mm2",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mm2"
        },
        "string-input-2192:2331:1597": {
            "type": "string",
            "default": "$1\\[$2\\]",
            "description": "Enter Description",
            "example": "$1\\[$2\\]"
        },
        "string-input-2192:2331:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-1205:3099:3103:357": {
            "type": "string",
            "default": "199[0-5].*ren.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "199[0-5].*ren.*"
        },
        "boolean-input-1205:2990:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "string-input-2192:5385:1245": {
            "type": "string",
            "default": "ColumnValues",
            "description": "Enter Description",
            "example": "ColumnValues"
        },
        "string-input-2192:5385:1246": {
            "type": "string",
            "default": "TWh",
            "description": "Enter Description",
            "example": "TWh"
        },
        "string-input-2808:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:724:445": {
            "type": "string",
            "default": ".*appliance-new-ratio_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*appliance-new-ratio_(.*)\\[.*"
        },
        "string-input-1205:724:444": {
            "type": "string",
            "default": "appliance-new",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "appliance-new"
        },
        "single-selection-1165:803:1151:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Subtraction 1-2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Subtraction 1-2"
            }
        },
        "string-input-1214:1162:1166:446": {
            "type": "string",
            "default": ".*cal_product_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*cal_product_(.*)\\[.*"
        },
        "string-input-1214:1162:1166:445": {
            "type": "string",
            "default": ".*cal_bld_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*cal_bld_(.*)\\[.*"
        },
        "string-input-1205:3375:1599": {
            "type": "string",
            "default": "level_climatelever",
            "description": "Enter Description",
            "example": "level_climatelever"
        },
        "string-input-1154:1056:343": {
            "type": "string",
            "default": "building-renovation-energy-achieved",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-renovation-energy-achieved"
        },
        "string-input-1214:1162:1166:444": {
            "type": "string",
            "default": "cal_rate",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate"
        },
        "string-input-1205:3375:1596": {
            "type": "string",
            "default": "(.)\\+(.*)_(.*)_(.*)-(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.)\\+(.*)_(.*)_(.*)-(.*)(\\[.*)"
        },
        "string-input-1205:3375:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "column-selection-2192:5226:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "column-filter-1205:2940:2883:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "cal_rate_[%]"
                ]
            }
        },
        "string-input-2812:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-2192:5227:4977:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "single-selection-2599:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-2192:5227:4977:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2805:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-2192:5227:4977:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "column-selection-1165:2786:2785:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "Column Header (#2)"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "Column Header (#2)"
            }
        },
        "single-selection-1214:1162:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "column-filter-1165:1215:653": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "single-selection-1205:3429:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-selection-2584:2058:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "buildingtype"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "buildingtype"
            }
        },
        "single-selection-2812:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "No"
            }
        },
        "column-filter-2815:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "single-selection-2812:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "single-selection-1165:1628:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:2942:2923:843": {
            "type": "string",
            "default": "EU calibration rate",
            "description": "Enter Description",
            "example": "EU calibration rate"
        },
        "single-selection-441:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "ots"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "ots"
            }
        },
        "single-selection-1205:2942:2951:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1205:722:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-1205:3213:2380:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1165:2102:349": {
            "type": "string",
            "default": "dhg_emissions_added-district-heat",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "dhg_emissions_added-district-heat"
        },
        "column-filter-1205:2337:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-demand[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-demand[TWh]",
                    "energy-demand_calibrated_[TWh]"
                ]
            }
        },
        "string-input-1165:1216:460": {
            "type": "string",
            "default": "TWh/year",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TWh/year"
        },
        "boolean-input-1205:3083:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "boolean-input-2819:5235:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:2721:1015:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1205:3099:2953:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "subsector",
                    "buildingtype",
                    "period-duration",
                    "constructed-area[Mm2]",
                    "renovated-area[Mm2]"
                ]
            }
        },
        "string-input-1205:2852:349": {
            "type": "string",
            "default": "bld_energy-demand",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand"
        },
        "boolean-input-2819:1604:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1218:1047:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "single-selection-1217:648:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "single-selection-1205:3099:3103:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:2942:2951:357": {
            "type": "string",
            "default": "(.*)\\+.*nd.*dec.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*nd.*dec.*\\[.*"
        },
        "single-selection-1154:441:639:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:2942:2951:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "single-selection-1205:2337:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:3056:349": {
            "type": "string",
            "default": "bld_energy-demand_heat_residential",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand_heat_residential"
        },
        "string-input-1205:2721:1015:349": {
            "type": "string",
            "default": "bld_floor-area_non-residential",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "bld_floor-area_non-residential"
        },
        "string-input-1205:2721:1015:354": {
            "type": "string",
            "default": "Mm²",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mm²"
        },
        "string-input-2821:2316:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2821:2316:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-1205:2721:1015:357": {
            "type": "string",
            "default": "bld_.*non-res.*_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "bld_.*non-res.*_.*\\[.*"
        },
        "column-filter-438:441:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "single-selection-2179:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-selection-1205:3147:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:2942:2951:349": {
            "type": "string",
            "default": "fed_uncalibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_uncalibrated"
        },
        "string-input-2819:4987:1599": {
            "type": "string",
            "default": "energycarrier-old",
            "description": "Enter Description",
            "example": "energycarrier-old"
        },
        "string-input-2819:4987:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-2819:4987:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "column-filter-1205:2640:2232:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "single-selection-1214:1162:1166:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 2/1"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 2/1"
            }
        },
        "boolean-input-1165:2081:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:652:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-2819:1605:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2819:1605:1596": {
            "type": "string",
            "default": "(.*): (.*)",
            "description": "Enter Description",
            "example": "(.*): (.*)"
        },
        "string-input-2819:1605:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-2795:843": {
            "type": "string",
            "default": "district heating",
            "description": "Enter Description",
            "example": "district heating"
        },
        "string-input-1205:3056:357": {
            "type": "string",
            "default": ".*_res.*_.*_(.*)\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*_res.*_.*_(.*)\\[.*"
        },
        "string-input-1205:3056:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "boolean-input-1165:1232:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-2806:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:3434:2947:843": {
            "type": "string",
            "default": "EU calibrated",
            "description": "Enter Description",
            "example": "EU calibrated"
        },
        "string-input-1165:1216:444": {
            "type": "string",
            "default": "dhg_energy-demand-prelim",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "dhg_energy-demand-prelim"
        },
        "string-input-1165:1216:445": {
            "type": "string",
            "default": "..._energy-need_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "..._energy-need_(.*)\\[.*"
        },
        "data-type-0:644:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-1165:1216:446": {
            "type": "string",
            "default": ".*heat-district-efficiency_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*heat-district-efficiency_(.*)\\[.*"
        },
        "single-selection-1205:2990:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-2809:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-2607:345": {
            "type": "string",
            "default": "bld_gtap",
            "description": "Enter Description",
            "example": "bld_gtap"
        },
        "column-filter-1205:3083:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_emissions-CO2_residential_gas-ff-natural_cooking[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_emissions-CO2_residential_gas-ff-natural_cooking[Mt]",
                    "bld_emissions-CH4_residential_gas-ff-natural_cooking[Mt]",
                    "bld_emissions-N2O_residential_gas-ff-natural_cooking[Mt]"
                ]
            }
        },
        "column-filter-2816:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1165:1215:641": {
            "type": "string",
            "default": "dhg_energy-need",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "dhg_energy-need"
        },
        "string-input-1165:1215:642": {
            "type": "string",
            "default": ".*technology-share_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. ",
            "example": ".*technology-share_(.*)\\[.*"
        },
        "single-selection-441:639:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-2598:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "boolean-input-1165:1198:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "string-input-2192:5174:349": {
            "type": "string",
            "default": "SUMTOTALS",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "SUMTOTALS"
        },
        "string-input-1165:1215:643": {
            "type": "string",
            "default": ".*energy-need.*district\\[.*",
            "description": "Pattern selecting the fixed column. The pattern should return only one column.  \nExamples: \"sector_demand_.*\"",
            "example": ".*energy-need.*district\\[.*"
        },
        "string-input-1165:1215:644": {
            "type": "string",
            "default": "TWh/year",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TWh/year"
        },
        "string-input-2809:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-2192:1602:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "boolean-input-1205:3372:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-2192:1602:1596": {
            "type": "string",
            "default": "(.*): (.*)",
            "description": "Enter Description",
            "example": "(.*): (.*)"
        },
        "string-input-2192:1602:1599": {
            "type": "string",
            "default": "use",
            "description": "Enter Description",
            "example": "use"
        },
        "string-input-1165:802:1150:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-1154:1170:343": {
            "type": "string",
            "default": "surface-floorarea",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "surface-floorarea"
        },
        "single-selection-1217:318:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "ots"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "ots"
            }
        },
        "string-input-2175:2728:843": {
            "type": "string",
            "default": "Energy Demand uncalibrated",
            "description": "Enter Description",
            "example": "Energy Demand uncalibrated"
        },
        "column-filter-1205:3431:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "appliances+energy-demand_calibrated_[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "appliances+energy-demand_calibrated_[TWh]",
                    "cooking+energy-demand_calibrated_[TWh]",
                    "hot-water+energy-demand_calibrated_[TWh]",
                    "lighting+energy-demand_calibrated_[TWh]",
                    "space-cooling+energy-demand_calibrated_[TWh]"
                ]
            }
        },
        "string-input-2192:5174:354": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "unit"
        },
        "string-input-1205:2063:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "column-filter-1205:3431:2923:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+cal_rate_[%]",
                    "cooking+cal_rate_[%]",
                    "hot-water+cal_rate_[%]",
                    "lighting+cal_rate_[%]",
                    "space-cooling+cal_rate_[%]"
                ]
            }
        },
        "string-input-1205:2063:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2192:5174:357": {
            "type": "string",
            "default": ".*_.*_[T][o].*\\[Gigawatt-hour\\].*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*_.*_[T][o].*\\[Gigawatt-hour\\].*"
        },
        "column-filter-1165:1615:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_energy-demand_gas-ff-natural[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_energy-demand_gas-ff-natural[TWh]",
                    "dhg_energy-demand_liquid-ff-heatingoil[TWh]",
                    "dhg_energy-demand_solid-ff-coal[TWh]",
                    "dhg_energy-demand_solid-bio[TWh]",
                    "dhg_energy-demand_heat-ambient[TWh]",
                    "dhg_energy-demand_heat-solar[TWh]",
                    "dhg_energy-demand_heat-geothermal[TWh]"
                ]
            }
        },
        "string-input-1205:2063:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)(\\[.*)"
        },
        "column-filter-1205:3429:2933:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(energy-demand[GWh])",
                    "cooking+Sum(energy-demand[GWh])",
                    "hot-water+Sum(energy-demand[GWh])",
                    "lighting+Sum(energy-demand[GWh])",
                    "space-cooling+Sum(energy-demand[GWh])"
                ]
            }
        },
        "column-filter-1165:2792:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "elc_emissions-CO2_specific[kt/TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "elc_emissions-CO2_specific[kt/TWh]"
                ]
            }
        },
        "single-selection-2819:5174:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "data-type-438:643:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-1176:1162:1166:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-2806:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "boolean-input-1205:3434:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1205:3430:2933:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "column-filter-2593:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "bld_energy-demand_heat_electricity[TWh]",
                    "bld_energy-demand_heat_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_heat-ambient[TWh]",
                    "bld_energy-demand_heat_heat-geothermal[TWh]",
                    "bld_energy-demand_heat_heat-solar[TWh]",
                    "bld_energy-demand_heat_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_solid-bio[TWh]",
                    "bld_energy-demand_heat_solid-ff-coal[TWh]"
                ]
            }
        },
        "column-filter-1205:2942:2930:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "gas-bio+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "gas-ff-natural+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "heat-ambient+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "heat-geothermal+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "heat-solar+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "solid-bio+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "solid-ff-coal+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "solid-waste+Sum(energy-demand_decentral_unrenovated[TWh])"
                ]
            }
        },
        "single-selection-2608:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-filter-1205:2942:2913:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity[TWh]",
                    "gas-bio[TWh]",
                    "gas-ff-natural[TWh]",
                    "heat-ambient[TWh]",
                    "heat-geothermal[TWh]",
                    "heat-solar[TWh]",
                    "liquid-bio-diesel[TWh]",
                    "liquid-bio-gasoline[TWh]",
                    "liquid-ff-heatingoil[TWh]",
                    "solid-bio[TWh]",
                    "solid-ff-coal[TWh]",
                    "solid-waste[TWh]"
                ]
            }
        },
        "string-input-1165:2078:1246": {
            "type": "string",
            "default": "Mt/TWh",
            "description": "Enter Description",
            "example": "Mt/TWh"
        },
        "boolean-input-2819:5227:4909:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1165:2078:1245": {
            "type": "string",
            "default": "emission.*",
            "description": "Enter Description",
            "example": "emission.*"
        },
        "column-filter-1215:1169:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_district-capacity_gas-ff-natural[-]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_district-capacity_gas-ff-natural[-]",
                    "ots_bld_district-capacity_liquid-ff-heatingoil[-]",
                    "ots_bld_district-capacity_solid-ff-coal[-]",
                    "ots_bld_district-capacity_solid-bio[-]",
                    "ots_bld_district-capacity_heat-ambient[-]",
                    "ots_bld_district-capacity_heat-solar[-]",
                    "ots_bld_district-capacity_heat-geothermal[-]"
                ]
            }
        },
        "single-selection-1214:1162:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:1835:460": {
            "type": "string",
            "default": "Mm2",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mm2"
        },
        "column-filter-1205:441:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_appliance-lifetime_fridge[a]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_appliance-lifetime_fridge[a]",
                    "bld_appliance-lifetime_freezer[a]",
                    "bld_appliance-lifetime_wmachine[a]",
                    "bld_appliance-lifetime_dishwasher[a]",
                    "bld_appliance-lifetime_dryer[a]",
                    "bld_appliance-lifetime_tv[a]",
                    "bld_appliance-lifetime_comp[a]",
                    "bld_appliance-lifetime_phone[a]"
                ]
            }
        },
        "boolean-input-1165:1231:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "column-filter-1205:1014:653": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_building-mix_sfh_1800-2010[%]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_building-mix_sfh_1800-2010[%]",
                    "bld_building-mix_mfh_1800-2010[%]"
                ]
            }
        },
        "single-selection-1205:1116:1419": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "CAPEX"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "CAPEX"
            }
        },
        "string-input-1165:803:446": {
            "type": "string",
            "default": "dhg_(emissions_added-heat-district_...)\\[.*",
            "description": "Pattern selecting the group of columns to be calibrated. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "dhg_(emissions_added-heat-district_...)\\[.*"
        },
        "string-input-1165:802:1150:444": {
            "type": "string",
            "default": "cal_rate",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate"
        },
        "string-input-2192:5227:4909:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "string-input-1165:803:445": {
            "type": "string",
            "default": "cal_dhg_(emissions_added-heat-district_...)\\[.*",
            "description": "Pattern selecting the group of calibration columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_dhg_(emissions_added-heat-district_...)\\[.*"
        },
        "boolean-input-2192:4930:4919:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-2192:5227:4909:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-1165:803:444": {
            "type": "string",
            "default": "cal_dhg_emissions_factor_heat-district",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_dhg_emissions_factor_heat-district"
        },
        "string-input-1165:802:1150:446": {
            "type": "string",
            "default": "dhg_(energy-demand_.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "dhg_(energy-demand_.*)\\[.*"
        },
        "string-input-2192:5227:4909:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-1165:802:1150:445": {
            "type": "string",
            "default": "cal_delta_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_delta_(.*)\\[.*"
        },
        "single-selection-1218:515:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-1205:3373:1599": {
            "type": "string",
            "default": "renotype",
            "description": "Enter Description",
            "example": "renotype"
        },
        "single-selection-1205:2096:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-2583:1684:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:3373:1596": {
            "type": "string",
            "default": "(.)\\+(.*)_(.*)_(.*)-(.*)-(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.)\\+(.*)_(.*)_(.*)-(.*)-(.*)(\\[.*)"
        },
        "single-selection-1218:515:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "string-input-1205:3373:1597": {
            "type": "string",
            "default": "$6",
            "description": "Enter Description",
            "example": "$6"
        },
        "boolean-input-1154:644:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "column-filter-1205:1835:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "renovated-area[Mm2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "renovated-area[Mm2]"
                ]
            }
        },
        "agg-method-2809:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1205:2998:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_residential_appliances_gas-ff-natural[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_residential_appliances_gas-ff-natural[TWh]"
                ]
            }
        },
        "column-selection-1165:2092:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "energycarrier"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "energycarrier"
            }
        },
        "column-filter-2816:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "boolean-input-2192:5047:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:3431:2914:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances[TWh]",
                    "cooking[TWh]",
                    "hot-water[TWh]",
                    "lighting[TWh]",
                    "space-cooling[TWh]"
                ]
            }
        },
        "column-selection-1205:3212:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "Years"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "Years"
            }
        },
        "string-input-1205:1594:1596": {
            "type": "string",
            "default": "bld_building-(.*)_(.*-.*-.*)(\\[.*)",
            "description": "Enter Description",
            "example": "bld_building-(.*)_(.*-.*-.*)(\\[.*)"
        },
        "single-selection-1205:2847:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "single-selection-2792:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:1594:1599": {
            "type": "string",
            "default": "parameter_name",
            "description": "Enter Description",
            "example": "parameter_name"
        },
        "string-input-1205:1594:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "single-selection-1205:3036:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1205:3099:3100:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Yes"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "Yes"
            }
        },
        "single-selection-1205:3099:3100:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "string-input-1205:1835:446": {
            "type": "string",
            "default": ".*renovated-area.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*renovated-area.*"
        },
        "string-input-1205:1835:445": {
            "type": "string",
            "default": "surface-ratio_(.*)",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "surface-ratio_(.*)"
        },
        "single-selection-1214:1195:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "1.3 Technology costs"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "1.3 Technology costs"
            }
        },
        "string-input-1205:1835:444": {
            "type": "string",
            "default": "renovated-surface-area",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "renovated-surface-area"
        },
        "single-selection-1165:803:1151:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-1205:2942:2951:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "boolean-input-1205:3008:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "boolean-input-1205:2721:1015:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "boolean-input-441:639:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-1205:3158:1600:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "single-selection-441:639:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:3158:1600:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "string-input-1205:3158:1600:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "boolean-input-1205:3213:2232:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "single-selection-1179:1155:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "district_heating"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "district_heating"
            }
        },
        "boolean-input-1165:2115:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1184:1190:343": {
            "type": "string",
            "default": "building-geometry",
            "description": "the name of the input should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-geometry"
        },
        "column-filter-1205:3106:3222:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "electricity+ratio"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "electricity+ratio",
                    "gas-bio+ratio",
                    "gas-ff-natural+ratio",
                    "heat-ambient+ratio",
                    "heat-geothermal+ratio",
                    "heat-solar+ratio",
                    "liquid-bio-diesel+ratio",
                    "liquid-bio-gasoline+ratio",
                    "liquid-ff-heatingoil+ratio",
                    "solid-bio+ratio",
                    "solid-ff-coal+ratio",
                    "solid-waste+ratio"
                ]
            }
        },
        "column-filter-1205:3432:2955:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(cal_rate_[%])",
                    "cooking+Sum(cal_rate_[%])",
                    "hot-water+Sum(cal_rate_[%])",
                    "lighting+Sum(cal_rate_[%])",
                    "space-cooling+Sum(cal_rate_[%])"
                ]
            }
        },
        "disabled-1165:802:1171": {
            "type": "boolean",
            "default": "false",
            "description": "Disable the node. The first input is copied to the output, and calibration rates are set to 1.",
            "example": false
        },
        "boolean-input-1205:2792:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-selection-1205:1596:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-2821:2316:1596": {
            "type": "string",
            "default": "(.*)\\((.*)",
            "description": "Enter Description",
            "example": "(.*)\\((.*)"
        },
        "string-input-435:643:343": {
            "type": "string",
            "default": "district-heating-share",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "district-heating-share"
        },
        "single-selection-1165:2115:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:2942:2910:843": {
            "type": "string",
            "default": "EU after calibration",
            "description": "Enter Description",
            "example": "EU after calibration"
        },
        "data-type-1217:643:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "single-selection-1205:441:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "boolean-input-2819:5399:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-2192:2806:4890": {
            "type": "string",
            "default": "CH",
            "description": "Enter Description",
            "example": "CH"
        },
        "column-selection-1205:1684:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "data-type-1218:1114:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "column-selection-2819:4987:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "energycarrier"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "energycarrier"
            }
        },
        "column-filter-1218:515:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_building-insulation_sfh[kWh/m2 year]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_building-insulation_sfh[kWh/m2 year]",
                    "ots_bld_building-insulation_mfh[kWh/m2 year]",
                    "ots_bld_building-insulation_offices[kWh/m2 year]",
                    "ots_bld_building-insulation_trade[kWh/m2 year]",
                    "ots_bld_building-insulation_hotels[kWh/m2 year]",
                    "ots_bld_building-insulation_health[kWh/m2 year]",
                    "ots_bld_building-insulation_education[kWh/m2 year]",
                    "ots_bld_building-insulation_other[kWh/m2 year]"
                ]
            }
        },
        "single-selection-1205:1393:1151:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "multiple-selection-2821:2316:66": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Thermal_CHP"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "Thermal_CHP"
                ]
            }
        },
        "string-input-1205:3101:3086:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "multiple-selection-2821:2316:58": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "0000"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "0000",
                    "2000",
                    "2100",
                    "2111",
                    "2115",
                    "2116",
                    "2117",
                    "2118",
                    "2112",
                    "2120",
                    "2121",
                    "2122",
                    "2130",
                    "2200",
                    "2210",
                    "2310",
                    "2230",
                    "2330",
                    "2410",
                    "3000",
                    "3100",
                    "3110",
                    "3105",
                    "3106",
                    "3190",
                    "3191",
                    "3192",
                    "3193",
                    "3200",
                    "3210",
                    "3214",
                    "3215",
                    "3220",
                    "3230",
                    "3234",
                    "3235",
                    "3240",
                    "3246",
                    "3247",
                    "3244",
                    "3250",
                    "3260",
                    "3270A",
                    "3280",
                    "3281",
                    "3282",
                    "3283",
                    "3285",
                    "3286",
                    "3295",
                    "4000",
                    "4100",
                    "4200",
                    "4210",
                    "4220",
                    "4230",
                    "4240",
                    "5100",
                    "5200",
                    "5500",
                    "5510",
                    "5520",
                    "5530",
                    "5532",
                    "5534",
                    "5535",
                    "5540",
                    "5541",
                    "5544",
                    "5542",
                    "55431",
                    "5545",
                    "5546",
                    "5547",
                    "5549",
                    "5548",
                    "5550",
                    "6000",
                    "7200",
                    "7100",
                    "55432"
                ]
            }
        },
        "string-input-2598:345": {
            "type": "string",
            "default": "dhg_air",
            "description": "Enter Description",
            "example": "dhg_air"
        },
        "boolean-input-1165:1230:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "country-list-2805:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "single-selection-1214:422:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "3.1a Industry"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "3.1a Industry"
            }
        },
        "string-input-2797:843": {
            "type": "string",
            "default": "air pollution",
            "description": "Enter Description",
            "example": "air pollution"
        },
        "single-selection-441:643:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "single-selection-1205:3429:2951:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1205:3099:3105:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:2640:2231:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "boolean-input-2192:5239:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-selection-2821:2316:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "RowIDs"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "RowIDs"
            }
        },
        "single-selection-1205:1393:1151:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-1165:2089:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "single-selection-1199:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-filter-1205:3099:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "single-selection-441:441:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-1165:802:1151:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-filter-1205:3429:2927:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(energy-demand_calibrated_[GWh])",
                    "cooking+Sum(energy-demand_calibrated_[GWh])",
                    "hot-water+Sum(energy-demand_calibrated_[GWh])",
                    "lighting+Sum(energy-demand_calibrated_[GWh])",
                    "space-cooling+Sum(energy-demand_calibrated_[GWh])"
                ]
            }
        },
        "string-input-1205:1684:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "boolean-input-1205:3432:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1205:1684:1596": {
            "type": "string",
            "default": "(.*)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)"
        },
        "column-filter-1205:3085:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_capex_reno-med-off[MEUR]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_capex_reno-med-off[MEUR]",
                    "bld_capex_reno-med-sfh[MEUR]"
                ]
            }
        },
        "string-input-1205:1684:1599": {
            "type": "string",
            "default": "renovationcategory",
            "description": "Enter Description",
            "example": "renovationcategory"
        },
        "column-filter-1205:3099:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "Austria",
                    "Belgium",
                    "Bulgaria",
                    "Croatia",
                    "Cyprus",
                    "Czech Republic",
                    "Denmark",
                    "Estonia",
                    "Finland",
                    "France",
                    "Germany",
                    "Greece",
                    "Hungary",
                    "Ireland",
                    "Italy",
                    "Latvia",
                    "Lithuania",
                    "Luxembourg",
                    "Malta",
                    "Netherlands",
                    "Poland",
                    "Portugal",
                    "Romania",
                    "Slovakia",
                    "Slovenia",
                    "Spain",
                    "Sweden",
                    "Switzerland",
                    "United Kingdom"
                ]
            }
        },
        "single-selection-1165:2789:821:1175:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-2819:5227:4977:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "data-type-1184:1189:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "constants"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "constants"
                ]
            }
        },
        "string-input-1205:3099:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-1176:1162:1181:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-2819:5227:4977:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "string-input-2819:5227:4977:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-1205:3430:2914:843": {
            "type": "string",
            "default": "EU before calibration",
            "description": "Enter Description",
            "example": "EU before calibration"
        },
        "string-input-1205:3147:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "column-filter-1154:441:441:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "column-filter-1205:3430:2952:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_uncalibrated_appliances[TWh]",
                    "fed_uncalibrated_cooking[TWh]",
                    "fed_uncalibrated_hot-water[TWh]",
                    "fed_uncalibrated_lighting[TWh]",
                    "fed_uncalibrated_space-cooling[TWh]"
                ]
            }
        },
        "single-selection-1205:724:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2809:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-1205:3431:2906:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances[TWh]",
                    "cooking[TWh]",
                    "hot-water[TWh]",
                    "lighting[TWh]",
                    "space-cooling[TWh]"
                ]
            }
        },
        "string-input-1205:3147:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1165:2081:1599": {
            "type": "string",
            "default": "gas",
            "description": "Enter Description",
            "example": "gas"
        },
        "string-input-1205:3431:2947:843": {
            "type": "string",
            "default": "EU calibrated",
            "description": "Enter Description",
            "example": "EU calibrated"
        },
        "string-input-1165:2081:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "column-selection-2192:4960:4977:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "string-input-1205:3147:1596": {
            "type": "string",
            "default": "(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)_(.*)\\[.*"
        },
        "string-input-1165:2081:1596": {
            "type": "string",
            "default": "(.*)-(.*)_(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)-(.*)_(.*)_(.*)\\[.*"
        },
        "single-selection-0:644:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-selection-2443:1592:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "buildingtype"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "buildingtype"
            }
        },
        "column-filter-1205:3101:3086:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "boolean-input-2819:5226:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:2845:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1184:1192:343": {
            "type": "string",
            "default": "climate-monthly-windspeed",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "climate-monthly-windspeed"
        },
        "string-input-1165:2792:446": {
            "type": "string",
            "default": "..._emissions.*_.*\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "..._emissions.*_.*\\[.*"
        },
        "string-input-1165:2792:445": {
            "type": "string",
            "default": "..._energy-demand_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "..._energy-demand_(.*)\\[.*"
        },
        "string-input-1165:2792:444": {
            "type": "string",
            "default": "bld_emissions-CO2",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "bld_emissions-CO2"
        },
        "boolean-input-1205:1592:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:2942:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "electricity+Sum(energy-demand_calibrated_decentral_renovated[TWh])"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "electricity+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "electricity+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "electricity+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "gas-bio+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "gas-bio+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "gas-bio+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "gas-ff-natural+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "gas-ff-natural+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "gas-ff-natural+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "heat-ambient+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "heat-ambient+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "heat-ambient+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "heat-geothermal+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "heat-geothermal+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "heat-geothermal+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "heat-solar+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "heat-solar+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "heat-solar+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "solid-bio+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "solid-bio+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "solid-bio+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "solid-ff-coal+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "solid-ff-coal+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "solid-ff-coal+Sum(energy-demand_calibrated_decentral_constructed[TWh])",
                    "solid-waste+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "solid-waste+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "solid-waste+Sum(energy-demand_calibrated_decentral_constructed[TWh])"
                ]
            }
        },
        "single-selection-1176:1162:1208:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "SPLIT"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "SPLIT"
            }
        },
        "ecmap-2192:2806:4884": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/ecmap.csv"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/ecmap.csv",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "boolean-input-1165:1187:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "column-filter-1205:3057:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_non-residential_education_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_non-residential_education_electricity[TWh]",
                    "bld_energy-demand_non-residential_health_electricity[TWh]",
                    "bld_energy-demand_non-residential_hotels_electricity[TWh]",
                    "bld_energy-demand_non-residential_offices_electricity[TWh]",
                    "bld_energy-demand_non-residential_other_electricity[TWh]",
                    "bld_energy-demand_non-residential_trade_electricity[TWh]",
                    "bld_energy-demand_non-residential_education_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_health_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_hotels_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_offices_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_other_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_trade_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_education_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_health_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_hotels_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_offices_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_other_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_trade_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_education_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_health_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_hotels_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_offices_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_other_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_trade_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_education_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_health_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_hotels_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_offices_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_other_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_trade_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_education_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_health_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_hotels_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_offices_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_other_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_trade_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_education_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_health_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_hotels_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_offices_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_other_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_trade_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_education_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_health_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_hotels_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_offices_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_other_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_trade_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_education_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_health_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_hotels_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_offices_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_other_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_trade_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_education_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_health_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_hotels_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_offices_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_other_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_trade_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_education_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_health_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_hotels_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_offices_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_other_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_trade_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_education_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_health_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_hotels_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_offices_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_other_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_trade_solid-waste[TWh]"
                ]
            }
        },
        "string-input-2809:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-1214:1162:1207:653": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-1176:1162:1166:446": {
            "type": "string",
            "default": ".*cal_product_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*cal_product_(.*)\\[.*"
        },
        "string-input-1205:3429:2923:843": {
            "type": "string",
            "default": "EU calibration rate",
            "description": "Enter Description",
            "example": "EU calibration rate"
        },
        "string-input-1176:1162:1166:445": {
            "type": "string",
            "default": ".*cal_dhg_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*cal_dhg_(.*)\\[.*"
        },
        "string-input-1176:1162:1166:444": {
            "type": "string",
            "default": "cal_rate",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate"
        },
        "string-input-1205:3432:2927:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "single-selection-1154:441:441:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "column-filter-2816:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1165:2792:460": {
            "type": "string",
            "default": "kt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "kt"
        },
        "boolean-input-1205:724:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-2443:1014:643": {
            "type": "string",
            "default": ".*floor-area.*",
            "description": "Pattern selecting the fixed column. The pattern should return only one column.  \nExamples: \"sector_demand_.*\"",
            "example": ".*floor-area.*"
        },
        "string-input-2443:1014:642": {
            "type": "string",
            "default": ".*mix_(...)_.*\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. ",
            "example": ".*mix_(...)_.*\\[.*"
        },
        "string-input-2443:1014:641": {
            "type": "string",
            "default": "bld_floor-area_residential",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "bld_floor-area_residential"
        },
        "column-selection-2192:4930:4910:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "column-filter-1154:1172:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_building-mix_sfh_1800-2010[%]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_building-mix_sfh_1800-2010[%]",
                    "ots_bld_building-mix_mfh_1800-2010[%]",
                    "ots_bld_building-mix_trade_1800-2010[%]",
                    "ots_bld_building-mix_education_1800-2010[%]",
                    "ots_bld_building-mix_hotels_1800-2010[%]",
                    "ots_bld_building-mix_health_1800-2010[%]",
                    "ots_bld_building-mix_offices_1800-2010[%]",
                    "ots_bld_building-mix_other_1800-2010[%]"
                ]
            }
        },
        "column-filter-1205:3432:2951:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "appliances+energy-demand[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "appliances+energy-demand[TWh]",
                    "cooking+energy-demand[TWh]",
                    "hot-water+energy-demand[TWh]",
                    "lighting+energy-demand[TWh]",
                    "space-cooling+energy-demand[TWh]"
                ]
            }
        },
        "string-input-2443:1014:644": {
            "type": "string",
            "default": "1000m2",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "1000m2"
        },
        "string-input-2806:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "single-selection-1205:3106:3218:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1176:1162:1208:658": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "column-filter-2184:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_non-residential_appliances[TWh]",
                    "bld_energy-demand_non-residential_education[TWh]",
                    "bld_energy-demand_non-residential_health[TWh]",
                    "bld_energy-demand_non-residential_hotels[TWh]",
                    "bld_energy-demand_non-residential_offices[TWh]",
                    "bld_energy-demand_non-residential_other[TWh]",
                    "bld_energy-demand_non-residential_trade[TWh]",
                    "bld_energy-demand_residential_appliances[TWh]",
                    "bld_energy-demand_residential_mfh[TWh]",
                    "bld_energy-demand_residential_sfh[TWh]"
                ]
            }
        },
        "double-input-2192:5385:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "string-input-1205:3432:2955:843": {
            "type": "string",
            "default": "EU calibration rate",
            "description": "Enter Description",
            "example": "EU calibration rate"
        },
        "column-selection-2192:4960:4909:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "column-filter-1218:1102:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_building-insulation-hotwater_sfh[kWh/m2 year]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_building-insulation-hotwater_sfh[kWh/m2 year]",
                    "ots_bld_building-insulation-hotwater_mfh[kWh/m2 year]",
                    "ots_bld_building-insulation-hotwater_trade[kWh/m2 year]",
                    "ots_bld_building-insulation-hotwater_education[kWh/m2 year]",
                    "ots_bld_building-insulation-hotwater_hotels[kWh/m2 year]",
                    "ots_bld_building-insulation-hotwater_health[kWh/m2 year]",
                    "ots_bld_building-insulation-hotwater_offices[kWh/m2 year]",
                    "ots_bld_building-insulation-hotwater_other[kWh/m2 year]"
                ]
            }
        },
        "boolean-input-1165:2102:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "string-input-2192:5386:1245": {
            "type": "string",
            "default": "ColumnValues",
            "description": "Enter Description",
            "example": "ColumnValues"
        },
        "string-input-2192:5386:1246": {
            "type": "string",
            "default": "TWh",
            "description": "Enter Description",
            "example": "TWh"
        },
        "single-selection-1176:1162:1208:645": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "boolean-input-1205:3146:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:1638:1246": {
            "type": "string",
            "default": "Mm2",
            "description": "Enter Description",
            "example": "Mm2"
        },
        "column-filter-1205:2106:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "emissions_non-residential_CO2[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "emissions_non-residential_CO2[Mt]",
                    "emissions_non-residential_N2O[Mt]",
                    "emissions_non-residential_CH4[Mt]",
                    "emissions_residential_CO2[Mt]",
                    "emissions_residential_N2O[Mt]",
                    "emissions_residential_CH4[Mt]",
                    "emissions_non-residential_CO2[Mt] (#1)",
                    "emissions_non-residential_N2O[Mt] (#1)",
                    "emissions_non-residential_CH4[Mt] (#1)",
                    "emissions_residential_CO2[Mt] (#1)",
                    "emissions_residential_N2O[Mt] (#1)",
                    "emissions_residential_CH4[Mt] (#1)"
                ]
            }
        },
        "column-filter-1205:3078:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-1205:1638:1245": {
            "type": "string",
            "default": ".*floor-area(.*)\\[.*",
            "description": "Enter Description",
            "example": ".*floor-area(.*)\\[.*"
        },
        "column-filter-1165:2789:817:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_emissions_heat_heat-district_CO2_gas-ff-natural[gCO2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_emissions_heat_heat-district_CO2_gas-ff-natural[gCO2]",
                    "dhg_emissions_heat_heat-district_CO2_liquid-ff-heatingoil[gCO2]",
                    "dhg_emissions_heat_heat-district_CO2_solid-ff-coal[gCO2]",
                    "dhg_emissions_heat_heat-district_CO2_solid-bio[gCO2]",
                    "dhg_emissions_heat_heat-district_CO2_heat-ambient[gCO2]",
                    "dhg_emissions_heat_heat-district_CO2_heat-solar[gCO2]",
                    "dhg_emissions_heat_heat-district_CO2_heat-geothermal[gCO2]"
                ]
            }
        },
        "string-input-2583:1594:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2583:1594:1599": {
            "type": "string",
            "default": "parameter_name",
            "description": "Enter Description",
            "example": "parameter_name"
        },
        "string-input-1165:1187:349": {
            "type": "string",
            "default": "dhg_energy-need_district",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "dhg_energy-need_district"
        },
        "data-type-1184:1191:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "scenario"
                ]
            }
        },
        "single-selection-1205:3106:3222:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-1205:3213:2232:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Subtraction 1-2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Subtraction 1-2"
            }
        },
        "string-input-1205:1611:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-2819:5386:1246": {
            "type": "string",
            "default": "TWh",
            "description": "Enter Description",
            "example": "TWh"
        },
        "string-input-1205:1611:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-1205:1611:1599": {
            "type": "string",
            "default": "Years_number",
            "description": "Enter Description",
            "example": "Years_number"
        },
        "string-input-2819:5386:1245": {
            "type": "string",
            "default": "ColumnValues",
            "description": "Enter Description",
            "example": "ColumnValues"
        },
        "boolean-input-2192:1611:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-2192:5226:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:2984:349": {
            "type": "string",
            "default": "bld_energy-demand",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand"
        },
        "string-input-2603:345": {
            "type": "string",
            "default": "bld_dhg",
            "description": "Enter Description",
            "example": "bld_dhg"
        },
        "single-selection-1176:1162:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:2847:445": {
            "type": "string",
            "default": "(...)",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "(...)"
        },
        "string-input-1205:2847:444": {
            "type": "string",
            "default": "emissions",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "emissions"
        },
        "string-input-1218:1088:343": {
            "type": "string",
            "default": "building-insulation-hotwater",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-insulation-hotwater"
        },
        "string-input-0:644:343": {
            "type": "string",
            "default": "heat-district-efficiency",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "heat-district-efficiency"
        },
        "string-input-1205:2847:446": {
            "type": "string",
            "default": "emissions_(...)_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "emissions_(...)_(.*)\\[.*"
        },
        "boolean-input-1205:2096:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "single-selection-1205:3213:2231:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Python"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Python"
            }
        },
        "string-input-1154:1174:343": {
            "type": "string",
            "default": "residential-applife",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "residential-applife"
        },
        "column-filter-1165:803:1151:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "single-selection-1165:1216:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "column-selection-2192:2313:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "column-filter-1205:3099:3100:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "non-residential+constructed-area[Mm2]"
                ]
            }
        },
        "single-selection-1165:2789:808:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:2984:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1165:1187:354": {
            "type": "string",
            "default": "GWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "GWh"
        },
        "string-input-1205:2984:357": {
            "type": "string",
            "default": ".*energy-demand_(.*residential.*_.*_.*)_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand_(.*residential.*_.*_.*)_.*\\[.*"
        },
        "string-input-1165:1187:357": {
            "type": "string",
            "default": ".*energy.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy.*"
        },
        "string-input-1205:3101:2808:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-1205:2127:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "emissions-CO2_cooking_residential_gas-ff-natural_all-tech[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "emissions-CO2_cooking_residential_gas-ff-natural_all-tech[Mt]",
                    "emissions-CH4_cooking_residential_gas-ff-natural_all-tech[Mt]",
                    "emissions-N2O_cooking_residential_gas-ff-natural_all-tech[Mt]"
                ]
            }
        },
        "single-selection-1165:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "single-selection-2604:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "boolean-input-2192:4930:4910:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-1214:1162:1166:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-2180:843": {
            "type": "string",
            "default": "Floor Area",
            "description": "Enter Description",
            "example": "Floor Area"
        },
        "single-selection-1165:802:1150:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:1854:1245": {
            "type": "string",
            "default": ".*Mm2.*",
            "description": "Enter Description",
            "example": ".*Mm2.*"
        },
        "boolean-input-1214:1162:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-2590:1600:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-1205:1854:1246": {
            "type": "string",
            "default": "m2",
            "description": "Enter Description",
            "example": "m2"
        },
        "column-filter-1205:721:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-2583:1713:1599": {
            "type": "string",
            "default": "parameter-name",
            "description": "Enter Description",
            "example": "parameter-name"
        },
        "string-input-1205:3432:349": {
            "type": "string",
            "default": "fed_calibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_calibrated"
        },
        "column-filter-1165:802:1150:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-2583:1713:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2583:1713:1596": {
            "type": "string",
            "default": "(.*)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)"
        },
        "string-input-2590:1600:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-2590:1600:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "column-filter-2800:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_non-residential_appliances_electricity[TWh]",
                    "bld_energy-demand_residential_appliances_electricity[TWh]",
                    "bld_energy-demand_heat_non-residential_electricity[TWh]",
                    "bld_energy-demand_heat_residential_electricity[TWh]",
                    "bld_energy-demand_residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_non-residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_non-residential_hot-water_gas-ff-natural[TWh]",
                    "bld_energy-demand_residential_hot-water_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_gas-ff-natural[TWh]",
                    "bld_energy-demand_residential_space-cooling_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_electricity[TWh]",
                    "bld_energy-demand_heat_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_solid-ff-coal[TWh]"
                ]
            }
        },
        "single-selection-1154:1166:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "single-selection-1165:802:1150:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "agg-method-1205:3101:3086:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1176:1162:1181:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1154:1166:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "string-input-1205:2847:460": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mt"
        },
        "boolean-input-2819:5227:4977:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:1596:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)-(.*)_(.*)-(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)-(.*)_(.*)-(.*)(\\[.*)"
        },
        "string-input-1205:3432:357": {
            "type": "string",
            "default": "(.*)\\+.*calibrated.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*calibrated.*\\[.*"
        },
        "column-selection-2192:4930:2362:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:1596:1597": {
            "type": "string",
            "default": "$4",
            "description": "Enter Description",
            "example": "$4"
        },
        "string-input-1205:1596:1599": {
            "type": "string",
            "default": "renovationcategory",
            "description": "Enter Description",
            "example": "renovationcategory"
        },
        "single-selection-1165:802:1151:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Subtraction 1-2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Subtraction 1-2"
            }
        },
        "string-input-1165:1628:1420": {
            "type": "string",
            "default": ".*(dh_pipes)\\[.*]",
            "description": "Pattern selecting the activity to use for cost calculation. The technology is identified by a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the technology identifier.\n",
            "example": ".*(dh_pipes)\\[.*]"
        },
        "column-filter-1205:2942:2909:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity[TWh]",
                    "gas-bio[TWh]",
                    "gas-ff-natural[TWh]",
                    "heat-ambient[TWh]",
                    "heat-geothermal[TWh]",
                    "heat-solar[TWh]",
                    "liquid-bio-diesel[TWh]",
                    "liquid-bio-gasoline[TWh]",
                    "liquid-ff-heatingoil[TWh]",
                    "solid-bio[TWh]",
                    "solid-ff-coal[TWh]",
                    "solid-waste[TWh]"
                ]
            }
        },
        "column-filter-1205:2941:2874:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "subsector",
                    "buildingtype",
                    "Years",
                    "renovationcategory",
                    "renovated-area-acc[Mm2]",
                    "constructed-area-acc[Mm2]",
                    "demolished-area-acc[Mm2]",
                    "Years_number",
                    "unrenovated-area-acc[Mm2]",
                    "use",
                    "energy-need_renovated[GWh]",
                    "energy-need_constructed[GWh]",
                    "energy-need_unrenovated[GWh]",
                    "energy-need[GWh]",
                    "energy-need_decentral_renovated[GWh]",
                    "energy-need_decentral_constructed[GWh]",
                    "energy-need_decentral_unrenovated[GWh]",
                    "energy-need_decentral_[GWh]",
                    "technology-factor",
                    "technology",
                    "energycarrier",
                    "energy-demand_decentral_renovated[GWh]",
                    "energy-demand_decentral_constructed[GWh]",
                    "energy-demand_decentral_unrenovated[GWh]",
                    "energy-demand_decentral_[GWh]",
                    "energy-demand[GWh]",
                    "cal_rate_[%]"
                ]
            }
        },
        "single-selection-1205:3434:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:3432:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:3099:2953:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-2583:1594:1596": {
            "type": "string",
            "default": "bld_building-(.*)_(.*-.*-.*)(\\[.*)",
            "description": "Enter Description",
            "example": "bld_building-(.*)_(.*-.*-.*)(\\[.*)"
        },
        "string-input-1205:2942:2929:843": {
            "type": "string",
            "default": "Romania before calibration",
            "description": "Enter Description",
            "example": "Romania before calibration"
        },
        "boolean-input-1205:2640:2231:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-selection-1205:3373:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1154:1165:343": {
            "type": "string",
            "default": "CO2-factors",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "CO2-factors"
        },
        "column-filter-2808:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_appliances_electricity[TWh]",
                    "bld_energy-demand_non-residential_appliances[TWh]",
                    "bld_energy-demand_residential_appliances[TWh]"
                ]
            }
        },
        "single-selection-1205:3008:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1214:1162:1182:354": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "unit"
        },
        "column-filter-1205:2942:2911:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity[TWh]",
                    "gas-bio[TWh]",
                    "gas-ff-natural[TWh]",
                    "heat-ambient[TWh]",
                    "heat-geothermal[TWh]",
                    "heat-solar[TWh]",
                    "liquid-bio-diesel[TWh]",
                    "liquid-bio-gasoline[TWh]",
                    "liquid-ff-heatingoil[TWh]",
                    "solid-bio[TWh]",
                    "solid-ff-coal[TWh]",
                    "solid-waste[TWh]"
                ]
            }
        },
        "single-selection-1205:3106:3222:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1214:1162:1182:357": {
            "type": "string",
            "default": ".*bld_emissions.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*bld_emissions.*"
        },
        "column-selection-1205:2058:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "buildingtype"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "buildingtype"
            }
        },
        "single-selection-1218:1075:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "ots"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "ots"
            }
        },
        "single-selection-1218:1058:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "boolean-input-1218:1047:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "boolean-input-1205:1832:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1176:428:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Naming convention"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "Naming convention"
            }
        },
        "string-input-1205:3212:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "column-filter-1205:1533:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-demand_residential_mfh_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-demand_residential_mfh_electricity[TWh]",
                    "energy-demand_residential_mfh_gas-ff-natural[TWh]",
                    "energy-demand_residential_mfh_liquid-ff-heatingoil[TWh]",
                    "energy-demand_residential_mfh_solid-bio-woodlog[TWh]",
                    "energy-demand_residential_mfh_solid-ff-coal[TWh]",
                    "energy-demand_residential_mfh_solid-bio-pellets[TWh]"
                ]
            }
        },
        "string-input-1205:3212:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-1205:3212:1599": {
            "type": "string",
            "default": "Years_number",
            "description": "Enter Description",
            "example": "Years_number"
        },
        "single-selection-1205:2006:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:2942:2914:843": {
            "type": "string",
            "default": "EU before calibration",
            "description": "Enter Description",
            "example": "EU before calibration"
        },
        "string-input-1217:1087:343": {
            "type": "string",
            "default": "heatcool-technology-fuel_residential_space-heating",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "heatcool-technology-fuel_residential_space-heating"
        },
        "column-filter-1205:3101:2808:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "single-selection-1165:2789:817:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-selection-2192:1605:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "subsector"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "subsector"
            }
        },
        "column-filter-1176:1162:1166:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Sum(cal_product_emissions_heat-district-CO2[%])"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "Sum(cal_product_emissions_heat-district-CO2[%])",
                    "Sum(cal_product_emissions_heat-district-CH4[%])",
                    "Sum(cal_product_emissions_heat-district-N2O[%])",
                    "Sum(cal_product_energy_heat-district[%])"
                ]
            }
        },
        "string-input-1214:1162:1182:349": {
            "type": "string",
            "default": "emissions_total",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "emissions_total"
        },
        "boolean-input-1165:2789:821:1175:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "boolean-input-1214:1162:1182:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "single-selection-1165:1231:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-2583:1611:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:3101:2808:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "single-selection-2585:2004:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "column-filter-1205:3016:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_non-residential_education_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_non-residential_education_electricity[TWh]",
                    "bld_energy-demand_non-residential_health_electricity[TWh]",
                    "bld_energy-demand_non-residential_hotels_electricity[TWh]",
                    "bld_energy-demand_non-residential_offices_electricity[TWh]",
                    "bld_energy-demand_non-residential_other_electricity[TWh]",
                    "bld_energy-demand_non-residential_trade_electricity[TWh]",
                    "bld_energy-demand_residential_mfh_electricity[TWh]",
                    "bld_energy-demand_residential_sfh_electricity[TWh]",
                    "bld_energy-demand_non-residential_education_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_health_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_hotels_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_offices_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_other_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_trade_gas-bio[TWh]",
                    "bld_energy-demand_residential_mfh_gas-bio[TWh]",
                    "bld_energy-demand_residential_sfh_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_education_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_health_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_hotels_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_offices_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_other_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_trade_gas-ff-natural[TWh]",
                    "bld_energy-demand_residential_mfh_gas-ff-natural[TWh]",
                    "bld_energy-demand_residential_sfh_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_education_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_health_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_hotels_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_offices_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_other_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_trade_heat-ambient[TWh]",
                    "bld_energy-demand_residential_mfh_heat-ambient[TWh]",
                    "bld_energy-demand_residential_sfh_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_education_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_health_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_hotels_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_offices_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_other_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_trade_heat-geothermal[TWh]",
                    "bld_energy-demand_residential_mfh_heat-geothermal[TWh]",
                    "bld_energy-demand_residential_sfh_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_education_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_health_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_hotels_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_offices_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_other_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_trade_heat-solar[TWh]",
                    "bld_energy-demand_residential_mfh_heat-solar[TWh]",
                    "bld_energy-demand_residential_sfh_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_education_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_health_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_hotels_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_offices_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_other_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_trade_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_residential_mfh_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_residential_sfh_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_education_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_health_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_hotels_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_offices_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_other_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_trade_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_residential_mfh_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_residential_sfh_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_education_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_health_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_hotels_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_offices_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_other_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_trade_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_residential_mfh_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_residential_sfh_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_education_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_health_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_hotels_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_offices_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_other_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_trade_solid-bio[TWh]",
                    "bld_energy-demand_residential_mfh_solid-bio[TWh]",
                    "bld_energy-demand_residential_sfh_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_education_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_health_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_hotels_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_offices_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_other_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_trade_solid-ff-coal[TWh]",
                    "bld_energy-demand_residential_mfh_solid-ff-coal[TWh]",
                    "bld_energy-demand_residential_sfh_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_education_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_health_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_hotels_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_offices_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_other_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_trade_solid-waste[TWh]",
                    "bld_energy-demand_residential_mfh_solid-waste[TWh]",
                    "bld_energy-demand_residential_sfh_solid-waste[TWh]"
                ]
            }
        },
        "string-input-1218:1058:343": {
            "type": "string",
            "default": "building-renovation-rate",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-renovation-rate"
        },
        "boolean-input-1205:1595:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-2806:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1205:3429:2947:843": {
            "type": "string",
            "default": "EU calibrated",
            "description": "Enter Description",
            "example": "EU calibrated"
        },
        "boolean-input-2583:1596:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-2192:1632:1596": {
            "type": "string",
            "default": "(.*ial)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*ial)_(.*)(\\[.*)"
        },
        "string-input-2192:1632:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-2192:1632:1599": {
            "type": "string",
            "default": "gas",
            "description": "Enter Description",
            "example": "gas"
        },
        "single-selection-1165:1238:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "data-type-441:643:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-1165:1231:354": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "%"
        },
        "column-filter-1205:3101:2808:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "energydemand-by-sector&ec[TWh]",
                    "energydemand-by-ec[TWh]",
                    "energydemand-by-btype[TWh]"
                ]
            }
        },
        "boolean-input-1205:3036:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "data-type-1215:1170:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical"
                ]
            }
        },
        "single-selection-1205:2792:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:1393:444": {
            "type": "string",
            "default": "cal_bld_factor",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_bld_factor"
        },
        "string-input-1205:1393:445": {
            "type": "string",
            "default": "cal_bld_(emissions_.*residential_...)\\[.*",
            "description": "Pattern selecting the group of calibration columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_bld_(emissions_.*residential_...)\\[.*"
        },
        "string-input-1205:1393:446": {
            "type": "string",
            "default": "bld_(emissions_.*residential_...)\\[.*",
            "description": "Pattern selecting the group of columns to be calibrated. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "bld_(emissions_.*residential_...)\\[.*"
        },
        "string-input-1165:1231:357": {
            "type": "string",
            "default": ".*efficiencyX.*_.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*efficiencyX.*_.*"
        },
        "column-filter-1205:2994:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_non-residential_electricity_appliances[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_non-residential_electricity_appliances[TWh]",
                    "bld_energy-demand_non-residential_electricity_lighting[TWh]",
                    "bld_energy-demand_residential_electricity_appliances[TWh]",
                    "bld_energy-demand_residential_electricity_cooking[TWh]",
                    "bld_energy-demand_residential_gas-ff-natural_cooking[TWh]",
                    "bld_energy-demand_residential_electricity_lighting[TWh]"
                ]
            }
        },
        "single-selection-1205:1116:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "data-type-1154:1181:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical"
                ]
            }
        },
        "column-selection-1205:1611:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "Years"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "Years"
            }
        },
        "column-selection-2583:1594:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:2721:1017:357": {
            "type": "string",
            "default": "bld_floor-area_residential_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "bld_floor-area_residential_.*\\[.*"
        },
        "single-selection-2443:1014:658": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:3058:357": {
            "type": "string",
            "default": ".*energy.*_(.*tial_.*)_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy.*_(.*tial_.*)_.*\\[.*"
        },
        "column-filter-1205:3099:3103:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "1990+renovated-area[Mm2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "1990+renovated-area[Mm2]",
                    "1991+renovated-area[Mm2]",
                    "1992+renovated-area[Mm2]",
                    "1993+renovated-area[Mm2]",
                    "1994+renovated-area[Mm2]",
                    "1995+renovated-area[Mm2]"
                ]
            }
        },
        "column-filter-1165:1628:1421": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_new_dh_pipes[km]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_new_dh_pipes[km]"
                ]
            }
        },
        "single-selection-1217:1091:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "single-selection-1205:2789:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-2606:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:3430:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:3430:357": {
            "type": "string",
            "default": "(.*)\\+.*calibrated.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*calibrated.*\\[.*"
        },
        "string-input-1205:3058:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "boolean-input-1205:3436:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-2180:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_heat_gas-bio[TWh]",
                    "bld_energy-demand_heat_liquid-bio[TWh]",
                    "bld_floor-area_non-residential_education[million_m2]",
                    "bld_floor-area_non-residential_health[million_m2]",
                    "bld_floor-area_non-residential_hotels[million_m2]",
                    "bld_floor-area_non-residential_offices[million_m2]",
                    "bld_floor-area_non-residential_other[million_m2]",
                    "bld_floor-area_non-residential_trade[million_m2]",
                    "bld_floor-area_residential_mfh[million_m2]",
                    "bld_floor-area_residential_sfh[million_m2]",
                    "bld_energy-demand_heat_solid-waste[TWh]"
                ]
            }
        },
        "boolean-input-1165:2097:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "single-selection-1165:1238:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-1218:1088:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-filter-2191:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_nonres-floorarea_offices[1000m2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_nonres-floorarea_offices[1000m2]",
                    "bld_nonres-floorarea_hotels[1000m2]",
                    "bld_nonres-floorarea_trade[1000m2]",
                    "bld_nonres-floorarea_education[1000m2]",
                    "bld_nonres-floorarea_health[1000m2]",
                    "bld_nonres-floorarea_other[1000m2]"
                ]
            }
        },
        "single-selection-1205:2984:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1205:2783:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "boolean-input-2192:5044:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-selection-2819:1605:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "subsector"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "subsector"
            }
        },
        "boolean-input-2443:1014:646": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-1205:3058:349": {
            "type": "string",
            "default": "bld_energy-demand",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand"
        },
        "string-input-1205:3430:349": {
            "type": "string",
            "default": "fed_calibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_calibrated"
        },
        "file-chooser-2192:2806:4676": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/px-x-0204000000_106.xlsx"
                            },
                            "type": {
                                "type": "string",
                                "default": "DATA"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/px-x-0204000000_106.xlsx",
                        "type": "DATA"
                    }
                ]
            }
        },
        "single-selection-2443:1014:645": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:2721:1017:349": {
            "type": "string",
            "default": "bld_floor-area_residential",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "bld_floor-area_residential"
        },
        "boolean-input-1205:3106:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "boolean-input-2819:5047:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:3106:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-438:441:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-2192:2323:1596": {
            "type": "string",
            "default": "(.*)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)"
        },
        "string-input-2192:2323:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "single-selection-1165:803:1146:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:2721:1017:354": {
            "type": "string",
            "default": "Mm²",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mm²"
        },
        "column-selection-2192:1602:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "subsector"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "subsector"
            }
        },
        "string-input-2192:2323:1599": {
            "type": "string",
            "default": "energycarrier-JRC",
            "description": "Enter Description",
            "example": "energycarrier-JRC"
        },
        "column-filter-1205:3101:3085:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_non-residential_education[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_non-residential_education[TWh]",
                    "bld_energy-demand_non-residential_health[TWh]",
                    "bld_energy-demand_non-residential_hotels[TWh]",
                    "bld_energy-demand_non-residential_offices[TWh]",
                    "bld_energy-demand_non-residential_other[TWh]",
                    "bld_energy-demand_non-residential_trade[TWh]",
                    "bld_energy-demand_residential_mfh[TWh]",
                    "bld_energy-demand_residential_sfh[TWh]"
                ]
            }
        },
        "string-input-1205:3429:2906:843": {
            "type": "string",
            "default": "EU after calibration",
            "description": "Enter Description",
            "example": "EU after calibration"
        },
        "column-filter-2819:5386:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "column-filter-1217:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ll_bld_heat-district-technology-fuel_gas-ff-natural[%]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "ll_bld_heat-district-technology-fuel_gas-ff-natural[%]",
                    "ll_bld_heat-district-technology-fuel_liquid-ff-oil[%]",
                    "ll_bld_heat-district-technology-fuel_solid-ff-coal[%]",
                    "ll_bld_heat-district-technology-fuel_solid-bio[%]",
                    "ll_bld_heat-district-technology-fuel_heat-ambient[%]",
                    "ll_bld_heat-district-technology-fuel_heat-solar[%]",
                    "ll_bld_heat-district-technology-fuel_heat-geothermal[%]"
                ]
            }
        },
        "column-selection-2590:1600:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "technology"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "technology"
            }
        },
        "boolean-input-2192:5174:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "single-selection-1179:1156:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "column-filter-1205:3101:2808:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "single-selection-1179:1156:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "single-selection-1165:2097:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:3101:2808:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-2187:349": {
            "type": "string",
            "default": "bld_energy-demand_heat",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "bld_energy-demand_heat"
        },
        "single-selection-1205:3436:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-2192:5386:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "file-chooser-2819:2806:4676": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/px-x-0204000000_106.xlsx"
                            },
                            "type": {
                                "type": "string",
                                "default": "DATA"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/px-x-0204000000_106.xlsx",
                        "type": "DATA"
                    }
                ]
            }
        },
        "string-input-2816:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-2595:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_floor-area_non-residential_education[million_m2]",
                    "bld_floor-area_non-residential_health[million_m2]",
                    "bld_floor-area_non-residential_hotels[million_m2]",
                    "bld_floor-area_non-residential_offices[million_m2]",
                    "bld_floor-area_non-residential_other[million_m2]",
                    "bld_floor-area_non-residential_trade[million_m2]",
                    "bld_floor-area_residential_mfh[million_m2]",
                    "bld_floor-area_residential_sfh[million_m2]"
                ]
            }
        },
        "data-type-1184:1193:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "scenario"
                ]
            }
        },
        "string-input-2605:345": {
            "type": "string",
            "default": "bld_air",
            "description": "Enter Description",
            "example": "bld_air"
        },
        "single-selection-2192:5174:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1154:1178:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_building-renovation-energy-achieved_sfh-shl_1800-2010[%]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_building-renovation-energy-achieved_sfh-shl_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_sfh-med_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_sfh-dep_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_mfh-shl_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_mfh-med_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_mfh-dep_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_offices-shl_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_offices-med_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_offices-dep_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_trade-shl_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_trade-med_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_trade-dep_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_hotels-shl_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_hotels-med_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_hotels-dep_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_health-shl_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_health-med_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_health-dep_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_education-shl_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_education-med_1800-2010[%]",
                    "ots_bld_building-renovation-energy-achieved_education-dep_1800-2010[%]"
                ]
            }
        },
        "single-selection-1154:1164:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-1154:1091:343": {
            "type": "string",
            "default": "climate-impact",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "climate-impact"
        },
        "string-input-1205:2938:2902:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-1205:3106:3219:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "electricity+ratio"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "electricity+ratio",
                    "gas-bio+ratio",
                    "gas-ff-natural+ratio",
                    "heat-ambient+ratio",
                    "heat-geothermal+ratio",
                    "heat-solar+ratio",
                    "liquid-bio-diesel+ratio",
                    "liquid-bio-gasoline+ratio",
                    "liquid-ff-heatingoil+ratio",
                    "solid-bio+ratio",
                    "solid-ff-coal+ratio",
                    "solid-waste+ratio"
                ]
            }
        },
        "single-selection-1154:1164:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "column-filter-1205:2941:2857:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "unrenovated-area-acc[Mm2]",
                    "technology-factor",
                    "energy-demand_decentral_renovated[GWh]",
                    "energy-demand_decentral_constructed[GWh]",
                    "energy-demand_decentral_unrenovated[GWh]",
                    "energy-demand_decentral_[GWh]",
                    "energy-demand[GWh]",
                    "cal_rate_[%]"
                ]
            }
        },
        "country-list-2812:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "string-input-2187:357": {
            "type": "string",
            "default": ".*energy.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy.*"
        },
        "string-input-2187:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "column-filter-1205:3433:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_non-residential_appliances_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_non-residential_appliances_electricity[TWh]",
                    "bld_energy-demand_non-residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_non-residential_lighting_electricity[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_residential_appliances_electricity[TWh]",
                    "bld_energy-demand_residential_cooking_electricity[TWh]",
                    "bld_energy-demand_residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_residential_lighting_electricity[TWh]",
                    "bld_energy-demand_residential_space-cooling_electricity[TWh]"
                ]
            }
        },
        "boolean-input-1218:1088:360": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-2597:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_floor-area_residential_mfh[million_m2]",
                    "bld_floor-area_residential_sfh[million_m2]"
                ]
            }
        },
        "column-filter-2806:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_heat_electricity[TWh]",
                    "bld_energy-demand_heat_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_solid-ff-coal[TWh]",
                    "bld_energy-demand_heat_liquid-bio[TWh]",
                    "bld_energy-demand_heat_solid-bio[TWh]",
                    "bld_energy-demand_heat_heat-solar[TWh]",
                    "bld_energy-demand_heat_heat-geothermal[TWh]",
                    "bld_energy-demand_heat_solid-waste[TWh]"
                ]
            }
        },
        "single-selection-1214:1162:1207:645": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "string-input-1205:1393:1150:446": {
            "type": "string",
            "default": "bld_(emissions_.*residential_...)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "bld_(emissions_.*residential_...)\\[.*"
        },
        "column-filter-1205:2845:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "emission-factor_CO2[Mt/TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "emission-factor_CO2[Mt/TWh]"
                ]
            }
        },
        "string-input-2192:1605:1596": {
            "type": "string",
            "default": "(.*): (.*)",
            "description": "Enter Description",
            "example": "(.*): (.*)"
        },
        "column-filter-1205:3429:2914:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances[GWh]",
                    "cooking[GWh]",
                    "hot-water[GWh]",
                    "lighting[GWh]",
                    "space-cooling[GWh]"
                ]
            }
        },
        "string-input-2192:1605:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "single-selection-0:327:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "fts"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "fts"
            }
        },
        "column-filter-1154:441:639:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Mm2_to_1000m2"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "Mm2_to_1000m2"
                ]
            }
        },
        "column-selection-2821:2323:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-2192:1605:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "boolean-input-1205:2984:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "string-input-2593:843": {
            "type": "string",
            "default": "Energy by fuel type",
            "description": "Enter Description",
            "example": "Energy by fuel type"
        },
        "boolean-input-0:644:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "column-filter-1165:715:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_energy-demand_contribution_heat-waste[TWh/year]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_energy-demand_contribution_heat-waste[TWh/year]",
                    "dhg_energy-demand_contribution_CHP[TWh]",
                    "dhg_energy-demand_gas-ff-natural[TWh/year]",
                    "dhg_energy-demand_liquid-ff-heatingoil[TWh/year]",
                    "dhg_energy-demand_solid-ff-coal[TWh/year]",
                    "dhg_energy-demand_solid-bio[TWh/year]",
                    "dhg_energy-demand_heat-ambient[TWh/year]",
                    "dhg_energy-demand_heat-solar[TWh/year]",
                    "dhg_energy-demand_heat-geothermal[TWh/year]"
                ]
            }
        },
        "single-selection-1154:441:441:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-1205:2721:1017:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-selection-2819:1602:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "subsector"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "subsector"
            }
        },
        "single-selection-2805:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "column-filter-1165:2078:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "boolean-input-2819:5044:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:3213:2380:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "data-type-1218:1087:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-1205:2938:2904:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "single-selection-1214:1162:1207:658": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1205:2640:2231:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "boolean-input-1217:1091:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "string-input-1205:1393:1150:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-2821:2323:1596": {
            "type": "string",
            "default": "(.*)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)"
        },
        "single-selection-2805:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Yes"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "Yes"
            }
        },
        "string-input-1154:1163:343": {
            "type": "string",
            "default": "conversion-rates",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "conversion-rates"
        },
        "string-input-2821:2323:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1205:2845:460": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mt"
        },
        "string-input-2821:2323:1599": {
            "type": "string",
            "default": "energycarrier-JRC",
            "description": "Enter Description",
            "example": "energycarrier-JRC"
        },
        "column-filter-1205:2942:2952:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_uncalibrated_electricity[TWh]",
                    "fed_uncalibrated_gas-bio[TWh]",
                    "fed_uncalibrated_gas-ff-natural[TWh]",
                    "fed_uncalibrated_heat-ambient[TWh]",
                    "fed_uncalibrated_heat-geothermal[TWh]",
                    "fed_uncalibrated_heat-solar[TWh]",
                    "fed_uncalibrated_liquid-bio-diesel[TWh]",
                    "fed_uncalibrated_liquid-bio-gasoline[TWh]",
                    "fed_uncalibrated_liquid-ff-heatingoil[TWh]",
                    "fed_uncalibrated_solid-bio[TWh]",
                    "fed_uncalibrated_solid-ff-coal[TWh]",
                    "fed_uncalibrated_solid-waste[TWh]"
                ]
            }
        },
        "column-filter-1218:1113:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_building-demolition-rate_sfh-exi[%]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_building-demolition-rate_sfh-exi[%]",
                    "ots_bld_building-demolition-rate_mfh-exi[%]",
                    "ots_bld_building-demolition-rate_trade-exi[%]",
                    "ots_bld_building-demolition-rate_education-exi[%]",
                    "ots_bld_building-demolition-rate_hotels-exi[%]",
                    "ots_bld_building-demolition-rate_health-exi[%]",
                    "ots_bld_building-demolition-rate_offices-exi[%]",
                    "ots_bld_building-demolition-rate_other-exi[%]",
                    "ots_bld_building-demolition-rate_sfh-shl[%]",
                    "ots_bld_building-demolition-rate_sfh-med[%]",
                    "ots_bld_building-demolition-rate_sfh-dep[%]",
                    "ots_bld_building-demolition-rate_mfh-shl[%]",
                    "ots_bld_building-demolition-rate_mfh-med[%]",
                    "ots_bld_building-demolition-rate_mfh-dep[%]",
                    "ots_bld_building-demolition-rate_offices-shl[%]",
                    "ots_bld_building-demolition-rate_offices-med[%]",
                    "ots_bld_building-demolition-rate_offices-dep[%]",
                    "ots_bld_building-demolition-rate_trade-shl[%]",
                    "ots_bld_building-demolition-rate_trade-med[%]",
                    "ots_bld_building-demolition-rate_trade-dep[%]",
                    "ots_bld_building-demolition-rate_hotels-shl[%]",
                    "ots_bld_building-demolition-rate_hotels-med[%]",
                    "ots_bld_building-demolition-rate_hotels-dep[%]",
                    "ots_bld_building-demolition-rate_health-shl[%]",
                    "ots_bld_building-demolition-rate_health-med[%]",
                    "ots_bld_building-demolition-rate_health-dep[%]",
                    "ots_bld_building-demolition-rate_education-shl[%]",
                    "ots_bld_building-demolition-rate_education-med[%]",
                    "ots_bld_building-demolition-rate_education-dep[%]",
                    "ots_bld_building-demolition-rate_other-shl[%]",
                    "ots_bld_building-demolition-rate_other-med[%]",
                    "ots_bld_building-demolition-rate_other-dep[%]"
                ]
            }
        },
        "column-filter-1176:1162:1208:653": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Sum(cal_dhg_energy_heat-district[TWh])"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "Sum(cal_dhg_energy_heat-district[TWh])"
                ]
            }
        },
        "data-type-1154:441:643:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-2793:843": {
            "type": "string",
            "default": "Electricity",
            "description": "Enter Description",
            "example": "Electricity"
        },
        "data-type-1218:1072:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-1670:843": {
            "type": "string",
            "default": "Patway explorer",
            "description": "Enter Description",
            "example": "Patway explorer"
        },
        "single-selection-1205:3432:2951:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1165:2086:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "column-selection-2192:2323:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "boolean-input-2192:4960:4977:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-2790:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "single-selection-1184:1192:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-filter-1205:3101:3083:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_heat_residential_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_heat_residential_electricity[TWh]",
                    "bld_energy-demand_heat_residential_gas-bio[TWh]",
                    "bld_energy-demand_heat_residential_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_residential_heat-ambient[TWh]",
                    "bld_energy-demand_heat_residential_heat-geothermal[TWh]",
                    "bld_energy-demand_heat_residential_heat-solar[TWh]",
                    "bld_energy-demand_heat_residential_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_heat_residential_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_heat_residential_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_residential_solid-bio[TWh]",
                    "bld_energy-demand_heat_residential_solid-ff-coal[TWh]",
                    "bld_energy-demand_heat_residential_solid-waste[TWh]",
                    "bld_energy-demand_heat_non-residential_electricity[TWh]",
                    "bld_energy-demand_heat_non-residential_gas-bio[TWh]",
                    "bld_energy-demand_heat_non-residential_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_non-residential_heat-ambient[TWh]",
                    "bld_energy-demand_heat_non-residential_heat-geothermal[TWh]",
                    "bld_energy-demand_heat_non-residential_heat-solar[TWh]",
                    "bld_energy-demand_heat_non-residential_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_heat_non-residential_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_heat_non-residential_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_non-residential_solid-bio[TWh]",
                    "bld_energy-demand_heat_non-residential_solid-ff-coal[TWh]",
                    "bld_energy-demand_heat_non-residential_solid-waste[TWh]"
                ]
            }
        },
        "column-filter-1165:1217:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-1205:2852:357": {
            "type": "string",
            "default": ".*energy-demand_[h,a].*_([^e,r,n].*)\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand_[h,a].*_([^e,r,n].*)\\[.*"
        },
        "string-input-2192:2313:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "column-filter-1205:3174:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_heat_liquid-bio-diesel[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_heat_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_heat_liquid-bio-gasoline[TWh]"
                ]
            }
        },
        "string-input-1205:2852:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-2192:2313:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2192:2313:1596": {
            "type": "string",
            "default": "(.*)(\\(kt CO2\\))_(.*)",
            "description": "Enter Description",
            "example": "(.*)(\\(kt CO2\\))_(.*)"
        },
        "column-filter-1205:1854:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_constructed-area_non-residential[Mm2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_constructed-area_non-residential[Mm2]",
                    "bld_renovated-area_non-residential[Mm2]",
                    "bld_renovated-surface-area_non-residential_wall[Mm2]",
                    "bld_constructed-area_residential[Mm2]",
                    "bld_renovated-area_residential[Mm2]",
                    "bld_renovated-surface-area_residential_wall[Mm2]"
                ]
            }
        },
        "string-input-1205:3436:2933:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "single-selection-1205:3154:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:3432:2923:843": {
            "type": "string",
            "default": "EU calibration rate",
            "description": "Enter Description",
            "example": "EU calibration rate"
        },
        "column-filter-1205:3189:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy_non-residential_hot-water_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy_non-residential_hot-water_electricity[TWh]",
                    "energy_non-residential_hot-water_gas-bio[TWh]",
                    "energy_non-residential_hot-water_gas-ff-natural[TWh]",
                    "energy_non-residential_hot-water_heat-ambient[TWh]",
                    "energy_non-residential_hot-water_heat-district[TWh]",
                    "energy_non-residential_hot-water_heat-geothermal[TWh]",
                    "energy_non-residential_hot-water_heat-solar[TWh]",
                    "energy_non-residential_hot-water_liquid-bio-diesel[TWh]",
                    "energy_non-residential_hot-water_liquid-bio-gasoline[TWh]",
                    "energy_non-residential_hot-water_liquid-ff-heatingoil[TWh]",
                    "energy_non-residential_hot-water_solid-bio[TWh]",
                    "energy_non-residential_hot-water_solid-ff-coal[TWh]",
                    "energy_non-residential_hot-water_solid-waste[TWh]",
                    "energy_non-residential_lighting_electricity[TWh]",
                    "energy_non-residential_space-cooling_electricity[TWh]",
                    "energy_non-residential_space-cooling_gas-bio[TWh]",
                    "energy_non-residential_space-cooling_gas-ff-natural[TWh]",
                    "energy_non-residential_space-heating_electricity[TWh]",
                    "energy_non-residential_space-heating_gas-bio[TWh]",
                    "energy_non-residential_space-heating_gas-ff-natural[TWh]",
                    "energy_non-residential_space-heating_heat-ambient[TWh]",
                    "energy_non-residential_space-heating_heat-geothermal[TWh]",
                    "energy_non-residential_space-heating_heat-solar[TWh]",
                    "energy_non-residential_space-heating_liquid-bio-diesel[TWh]",
                    "energy_non-residential_space-heating_liquid-bio-gasoline[TWh]",
                    "energy_non-residential_space-heating_liquid-ff-heatingoil[TWh]",
                    "energy_non-residential_space-heating_solid-bio[TWh]",
                    "energy_non-residential_space-heating_solid-ff-coal[TWh]",
                    "energy_non-residential_space-heating_solid-waste[TWh]",
                    "energy_residential_appliances_electricity[TWh]",
                    "energy_residential_cooking_electricity[TWh]",
                    "energy_residential_cooking_gas-bio[TWh]",
                    "energy_residential_cooking_gas-ff-natural[TWh]",
                    "energy_residential_cooking_solid-bio[TWh]",
                    "energy_residential_cooking_solid-ff-coal[TWh]",
                    "energy_residential_hot-water_electricity[TWh]",
                    "energy_residential_hot-water_gas-bio[TWh]",
                    "energy_residential_hot-water_gas-ff-natural[TWh]",
                    "energy_residential_hot-water_heat-ambient[TWh]",
                    "energy_residential_hot-water_heat-district[TWh]",
                    "energy_residential_hot-water_heat-geothermal[TWh]",
                    "energy_residential_hot-water_heat-solar[TWh]",
                    "energy_residential_hot-water_liquid-bio-diesel[TWh]",
                    "energy_residential_hot-water_liquid-bio-gasoline[TWh]",
                    "energy_residential_hot-water_liquid-ff-heatingoil[TWh]",
                    "energy_residential_hot-water_solid-bio[TWh]",
                    "energy_residential_hot-water_solid-ff-coal[TWh]",
                    "energy_residential_hot-water_solid-waste[TWh]",
                    "energy_residential_lighting_electricity[TWh]",
                    "energy_residential_space-cooling_electricity[TWh]",
                    "energy_residential_space-cooling_gas-bio[TWh]",
                    "energy_residential_space-cooling_gas-ff-natural[TWh]",
                    "energy_residential_space-heating_electricity[TWh]",
                    "energy_residential_space-heating_gas-bio[TWh]",
                    "energy_residential_space-heating_gas-ff-natural[TWh]",
                    "energy_residential_space-heating_heat-ambient[TWh]",
                    "energy_residential_space-heating_heat-geothermal[TWh]",
                    "energy_residential_space-heating_heat-solar[TWh]",
                    "energy_residential_space-heating_liquid-bio-diesel[TWh]",
                    "energy_residential_space-heating_liquid-bio-gasoline[TWh]",
                    "energy_residential_space-heating_liquid-ff-heatingoil[TWh]",
                    "energy_residential_space-heating_solid-bio[TWh]",
                    "energy_residential_space-heating_solid-ff-coal[TWh]",
                    "energy_residential_space-heating_solid-waste[TWh]"
                ]
            }
        },
        "single-selection-2443:1014:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "SPLIT"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "SPLIT"
            }
        },
        "string-input-1205:2845:446": {
            "type": "string",
            "default": "emission-factor_CO2\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "emission-factor_CO2\\[.*"
        },
        "boolean-input-1165:715:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "column-filter-438:442:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_appliance-efficiency_fridge[kWh/h]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_appliance-efficiency_fridge[kWh/h]",
                    "ots_bld_appliance-efficiency_freezer[kWh/h]",
                    "ots_bld_appliance-efficiency_wmachine[kWh/h]",
                    "ots_bld_appliance-efficiency_dishwasher[kWh/h]",
                    "ots_bld_appliance-efficiency_dryer[kWh/h]",
                    "ots_bld_appliance-efficiency_ac[kWh/h]",
                    "ots_bld_appliance-efficiency_tv[kWh/h]",
                    "ots_bld_appliance-efficiency_comp[kWh/h]",
                    "ots_bld_appliance-efficiency_phone[kWh/h]"
                ]
            }
        },
        "column-filter-2797:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_heat_electricity[TWh]",
                    "bld_energy-demand_heat_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_solid-ff-coal[TWh]",
                    "bld_energy-demand_heat_solid-bio[TWh]",
                    "bld_energy-demand_heat_heat-ambient[TWh]"
                ]
            }
        },
        "string-input-1205:2845:445": {
            "type": "string",
            "default": "energy-demand_calibrated_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "energy-demand_calibrated_(.*)\\[.*"
        },
        "string-input-1205:2845:444": {
            "type": "string",
            "default": "emissions_CO2",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "emissions_CO2"
        },
        "single-selection-1214:428:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Naming convention"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "Naming convention"
            }
        },
        "string-input-1217:446": {
            "type": "string",
            "default": "onehundred",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "onehundred"
        },
        "boolean-input-1205:2640:2380:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-filter-2618:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "bld_new_dhg_pipe[km]",
                    "bld_floor-area_new_non-residential[m2]",
                    "bld_floor-area_reno_non-residential[m2]",
                    "bld_floor-area_new_residential[m2]",
                    "bld_floor-area_reno_residential[m2]",
                    "bld_fridge[num]",
                    "bld_freezer[num]",
                    "bld_wmachine[num]",
                    "bld_dishwasher[num]",
                    "bld_dryer[num]",
                    "bld_tv[num]",
                    "bld_computer[num]",
                    "bld_phone[num]"
                ]
            }
        },
        "single-selection-1205:3213:2380:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1217:444": {
            "type": "string",
            "default": "fts",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "fts"
        },
        "string-input-1217:445": {
            "type": "string",
            "default": "ll_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "ll_(.*)\\[.*"
        },
        "string-input-1205:3099:2794:843": {
            "type": "string",
            "default": "Floor area",
            "description": "Enter Description",
            "example": "Floor area"
        },
        "string-input-2192:2309:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "single-selection-1214:1162:1182:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1205:2420:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "single-selection-2590:2006:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:652:349": {
            "type": "string",
            "default": "energy-demand_residential_appliances",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "energy-demand_residential_appliances"
        },
        "column-filter-1205:3436:2947:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "cooking+ColumnValues",
                    "hot-water+ColumnValues",
                    "lighting+ColumnValues",
                    "space-cooling+ColumnValues"
                ]
            }
        },
        "single-selection-1165:2089:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:1393:1151:445": {
            "type": "string",
            "default": "cal_bld_(emissions_.*residential_...)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_bld_(emissions_.*residential_...)\\[.*"
        },
        "string-input-1205:1393:1151:446": {
            "type": "string",
            "default": "bld_(emissions_.*residential_...)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "bld_(emissions_.*residential_...)\\[.*"
        },
        "column-filter-1205:724:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "double-input-2443:1638:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "string-input-2192:2309:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2192:2309:1596": {
            "type": "string",
            "default": "(.*): (.*)",
            "description": "Enter Description",
            "example": "(.*): (.*)"
        },
        "single-selection-1165:1419": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "CAPEX"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "CAPEX"
            }
        },
        "column-filter-1179:1156:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cal_tra_calibration_HDV[Gtkm]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "cal_tra_calibration_HDV[Gtkm]",
                    "cal_tra_calibration_rail[Gtkm]",
                    "cal_tra_calibration_IWW[Gtkm]",
                    "cal_tra_calibration_aviation[TWh]",
                    "cal_tra_total[energy]",
                    "cal_tra_rail[energy]",
                    "cal_tra_road[energy]",
                    "cal_tra_aviation-international[energy]",
                    "cal_tra_aviation-domestic[energy]",
                    "cal_tra_navigation-domestic[energy]",
                    "cal_tra_pipeline[energy]",
                    "cal_tra_non-spec[energy]",
                    "cal_tra_calibration_transport-emissions[GtCO2e]"
                ]
            }
        },
        "single-selection-1205:1014:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "SPLIT"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "SPLIT"
            }
        },
        "string-input-1165:803:1151:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "string-input-1205:2939:2859:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:1393:1151:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "column-filter-2794:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "bld_bioenergy_gas[TWh]",
                    "bld_bioenergy_liquid_biodiesel[TWh]",
                    "bld_bioenergy_liquid_biogasoline[TWh]",
                    "bld_bioenergy_solid_woodlogs[TWh]",
                    "bld_bioenergy_solid_pellets[TWh]"
                ]
            }
        },
        "boolean-input-2192:2308:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:652:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:652:357": {
            "type": "string",
            "default": ".*energy-demand.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand.*"
        },
        "boolean-input-1165:803:1151:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-filter-1205:2984:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-demand_residential_appliances_electricity_comp[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-demand_residential_appliances_electricity_comp[TWh]",
                    "energy-demand_residential_appliances_electricity_dishwasher[TWh]",
                    "energy-demand_residential_appliances_electricity_dryer[TWh]",
                    "energy-demand_residential_appliances_electricity_freezer[TWh]",
                    "energy-demand_residential_appliances_electricity_fridge[TWh]",
                    "energy-demand_residential_appliances_electricity_phone[TWh]",
                    "energy-demand_residential_appliances_electricity_tv[TWh]",
                    "energy-demand_residential_appliances_electricity_wmachine[TWh]",
                    "energy-demand_residential_cooking_electricity_all-tech[TWh]",
                    "energy-demand_residential_cooking_gas-ff-natural_all-tech[TWh]",
                    "energy-demand_non-residential_hot-water_electricity_all-tech[TWh]",
                    "energy-demand_residential_hot-water_electricity_all-tech[TWh]",
                    "energy-demand_non-residential_lighting_electricity_all-tech[TWh]",
                    "energy-demand_residential_lighting_electricity_all-tech[TWh]",
                    "energy-demand_non-residential_space-cooling_electricity_all-tech[TWh]",
                    "energy-demand_residential_space-cooling_electricity_all-tech[TWh]",
                    "energy-demand_non-residential_appliances_electricity_comp[TWh]"
                ]
            }
        },
        "column-filter-2815:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-2175:2597:843": {
            "type": "string",
            "default": "Floor Area",
            "description": "Enter Description",
            "example": "Floor Area"
        },
        "data-type-1154:644:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical"
                ]
            }
        },
        "single-selection-1154:441:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "ots"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "ots"
            }
        },
        "single-selection-1165:2789:821:1175:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-1205:3430:2951:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-1205:3431:2947:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_calibrated_appliances[TWh]",
                    "fed_calibrated_cooking[TWh]",
                    "fed_calibrated_hot-water[TWh]",
                    "fed_calibrated_lighting[TWh]",
                    "fed_calibrated_space-cooling[TWh]"
                ]
            }
        },
        "boolean-input-1205:1603:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "boolean-input-2443:1592:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1165:803:1151:444": {
            "type": "string",
            "default": "cal_delta",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_delta"
        },
        "single-selection-1154:1181:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1165:803:1151:446": {
            "type": "string",
            "default": "dhg_(emissions_added-heat-district_...)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "dhg_(emissions_added-heat-district_...)\\[.*"
        },
        "single-selection-2815:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Yes"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "Yes"
            }
        },
        "column-filter-1205:3429:2951:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "appliances+energy-demand[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "appliances+energy-demand[GWh]",
                    "cooking+energy-demand[GWh]",
                    "hot-water+energy-demand[GWh]",
                    "lighting+energy-demand[GWh]",
                    "space-cooling+energy-demand[GWh]"
                ]
            }
        },
        "string-input-1165:803:1151:445": {
            "type": "string",
            "default": "cal_dhg_(emissions_added-heat-district_...)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_dhg_(emissions_added-heat-district_...)\\[.*"
        },
        "usemap-2819:2806:4886": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/usemap.csv"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/usemap.csv",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "string-input-1205:2942:2933:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "string-input-1184:1189:343": {
            "type": "string",
            "default": "building-constants",
            "description": "the name of the input should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-constants"
        },
        "single-selection-1184:1191:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "single-selection-1214:1162:1207:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "SPLIT"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "SPLIT"
            }
        },
        "single-selection-1218:1087:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1165:715:354": {
            "type": "string",
            "default": "TWh/year",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh/year"
        },
        "country-list-2808:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "string-input-1165:715:357": {
            "type": "string",
            "default": ".*energy-demand_.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand_.*"
        },
        "single-selection-2815:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "string-input-1205:2941:2874:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1165:1198:349": {
            "type": "string",
            "default": "dhg_energy-demand_heat-contribution",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "dhg_energy-demand_heat-contribution"
        },
        "string-input-1205:1832:1599": {
            "type": "string",
            "default": "buildingpart",
            "description": "Enter Description",
            "example": "buildingpart"
        },
        "string-input-1205:1832:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1205:1832:1596": {
            "type": "string",
            "default": "bld_(.*)_(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "bld_(.*)_(.*)_(.*)(\\[.*)"
        },
        "single-selection-1205:1393:1150:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-1176:1162:1181:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "single-selection-1205:2789:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "column-filter-1214:1162:1166:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Sum(cal_product_emissions_non-residential_CH4[%])"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "Sum(cal_product_emissions_non-residential_CH4[%])",
                    "Sum(cal_product_emissions_non-residential_CO2[%])",
                    "Sum(cal_product_emissions_non-residential_N2O[%])",
                    "Sum(cal_product_emissions_residential_CH4[%])",
                    "Sum(cal_product_emissions_residential_CO2[%])",
                    "Sum(cal_product_emissions_residential_N2O[%])",
                    "Sum(cal_product_energy_non-residential_cooking[%])",
                    "Sum(cal_product_energy_non-residential_hot-water[%])",
                    "Sum(cal_product_energy_non-residential_lighting[%])",
                    "Sum(cal_product_energy_non-residential_space-cooling[%])",
                    "Sum(cal_product_energy_non-residential_space-heating[%])",
                    "Sum(cal_product_energy_residential_appliances[%])",
                    "Sum(cal_product_energy_residential_cooking[%])",
                    "Sum(cal_product_energy_residential_hot-water[%])",
                    "Sum(cal_product_energy_residential_lighting[%])",
                    "Sum(cal_product_energy_residential_space-cooling[%])",
                    "Sum(cal_product_energy_residential_space-heating[%])",
                    "Sum(cal_product_energy_non-residential_appliances[%])"
                ]
            }
        },
        "single-selection-1154:1091:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-filter-1217:647:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-1217:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-1165:715:349": {
            "type": "string",
            "default": "dhg_energy-demand_heat-district",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "dhg_energy-demand_heat-district"
        },
        "string-input-1205:3431:2927:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "string-input-1165:1420": {
            "type": "string",
            "default": "dhg.*capacit.*(dh_.*)\\[.*]new",
            "description": "Pattern selecting the activity to use for cost calculation. The technology is identified by a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the technology identifier.\n",
            "example": "dhg.*capacit.*(dh_.*)\\[.*]new"
        },
        "single-selection-1205:1835:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "column-filter-2808:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "boolean-input-1165:2787:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "boolean-input-1205:1831:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:2640:2232:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1179:1155:343": {
            "type": "string",
            "default": "emissions",
            "description": "the calibration name should be the same as the file name (without prefix ots-fts-ll and module trigram)",
            "example": "emissions"
        },
        "column-filter-1205:3037:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_emissions-CH4_gas-ff-natural_residential_non-space-heating[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_emissions-CH4_gas-ff-natural_residential_non-space-heating[Mt]",
                    "bld_emissions-CO2_gas-ff-natural_residential_non-space-heating[Mt]",
                    "bld_emissions-N2O_gas-ff-natural_residential_non-space-heating[Mt]",
                    "bld_emissions-CO2_gas-bio_non-residential_education[Mt]",
                    "bld_emissions-N2O_gas-bio_non-residential_education[Mt]",
                    "bld_emissions-CH4_gas-bio_non-residential_education[Mt]",
                    "bld_emissions-CO2_gas-bio_non-residential_health[Mt]",
                    "bld_emissions-N2O_gas-bio_non-residential_health[Mt]",
                    "bld_emissions-CH4_gas-bio_non-residential_health[Mt]",
                    "bld_emissions-CO2_gas-bio_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_gas-bio_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_gas-bio_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_gas-bio_non-residential_offices[Mt]",
                    "bld_emissions-N2O_gas-bio_non-residential_offices[Mt]",
                    "bld_emissions-CH4_gas-bio_non-residential_offices[Mt]",
                    "bld_emissions-CO2_gas-bio_non-residential_other[Mt]",
                    "bld_emissions-N2O_gas-bio_non-residential_other[Mt]",
                    "bld_emissions-CH4_gas-bio_non-residential_other[Mt]",
                    "bld_emissions-CO2_gas-bio_non-residential_trade[Mt]",
                    "bld_emissions-N2O_gas-bio_non-residential_trade[Mt]",
                    "bld_emissions-CH4_gas-bio_non-residential_trade[Mt]",
                    "bld_emissions-CO2_gas-bio_residential_mfh[Mt]",
                    "bld_emissions-N2O_gas-bio_residential_mfh[Mt]",
                    "bld_emissions-CH4_gas-bio_residential_mfh[Mt]",
                    "bld_emissions-CO2_gas-bio_residential_sfh[Mt]",
                    "bld_emissions-N2O_gas-bio_residential_sfh[Mt]",
                    "bld_emissions-CH4_gas-bio_residential_sfh[Mt]",
                    "bld_emissions-CO2_gas-ff-natural_non-residential_education[Mt]",
                    "bld_emissions-N2O_gas-ff-natural_non-residential_education[Mt]",
                    "bld_emissions-CH4_gas-ff-natural_non-residential_education[Mt]",
                    "bld_emissions-CO2_gas-ff-natural_non-residential_health[Mt]",
                    "bld_emissions-N2O_gas-ff-natural_non-residential_health[Mt]",
                    "bld_emissions-CH4_gas-ff-natural_non-residential_health[Mt]",
                    "bld_emissions-CO2_gas-ff-natural_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_gas-ff-natural_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_gas-ff-natural_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_gas-ff-natural_non-residential_offices[Mt]",
                    "bld_emissions-N2O_gas-ff-natural_non-residential_offices[Mt]",
                    "bld_emissions-CH4_gas-ff-natural_non-residential_offices[Mt]",
                    "bld_emissions-CO2_gas-ff-natural_non-residential_other[Mt]",
                    "bld_emissions-N2O_gas-ff-natural_non-residential_other[Mt]",
                    "bld_emissions-CH4_gas-ff-natural_non-residential_other[Mt]",
                    "bld_emissions-CO2_gas-ff-natural_non-residential_trade[Mt]",
                    "bld_emissions-N2O_gas-ff-natural_non-residential_trade[Mt]",
                    "bld_emissions-CH4_gas-ff-natural_non-residential_trade[Mt]",
                    "bld_emissions-CO2_gas-ff-natural_residential_mfh[Mt]",
                    "bld_emissions-N2O_gas-ff-natural_residential_mfh[Mt]",
                    "bld_emissions-CH4_gas-ff-natural_residential_mfh[Mt]",
                    "bld_emissions-CO2_gas-ff-natural_residential_sfh[Mt]",
                    "bld_emissions-N2O_gas-ff-natural_residential_sfh[Mt]",
                    "bld_emissions-CH4_gas-ff-natural_residential_sfh[Mt]",
                    "bld_emissions-CO2_heat-ambient_non-residential_education[Mt]",
                    "bld_emissions-N2O_heat-ambient_non-residential_education[Mt]",
                    "bld_emissions-CH4_heat-ambient_non-residential_education[Mt]",
                    "bld_emissions-CO2_heat-ambient_non-residential_health[Mt]",
                    "bld_emissions-N2O_heat-ambient_non-residential_health[Mt]",
                    "bld_emissions-CH4_heat-ambient_non-residential_health[Mt]",
                    "bld_emissions-CO2_heat-ambient_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_heat-ambient_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_heat-ambient_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_heat-ambient_non-residential_offices[Mt]",
                    "bld_emissions-N2O_heat-ambient_non-residential_offices[Mt]",
                    "bld_emissions-CH4_heat-ambient_non-residential_offices[Mt]",
                    "bld_emissions-CO2_heat-ambient_non-residential_other[Mt]",
                    "bld_emissions-N2O_heat-ambient_non-residential_other[Mt]",
                    "bld_emissions-CH4_heat-ambient_non-residential_other[Mt]",
                    "bld_emissions-CO2_heat-ambient_non-residential_trade[Mt]",
                    "bld_emissions-N2O_heat-ambient_non-residential_trade[Mt]",
                    "bld_emissions-CH4_heat-ambient_non-residential_trade[Mt]",
                    "bld_emissions-CO2_heat-ambient_residential_mfh[Mt]",
                    "bld_emissions-N2O_heat-ambient_residential_mfh[Mt]",
                    "bld_emissions-CH4_heat-ambient_residential_mfh[Mt]",
                    "bld_emissions-CO2_heat-ambient_residential_sfh[Mt]",
                    "bld_emissions-N2O_heat-ambient_residential_sfh[Mt]",
                    "bld_emissions-CH4_heat-ambient_residential_sfh[Mt]",
                    "bld_emissions-CO2_heat-geothermal_non-residential_education[Mt]",
                    "bld_emissions-N2O_heat-geothermal_non-residential_education[Mt]",
                    "bld_emissions-CH4_heat-geothermal_non-residential_education[Mt]",
                    "bld_emissions-CO2_heat-geothermal_non-residential_health[Mt]",
                    "bld_emissions-N2O_heat-geothermal_non-residential_health[Mt]",
                    "bld_emissions-CH4_heat-geothermal_non-residential_health[Mt]",
                    "bld_emissions-CO2_heat-geothermal_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_heat-geothermal_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_heat-geothermal_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_heat-geothermal_non-residential_offices[Mt]",
                    "bld_emissions-N2O_heat-geothermal_non-residential_offices[Mt]",
                    "bld_emissions-CH4_heat-geothermal_non-residential_offices[Mt]",
                    "bld_emissions-CO2_heat-geothermal_non-residential_other[Mt]",
                    "bld_emissions-N2O_heat-geothermal_non-residential_other[Mt]",
                    "bld_emissions-CH4_heat-geothermal_non-residential_other[Mt]",
                    "bld_emissions-CO2_heat-geothermal_non-residential_trade[Mt]",
                    "bld_emissions-N2O_heat-geothermal_non-residential_trade[Mt]",
                    "bld_emissions-CH4_heat-geothermal_non-residential_trade[Mt]",
                    "bld_emissions-CO2_heat-geothermal_residential_mfh[Mt]",
                    "bld_emissions-N2O_heat-geothermal_residential_mfh[Mt]",
                    "bld_emissions-CH4_heat-geothermal_residential_mfh[Mt]",
                    "bld_emissions-CO2_heat-geothermal_residential_sfh[Mt]",
                    "bld_emissions-N2O_heat-geothermal_residential_sfh[Mt]",
                    "bld_emissions-CH4_heat-geothermal_residential_sfh[Mt]",
                    "bld_emissions-CO2_heat-solar_non-residential_education[Mt]",
                    "bld_emissions-N2O_heat-solar_non-residential_education[Mt]",
                    "bld_emissions-CH4_heat-solar_non-residential_education[Mt]",
                    "bld_emissions-CO2_heat-solar_non-residential_health[Mt]",
                    "bld_emissions-N2O_heat-solar_non-residential_health[Mt]",
                    "bld_emissions-CH4_heat-solar_non-residential_health[Mt]",
                    "bld_emissions-CO2_heat-solar_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_heat-solar_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_heat-solar_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_heat-solar_non-residential_offices[Mt]",
                    "bld_emissions-N2O_heat-solar_non-residential_offices[Mt]",
                    "bld_emissions-CH4_heat-solar_non-residential_offices[Mt]",
                    "bld_emissions-CO2_heat-solar_non-residential_other[Mt]",
                    "bld_emissions-N2O_heat-solar_non-residential_other[Mt]",
                    "bld_emissions-CH4_heat-solar_non-residential_other[Mt]",
                    "bld_emissions-CO2_heat-solar_non-residential_trade[Mt]",
                    "bld_emissions-N2O_heat-solar_non-residential_trade[Mt]",
                    "bld_emissions-CH4_heat-solar_non-residential_trade[Mt]",
                    "bld_emissions-CO2_heat-solar_residential_mfh[Mt]",
                    "bld_emissions-N2O_heat-solar_residential_mfh[Mt]",
                    "bld_emissions-CH4_heat-solar_residential_mfh[Mt]",
                    "bld_emissions-CO2_heat-solar_residential_sfh[Mt]",
                    "bld_emissions-N2O_heat-solar_residential_sfh[Mt]",
                    "bld_emissions-CH4_heat-solar_residential_sfh[Mt]",
                    "bld_emissions-CO2_liquid-bio-diesel_non-residential_education[Mt]",
                    "bld_emissions-N2O_liquid-bio-diesel_non-residential_education[Mt]",
                    "bld_emissions-CH4_liquid-bio-diesel_non-residential_education[Mt]",
                    "bld_emissions-CO2_liquid-bio-diesel_non-residential_health[Mt]",
                    "bld_emissions-N2O_liquid-bio-diesel_non-residential_health[Mt]",
                    "bld_emissions-CH4_liquid-bio-diesel_non-residential_health[Mt]",
                    "bld_emissions-CO2_liquid-bio-diesel_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_liquid-bio-diesel_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_liquid-bio-diesel_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_liquid-bio-diesel_non-residential_offices[Mt]",
                    "bld_emissions-N2O_liquid-bio-diesel_non-residential_offices[Mt]",
                    "bld_emissions-CH4_liquid-bio-diesel_non-residential_offices[Mt]",
                    "bld_emissions-CO2_liquid-bio-diesel_non-residential_other[Mt]",
                    "bld_emissions-N2O_liquid-bio-diesel_non-residential_other[Mt]",
                    "bld_emissions-CH4_liquid-bio-diesel_non-residential_other[Mt]",
                    "bld_emissions-CO2_liquid-bio-diesel_non-residential_trade[Mt]",
                    "bld_emissions-N2O_liquid-bio-diesel_non-residential_trade[Mt]",
                    "bld_emissions-CH4_liquid-bio-diesel_non-residential_trade[Mt]",
                    "bld_emissions-CO2_liquid-bio-diesel_residential_mfh[Mt]",
                    "bld_emissions-N2O_liquid-bio-diesel_residential_mfh[Mt]",
                    "bld_emissions-CH4_liquid-bio-diesel_residential_mfh[Mt]",
                    "bld_emissions-CO2_liquid-bio-diesel_residential_sfh[Mt]",
                    "bld_emissions-N2O_liquid-bio-diesel_residential_sfh[Mt]",
                    "bld_emissions-CH4_liquid-bio-diesel_residential_sfh[Mt]",
                    "bld_emissions-CO2_liquid-bio-gasoline_non-residential_education[Mt]",
                    "bld_emissions-N2O_liquid-bio-gasoline_non-residential_education[Mt]",
                    "bld_emissions-CH4_liquid-bio-gasoline_non-residential_education[Mt]",
                    "bld_emissions-CO2_liquid-bio-gasoline_non-residential_health[Mt]",
                    "bld_emissions-N2O_liquid-bio-gasoline_non-residential_health[Mt]",
                    "bld_emissions-CH4_liquid-bio-gasoline_non-residential_health[Mt]",
                    "bld_emissions-CO2_liquid-bio-gasoline_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_liquid-bio-gasoline_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_liquid-bio-gasoline_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_liquid-bio-gasoline_non-residential_offices[Mt]",
                    "bld_emissions-N2O_liquid-bio-gasoline_non-residential_offices[Mt]",
                    "bld_emissions-CH4_liquid-bio-gasoline_non-residential_offices[Mt]",
                    "bld_emissions-CO2_liquid-bio-gasoline_non-residential_other[Mt]",
                    "bld_emissions-N2O_liquid-bio-gasoline_non-residential_other[Mt]",
                    "bld_emissions-CH4_liquid-bio-gasoline_non-residential_other[Mt]",
                    "bld_emissions-CO2_liquid-bio-gasoline_non-residential_trade[Mt]",
                    "bld_emissions-N2O_liquid-bio-gasoline_non-residential_trade[Mt]",
                    "bld_emissions-CH4_liquid-bio-gasoline_non-residential_trade[Mt]",
                    "bld_emissions-CO2_liquid-bio-gasoline_residential_mfh[Mt]",
                    "bld_emissions-N2O_liquid-bio-gasoline_residential_mfh[Mt]",
                    "bld_emissions-CH4_liquid-bio-gasoline_residential_mfh[Mt]",
                    "bld_emissions-CO2_liquid-bio-gasoline_residential_sfh[Mt]",
                    "bld_emissions-N2O_liquid-bio-gasoline_residential_sfh[Mt]",
                    "bld_emissions-CH4_liquid-bio-gasoline_residential_sfh[Mt]",
                    "bld_emissions-CO2_liquid-ff-heatingoil_non-residential_education[Mt]",
                    "bld_emissions-N2O_liquid-ff-heatingoil_non-residential_education[Mt]",
                    "bld_emissions-CH4_liquid-ff-heatingoil_non-residential_education[Mt]",
                    "bld_emissions-CO2_liquid-ff-heatingoil_non-residential_health[Mt]",
                    "bld_emissions-N2O_liquid-ff-heatingoil_non-residential_health[Mt]",
                    "bld_emissions-CH4_liquid-ff-heatingoil_non-residential_health[Mt]",
                    "bld_emissions-CO2_liquid-ff-heatingoil_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_liquid-ff-heatingoil_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_liquid-ff-heatingoil_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_liquid-ff-heatingoil_non-residential_offices[Mt]",
                    "bld_emissions-N2O_liquid-ff-heatingoil_non-residential_offices[Mt]",
                    "bld_emissions-CH4_liquid-ff-heatingoil_non-residential_offices[Mt]",
                    "bld_emissions-CO2_liquid-ff-heatingoil_non-residential_other[Mt]",
                    "bld_emissions-N2O_liquid-ff-heatingoil_non-residential_other[Mt]",
                    "bld_emissions-CH4_liquid-ff-heatingoil_non-residential_other[Mt]",
                    "bld_emissions-CO2_liquid-ff-heatingoil_non-residential_trade[Mt]",
                    "bld_emissions-N2O_liquid-ff-heatingoil_non-residential_trade[Mt]",
                    "bld_emissions-CH4_liquid-ff-heatingoil_non-residential_trade[Mt]",
                    "bld_emissions-CO2_liquid-ff-heatingoil_residential_mfh[Mt]",
                    "bld_emissions-N2O_liquid-ff-heatingoil_residential_mfh[Mt]",
                    "bld_emissions-CH4_liquid-ff-heatingoil_residential_mfh[Mt]",
                    "bld_emissions-CO2_liquid-ff-heatingoil_residential_sfh[Mt]",
                    "bld_emissions-N2O_liquid-ff-heatingoil_residential_sfh[Mt]",
                    "bld_emissions-CH4_liquid-ff-heatingoil_residential_sfh[Mt]",
                    "bld_emissions-CO2_solid-bio_non-residential_education[Mt]",
                    "bld_emissions-N2O_solid-bio_non-residential_education[Mt]",
                    "bld_emissions-CH4_solid-bio_non-residential_education[Mt]",
                    "bld_emissions-CO2_solid-bio_non-residential_health[Mt]",
                    "bld_emissions-N2O_solid-bio_non-residential_health[Mt]",
                    "bld_emissions-CH4_solid-bio_non-residential_health[Mt]",
                    "bld_emissions-CO2_solid-bio_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_solid-bio_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_solid-bio_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_solid-bio_non-residential_offices[Mt]",
                    "bld_emissions-N2O_solid-bio_non-residential_offices[Mt]",
                    "bld_emissions-CH4_solid-bio_non-residential_offices[Mt]",
                    "bld_emissions-CO2_solid-bio_non-residential_other[Mt]",
                    "bld_emissions-N2O_solid-bio_non-residential_other[Mt]",
                    "bld_emissions-CH4_solid-bio_non-residential_other[Mt]",
                    "bld_emissions-CO2_solid-bio_non-residential_trade[Mt]",
                    "bld_emissions-N2O_solid-bio_non-residential_trade[Mt]",
                    "bld_emissions-CH4_solid-bio_non-residential_trade[Mt]",
                    "bld_emissions-CO2_solid-bio_residential_mfh[Mt]",
                    "bld_emissions-N2O_solid-bio_residential_mfh[Mt]",
                    "bld_emissions-CH4_solid-bio_residential_mfh[Mt]",
                    "bld_emissions-CO2_solid-bio_residential_sfh[Mt]",
                    "bld_emissions-N2O_solid-bio_residential_sfh[Mt]",
                    "bld_emissions-CH4_solid-bio_residential_sfh[Mt]",
                    "bld_emissions-CO2_solid-ff-coal_non-residential_education[Mt]",
                    "bld_emissions-N2O_solid-ff-coal_non-residential_education[Mt]",
                    "bld_emissions-CH4_solid-ff-coal_non-residential_education[Mt]",
                    "bld_emissions-CO2_solid-ff-coal_non-residential_health[Mt]",
                    "bld_emissions-N2O_solid-ff-coal_non-residential_health[Mt]",
                    "bld_emissions-CH4_solid-ff-coal_non-residential_health[Mt]",
                    "bld_emissions-CO2_solid-ff-coal_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_solid-ff-coal_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_solid-ff-coal_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_solid-ff-coal_non-residential_offices[Mt]",
                    "bld_emissions-N2O_solid-ff-coal_non-residential_offices[Mt]",
                    "bld_emissions-CH4_solid-ff-coal_non-residential_offices[Mt]",
                    "bld_emissions-CO2_solid-ff-coal_non-residential_other[Mt]",
                    "bld_emissions-N2O_solid-ff-coal_non-residential_other[Mt]",
                    "bld_emissions-CH4_solid-ff-coal_non-residential_other[Mt]",
                    "bld_emissions-CO2_solid-ff-coal_non-residential_trade[Mt]",
                    "bld_emissions-N2O_solid-ff-coal_non-residential_trade[Mt]",
                    "bld_emissions-CH4_solid-ff-coal_non-residential_trade[Mt]",
                    "bld_emissions-CO2_solid-ff-coal_residential_mfh[Mt]",
                    "bld_emissions-N2O_solid-ff-coal_residential_mfh[Mt]",
                    "bld_emissions-CH4_solid-ff-coal_residential_mfh[Mt]",
                    "bld_emissions-CO2_solid-ff-coal_residential_sfh[Mt]",
                    "bld_emissions-N2O_solid-ff-coal_residential_sfh[Mt]",
                    "bld_emissions-CH4_solid-ff-coal_residential_sfh[Mt]",
                    "bld_emissions-CO2_solid-waste_non-residential_education[Mt]",
                    "bld_emissions-N2O_solid-waste_non-residential_education[Mt]",
                    "bld_emissions-CH4_solid-waste_non-residential_education[Mt]",
                    "bld_emissions-CO2_solid-waste_non-residential_health[Mt]",
                    "bld_emissions-N2O_solid-waste_non-residential_health[Mt]",
                    "bld_emissions-CH4_solid-waste_non-residential_health[Mt]",
                    "bld_emissions-CO2_solid-waste_non-residential_hotels[Mt]",
                    "bld_emissions-N2O_solid-waste_non-residential_hotels[Mt]",
                    "bld_emissions-CH4_solid-waste_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_solid-waste_non-residential_offices[Mt]",
                    "bld_emissions-N2O_solid-waste_non-residential_offices[Mt]",
                    "bld_emissions-CH4_solid-waste_non-residential_offices[Mt]",
                    "bld_emissions-CO2_solid-waste_non-residential_other[Mt]",
                    "bld_emissions-N2O_solid-waste_non-residential_other[Mt]",
                    "bld_emissions-CH4_solid-waste_non-residential_other[Mt]",
                    "bld_emissions-CO2_solid-waste_non-residential_trade[Mt]",
                    "bld_emissions-N2O_solid-waste_non-residential_trade[Mt]",
                    "bld_emissions-CH4_solid-waste_non-residential_trade[Mt]",
                    "bld_emissions-CO2_solid-waste_residential_mfh[Mt]",
                    "bld_emissions-N2O_solid-waste_residential_mfh[Mt]",
                    "bld_emissions-CH4_solid-waste_residential_mfh[Mt]",
                    "bld_emissions-CO2_solid-waste_residential_sfh[Mt]",
                    "bld_emissions-N2O_solid-waste_residential_sfh[Mt]",
                    "bld_emissions-CH4_solid-waste_residential_sfh[Mt]"
                ]
            }
        },
        "string-input-2819:1602:1599": {
            "type": "string",
            "default": "use",
            "description": "Enter Description",
            "example": "use"
        },
        "string-input-1205:3008:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-2819:1602:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "single-selection-1214:1162:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "boolean-input-2192:1605:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "string-input-1205:3008:357": {
            "type": "string",
            "default": ".*en.*el.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*en.*el.*"
        },
        "column-filter-2192:5385:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ColumnValues"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "ColumnValues"
                ]
            }
        },
        "string-input-2819:1602:1596": {
            "type": "string",
            "default": "(.*): (.*)",
            "description": "Enter Description",
            "example": "(.*): (.*)"
        },
        "boolean-input-1205:441:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-filter-1205:3429:2955:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(cal_rate_[%])",
                    "cooking+Sum(cal_rate_[%])",
                    "hot-water+Sum(cal_rate_[%])",
                    "lighting+Sum(cal_rate_[%])",
                    "space-cooling+Sum(cal_rate_[%])"
                ]
            }
        },
        "boolean-input-2819:5239:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:3154:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-2192:4930:4919:1599": {
            "type": "string",
            "default": "technology",
            "description": "Enter Description",
            "example": "technology"
        },
        "single-selection-1205:3057:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:2006:460": {
            "type": "string",
            "default": "GWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "GWh"
        },
        "boolean-input-1165:2789:808:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-1205:3042:357": {
            "type": "string",
            "default": ".*emissions.(...)_.*liquid-bio-.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*emissions.(...)_.*liquid-bio-.*"
        },
        "single-selection-1165:2792:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2805:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1215:1170:343": {
            "type": "string",
            "default": "district-capacity",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "district-capacity"
        },
        "string-input-1205:3042:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "string-input-2192:4930:4919:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)"
        },
        "boolean-input-1205:2058:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "string-input-2192:4930:4919:1597": {
            "type": "string",
            "default": "$4",
            "description": "Enter Description",
            "example": "$4"
        },
        "boolean-input-1218:1058:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-2600:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-2183:843": {
            "type": "string",
            "default": "Energy by fuel type",
            "description": "Enter Description",
            "example": "Energy by fuel type"
        },
        "string-input-1176:1162:1182:349": {
            "type": "string",
            "default": "emissions_total",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "emissions_total"
        },
        "column-filter-2812:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "single-selection-1217:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "column-selection-2192:5239:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "technology"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "technology"
            }
        },
        "string-input-1205:3008:349": {
            "type": "string",
            "default": "bld_energy-demand_electricity",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "bld_energy-demand_electricity"
        },
        "single-selection-1205:724:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-2192:5399:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:3099:3100:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "single-selection-1205:1014:645": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "single-selection-1165:2792:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:3213:2231:444": {
            "type": "string",
            "default": "cal_rate",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate"
        },
        "single-selection-1205:2640:2232:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:3213:2231:445": {
            "type": "string",
            "default": "cal_delta_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_delta_(.*)\\[.*"
        },
        "string-input-1205:3213:2231:446": {
            "type": "string",
            "default": "energy-demand.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "energy-demand.*"
        },
        "string-input-1205:2939:2868:843": {
            "type": "string",
            "default": "Residential",
            "description": "Enter Description",
            "example": "Residential"
        },
        "string-input-1205:3042:349": {
            "type": "string",
            "default": "bld_emissions_liquid-bio",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_emissions_liquid-bio"
        },
        "column-filter-1205:3101:3086:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "single-selection-1154:1165:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-2443:1593:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "string-input-1205:2006:446": {
            "type": "string",
            "default": "technology-factor",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "technology-factor"
        },
        "string-input-1205:2006:445": {
            "type": "string",
            "default": "energy-need_decentral_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "energy-need_decentral_(.*)\\[.*"
        },
        "boolean-input-1205:837:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-filter-2175:2723:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "energy-demand_renovated[TWh]",
                    "energy-demand_constructed[TWh]",
                    "energy-demand_unrenovated[TWh]"
                ]
            }
        },
        "string-input-1214:1162:1188": {
            "type": "string",
            "default": "2015",
            "description": "Enter Description",
            "example": "2015"
        },
        "column-selection-1205:1832:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-2443:1593:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "file-chooser-2819:2817:4676": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/buildings/data/EnergyBalancesEU/nrg_bal_c.xls"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/buildings/data/EnergyBalancesEU/nrg_bal_c.xls",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "string-input-1205:2006:444": {
            "type": "string",
            "default": "energy-demand_decentral",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-demand_decentral"
        },
        "string-input-2443:1593:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1205:1393:1151:444": {
            "type": "string",
            "default": "cal_delta",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_delta"
        },
        "string-input-1176:1162:1182:354": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "unit"
        },
        "string-input-1154:644:343": {
            "type": "string",
            "default": "building-mix",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-mix"
        },
        "column-filter-1205:2847:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "emissions_CH4_decentral_renovated[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "emissions_CH4_decentral_renovated[Mt]",
                    "emissions_CH4_decentral_constructed[Mt]",
                    "emissions_CH4_decentral_unrenovated[Mt]",
                    "emissions_CH4_decentral_[Mt]",
                    "emissions_N2O_decentral_renovated[Mt]",
                    "emissions_N2O_decentral_constructed[Mt]",
                    "emissions_N2O_decentral_unrenovated[Mt]",
                    "emissions_N2O_decentral_[Mt]",
                    "emissions_CO2_decentral_renovated[Mt]",
                    "emissions_CO2_decentral_constructed[Mt]",
                    "emissions_CO2_decentral_unrenovated[Mt]",
                    "emissions_CO2_decentral_[Mt]"
                ]
            }
        },
        "column-filter-1205:1393:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cal_bld_emissions_non-residential_CH4[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "cal_bld_emissions_non-residential_CH4[Mt]",
                    "cal_bld_emissions_residential_CH4[Mt]",
                    "cal_bld_emissions_non-residential_CO2[Mt]",
                    "cal_bld_emissions_residential_CO2[Mt]",
                    "cal_bld_emissions_non-residential_N2O[Mt]",
                    "cal_bld_emissions_residential_N2O[Mt]"
                ]
            }
        },
        "string-input-1176:1162:1182:357": {
            "type": "string",
            "default": ".*dhg_emissions.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*dhg_emissions.*"
        },
        "single-selection-2808:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "No"
            }
        },
        "single-selection-2808:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "single-selection-1205:1014:658": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "slider-input-1154:441:425": {
            "type": "object",
            "properties": {
                "double": {
                    "type": "number",
                    "default": 1.0
                }
            },
            "description": "Non-residential floor area",
            "example": {
                "double": 1.0
            }
        },
        "string-input-2595:843": {
            "type": "string",
            "default": "Floor Area",
            "description": "Enter Description",
            "example": "Floor Area"
        },
        "boolean-input-1165:1604:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "single-selection-1165:1232:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "column-selection-2192:2309:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "subsector"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "subsector"
            }
        },
        "boolean-input-1205:3037:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1205:3431:2952:843": {
            "type": "string",
            "default": "EU uncalibrated",
            "description": "Enter Description",
            "example": "EU uncalibrated"
        },
        "column-filter-441:639:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Mm2_to_1000m2"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "Mm2_to_1000m2"
                ]
            }
        },
        "string-input-2192:4960:4977:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2192:4960:4977:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-1205:2938:2913:843": {
            "type": "string",
            "default": "End of Energy Demand Box",
            "description": "Enter Description",
            "example": "End of Energy Demand Box"
        },
        "boolean-input-1205:3375:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:3429:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "single-selection-1205:2006:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-1218:1113:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "column-filter-1205:3216:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-need_renovated[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-need_renovated[GWh]",
                    "energy-need_constructed[GWh]",
                    "energy-need_unrenovated[GWh]",
                    "energy-need[GWh]",
                    "energy-need_decentral_renovated[GWh]",
                    "energy-need_decentral_constructed[GWh]",
                    "energy-need_decentral_unrenovated[GWh]",
                    "energy-need_decentral_[GWh]",
                    "energy-demand_decentral_renovated[GWh]",
                    "energy-demand_decentral_constructed[GWh]",
                    "energy-demand_decentral_unrenovated[GWh]",
                    "energy-demand_decentral_[GWh]",
                    "energy-demand[GWh]",
                    "energy-demand_calibrated_decentral_renovated[GWh]",
                    "energy-demand_calibrated_decentral_constructed[GWh]",
                    "energy-demand_calibrated_decentral_unrenovated[GWh]",
                    "energy-demand_calibrated_decentral_[GWh]"
                ]
            }
        },
        "column-filter-1205:3099:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "residential+constructed-area[Mm2]"
                ]
            }
        },
        "column-filter-1165:2787:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "elc_heat-supply-CHP_bio[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "elc_heat-supply-CHP_bio[TWh]",
                    "elc_heat-supply-CHP_fossil[TWh]"
                ]
            }
        },
        "string-input-1205:3429:357": {
            "type": "string",
            "default": "(.*)\\+.*calibrated.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*calibrated.*\\[.*"
        },
        "single-selection-1218:1113:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "single-selection-438:441:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-1215:1175:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "single-selection-2585:2004:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-2602:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:3450:2667:1596": {
            "type": "string",
            "default": "(.*)_(energy-need-)(.*)(-per-m2)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(energy-need-)(.*)(-per-m2)_(.*)"
        },
        "single-selection-1215:1175:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-1205:3450:2667:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "column-filter-1165:1604:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_district-capacity_gas-ff-natural[-]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_district-capacity_gas-ff-natural[-]",
                    "bld_district-capacity_liquid-ff-heatingoil[-]",
                    "bld_district-capacity_solid-ff-coal[-]",
                    "bld_district-capacity_solid-bio[-]",
                    "bld_district-capacity_heat-ambient[-]",
                    "bld_district-capacity_heat-solar[-]",
                    "bld_district-capacity_heat-geothermal[-]"
                ]
            }
        },
        "boolean-input-1205:3101:3084:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-1205:722:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "double-input-2819:5385:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "string-input-2192:4960:4977:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "single-selection-1218:1076:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "fts"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "fts"
            }
        },
        "string-input-1205:3450:2667:1599": {
            "type": "string",
            "default": "use",
            "description": "Enter Description",
            "example": "use"
        },
        "string-input-1205:3432:2914:843": {
            "type": "string",
            "default": "EU before calibration",
            "description": "Enter Description",
            "example": "EU before calibration"
        },
        "column-filter-1205:3101:2808:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "column-filter-1205:2942:2935:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity+Sum(cal_rate_[%])",
                    "gas-bio+Sum(cal_rate_[%])",
                    "gas-ff-natural+Sum(cal_rate_[%])",
                    "heat-ambient+Sum(cal_rate_[%])",
                    "heat-geothermal+Sum(cal_rate_[%])",
                    "heat-solar+Sum(cal_rate_[%])",
                    "liquid-bio-diesel+Sum(cal_rate_[%])",
                    "liquid-bio-gasoline+Sum(cal_rate_[%])",
                    "liquid-ff-heatingoil+Sum(cal_rate_[%])",
                    "solid-bio+Sum(cal_rate_[%])",
                    "solid-ff-coal+Sum(cal_rate_[%])",
                    "solid-waste+Sum(cal_rate_[%])"
                ]
            }
        },
        "single-selection-1165:1216:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1218:1047:343": {
            "type": "string",
            "default": "building-renovation-mix",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-renovation-mix"
        },
        "single-selection-1154:1163:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:3434:357": {
            "type": "string",
            "default": "(.*)\\+.*calibrated.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*calibrated.*\\[.*"
        },
        "single-selection-435:643:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1165:802:1146:445": {
            "type": "string",
            "default": "cal_rate_(.*)\\[%\\]",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_rate_(.*)\\[%\\]"
        },
        "string-input-1165:802:1146:444": {
            "type": "string",
            "default": "cal_dhg_energy_factor",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_dhg_energy_factor"
        },
        "boolean-input-1154:441:639:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-1165:802:1146:446": {
            "type": "string",
            "default": "dhg_(energy-demand_.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "dhg_(energy-demand_.*)\\[.*"
        },
        "string-input-1205:3078:357": {
            "type": "string",
            "default": ".*energy.*(solid-bio)-.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy.*(solid-bio)-.*"
        },
        "multiple-selection-2192:2295:58": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "2117"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "2117",
                    "2112",
                    "2121",
                    "2310",
                    "2230",
                    "3220",
                    "3234",
                    "3244",
                    "3260",
                    "4100",
                    "4230",
                    "5541"
                ]
            }
        },
        "string-input-1205:3078:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "column-filter-1205:3042:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_emissions_CH4_liquid-bio-diesel[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_emissions_CH4_liquid-bio-diesel[Mt]",
                    "bld_emissions_CH4_liquid-bio-gasoline[Mt]",
                    "bld_emissions_CO2_liquid-bio-diesel[Mt]",
                    "bld_emissions_CO2_liquid-bio-gasoline[Mt]",
                    "bld_emissions_N2O_liquid-bio-diesel[Mt]",
                    "bld_emissions_N2O_liquid-bio-gasoline[Mt]"
                ]
            }
        },
        "single-selection-1176:1162:1166:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 2/1"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 2/1"
            }
        },
        "string-input-1205:3434:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:2942:2935:843": {
            "type": "string",
            "default": "Romania calibration rate",
            "description": "Enter Description",
            "example": "Romania calibration rate"
        },
        "boolean-input-1165:1172:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-filter-1205:3429:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "appliances+energy-demand_calibrated_[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "appliances+energy-demand_calibrated_[GWh]",
                    "cooking+energy-demand_calibrated_[GWh]",
                    "hot-water+energy-demand_calibrated_[GWh]",
                    "lighting+energy-demand_calibrated_[GWh]",
                    "space-cooling+energy-demand_calibrated_[GWh]"
                ]
            }
        },
        "string-input-1205:3154:445": {
            "type": "string",
            "default": "heatcool-tech.*_(.*)\\+.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "heatcool-tech.*_(.*)\\+.*"
        },
        "string-input-1205:3154:444": {
            "type": "string",
            "default": "technology-factor",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "technology-factor"
        },
        "string-input-1205:3434:349": {
            "type": "string",
            "default": "fed_calibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_calibrated"
        },
        "string-input-1205:3154:446": {
            "type": "string",
            "default": "heatcool-eff.*\\+.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "heatcool-eff.*\\+.*"
        },
        "single-selection-1154:1170:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "boolean-input-1176:1162:1166:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-filter-2806:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "multiple-selection-2192:2295:66": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cres"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "cres",
                    "cressh",
                    "cressc",
                    "creswh",
                    "cresco",
                    "cresrf",
                    "creswm",
                    "cresdr",
                    "cresdw",
                    "crestv",
                    "cresit",
                    "cresli",
                    "cresoa",
                    "cser",
                    "csersh",
                    "csersc",
                    "cserhw",
                    "cserbl"
                ]
            }
        },
        "single-selection-1165:1172:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "boolean-input-1154:1091:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "country-list-2815:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "single-selection-441:441:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:3078:349": {
            "type": "string",
            "default": "bld_energy-demand_heat",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand_heat"
        },
        "boolean-input-2590:1600:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "column-selection-1205:3450:2667:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "subsector"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "subsector"
            }
        },
        "boolean-input-1165:2786:2785:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:3432:2914:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances[TWh]",
                    "cooking[TWh]",
                    "hot-water[TWh]",
                    "lighting[TWh]",
                    "space-cooling[TWh]"
                ]
            }
        },
        "string-input-1154:441:643:343": {
            "type": "string",
            "default": "nonres-floorarea",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "nonres-floorarea"
        },
        "column-filter-1205:2942:2951:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "electricity+Sum(energy-demand_decentral_renovated[TWh])"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "electricity+Sum(energy-demand_decentral_renovated[TWh])",
                    "electricity+Sum(energy-demand_decentral_constructed[TWh])",
                    "electricity+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "gas-bio+Sum(energy-demand_decentral_renovated[TWh])",
                    "gas-bio+Sum(energy-demand_decentral_constructed[TWh])",
                    "gas-bio+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "gas-ff-natural+Sum(energy-demand_decentral_renovated[TWh])",
                    "gas-ff-natural+Sum(energy-demand_decentral_constructed[TWh])",
                    "gas-ff-natural+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "heat-ambient+Sum(energy-demand_decentral_renovated[TWh])",
                    "heat-ambient+Sum(energy-demand_decentral_constructed[TWh])",
                    "heat-ambient+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "heat-geothermal+Sum(energy-demand_decentral_renovated[TWh])",
                    "heat-geothermal+Sum(energy-demand_decentral_constructed[TWh])",
                    "heat-geothermal+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "heat-solar+Sum(energy-demand_decentral_renovated[TWh])",
                    "heat-solar+Sum(energy-demand_decentral_constructed[TWh])",
                    "heat-solar+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_decentral_renovated[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_decentral_constructed[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_decentral_renovated[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_decentral_constructed[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_decentral_renovated[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_decentral_constructed[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "solid-bio+Sum(energy-demand_decentral_renovated[TWh])",
                    "solid-bio+Sum(energy-demand_decentral_constructed[TWh])",
                    "solid-bio+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "solid-ff-coal+Sum(energy-demand_decentral_renovated[TWh])",
                    "solid-ff-coal+Sum(energy-demand_decentral_constructed[TWh])",
                    "solid-ff-coal+Sum(energy-demand_decentral_unrenovated[TWh])",
                    "solid-waste+Sum(energy-demand_decentral_renovated[TWh])",
                    "solid-waste+Sum(energy-demand_decentral_constructed[TWh])",
                    "solid-waste+Sum(energy-demand_decentral_unrenovated[TWh])"
                ]
            }
        },
        "string-input-2819:5174:349": {
            "type": "string",
            "default": "SUMTOTALS",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "SUMTOTALS"
        },
        "string-input-2192:4930:4910:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)_(.*)_(.*)_(.*)\\+(.*)"
        },
        "string-input-2192:4930:4910:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1175:345": {
            "type": "string",
            "default": "dhg_pe",
            "description": "Enter Description",
            "example": "dhg_pe"
        },
        "string-input-1165:1198:357": {
            "type": "string",
            "default": ".*heat.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*heat.*"
        },
        "boolean-input-1218:643:360": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-2192:4930:4910:1599": {
            "type": "string",
            "default": "use",
            "description": "Enter Description",
            "example": "use"
        },
        "column-filter-1205:3101:3086:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1205:3101:3085:349": {
            "type": "string",
            "default": "energydemand-by-btype",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "energydemand-by-btype"
        },
        "string-input-1165:1198:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-2819:5174:354": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "unit"
        },
        "single-selection-1205:3431:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1205:3436:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-2600:345": {
            "type": "string",
            "default": "bld_elc",
            "description": "Enter Description",
            "example": "bld_elc"
        },
        "string-input-1205:3436:349": {
            "type": "string",
            "default": "fed_calibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_calibrated"
        },
        "column-filter-1205:2721:1015:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_nonres-floor-area_non-residential_offices[Mm2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_nonres-floor-area_non-residential_offices[Mm2]",
                    "bld_nonres-floor-area_non-residential_hotels[Mm2]",
                    "bld_nonres-floor-area_non-residential_trade[Mm2]",
                    "bld_nonres-floor-area_non-residential_education[Mm2]",
                    "bld_nonres-floor-area_non-residential_health[Mm2]",
                    "bld_nonres-floor-area_non-residential_other[Mm2]"
                ]
            }
        },
        "data-type-1154:1056:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical"
                ]
            }
        },
        "string-input-1205:3101:3085:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:3101:3085:357": {
            "type": "string",
            "default": ".*ener.*-dem.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*ener.*-dem.*"
        },
        "string-input-2819:5174:357": {
            "type": "string",
            "default": ".*_.*_[T][o].*\\[Gigawatt-hour\\].*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*_.*_[T][o].*\\[Gigawatt-hour\\].*"
        },
        "boolean-input-1165:803:1146:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-2181:843": {
            "type": "string",
            "default": "Emissions",
            "description": "Enter Description",
            "example": "Emissions"
        },
        "boolean-input-1205:2340:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1165:790:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1184:433:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "ots"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "ots"
            }
        },
        "string-input-1205:2096:460": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mt"
        },
        "string-input-1205:3436:357": {
            "type": "string",
            "default": "(.*)\\+.*calibrated.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*calibrated.*\\[.*"
        },
        "single-selection-1205:3213:2231:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "string-input-1205:3101:2808:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:3436:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "column-filter-1205:2939:2868:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "subsector",
                    "Years",
                    "Years_number",
                    "use",
                    "technology_cal",
                    "energycarrier_cal",
                    "energy-demand[GWh]",
                    "gas",
                    "cal_rate_[%]"
                ]
            }
        },
        "column-filter-1205:3101:3086:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_non-residential_education[TWh]"
                ]
            }
        },
        "single-selection-1218:1114:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:3099:3100:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-1205:3099:3100:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "Austria",
                    "Belgium",
                    "Bulgaria",
                    "Croatia",
                    "Cyprus",
                    "Czech Republic",
                    "Denmark",
                    "Estonia",
                    "Finland",
                    "France",
                    "Germany",
                    "Greece",
                    "Hungary",
                    "Ireland",
                    "Italy",
                    "Latvia",
                    "Lithuania",
                    "Luxembourg",
                    "Malta",
                    "Netherlands",
                    "Poland",
                    "Portugal",
                    "Romania",
                    "Slovakia",
                    "Slovenia",
                    "Spain",
                    "Sweden",
                    "Switzerland",
                    "United Kingdom"
                ]
            }
        },
        "column-filter-1165:803:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cal_dhg_emissions_added-heat-district_CO2[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "cal_dhg_emissions_added-heat-district_CO2[Mt]",
                    "cal_dhg_emissions_added-heat-district_CH4[Mt]",
                    "cal_dhg_emissions_added-heat-district_N2O[Mt]"
                ]
            }
        },
        "column-selection-1205:1593:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "buildingtype"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "buildingtype"
            }
        },
        "column-filter-2590:2009:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "factor_technology"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "factor_technology"
                ]
            }
        },
        "boolean-input-2584:2058:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1205:2793:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "column-selection-2819:5235:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "energycarrier"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "energycarrier"
            }
        },
        "boolean-input-1205:2845:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-2597:843": {
            "type": "string",
            "default": "Floor Area",
            "description": "Enter Description",
            "example": "Floor Area"
        },
        "single-selection-1154:1182:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "column-filter-2819:5174:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_Final consumption - other sectors - commercial and public services - energy use_Total[Gigawatt-hour]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "ots_Final consumption - other sectors - commercial and public services - energy use_Total[Gigawatt-hour]",
                    "ots_Final consumption - other sectors - households - energy use_Total[Gigawatt-hour]"
                ]
            }
        },
        "agg-method-2805:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1165:2102:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1217:647:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1205:3101:3083:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1205:2421:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1205:1533:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:2096:445": {
            "type": "string",
            "default": "cal.*emissions_residential_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal.*emissions_residential_(.*)\\[.*"
        },
        "single-selection-1154:1182:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-1205:2096:444": {
            "type": "string",
            "default": "emissions_appliances",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "emissions_appliances"
        },
        "column-filter-1205:2727:2794:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "non-residential+Sum(Sum(constructed-area-acc[Mm2]))",
                    "non-residential+Sum(Sum(demolished-area-acc[Mm2]))",
                    "non-residential+Sum(Sum(unrenovated-area-acc[Mm2]))",
                    "residential+Sum(Sum(constructed-area-acc[Mm2]))",
                    "residential+Sum(Sum(demolished-area-acc[Mm2]))",
                    "residential+Sum(Sum(unrenovated-area-acc[Mm2]))"
                ]
            }
        },
        "string-input-1205:2096:446": {
            "type": "string",
            "default": "emissions_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "emissions_(.*)\\[.*"
        },
        "data-type-1218:1077:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-1205:3429:349": {
            "type": "string",
            "default": "fed_calibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_calibrated"
        },
        "string-input-1205:2942:2906:843": {
            "type": "string",
            "default": "EU after calibration",
            "description": "Enter Description",
            "example": "EU after calibration"
        },
        "string-input-1205:3101:3086:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:3099:3104:357": {
            "type": "string",
            "default": "199[1-6].*ren.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "199[1-6].*ren.*"
        },
        "string-input-1205:3099:3104:354": {
            "type": "string",
            "default": "Mm2",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mm2"
        },
        "boolean-input-1165:790:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-1214:1162:1207:643": {
            "type": "string",
            "default": "energy.*",
            "description": "Pattern selecting the fixed column. The pattern should return only one column.  \nExamples: \"sector_demand_.*\"",
            "example": "energy.*"
        },
        "single-selection-1165:1230:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1214:1162:1207:644": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-1214:1162:1207:641": {
            "type": "string",
            "default": "cal_rate_energy",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate_energy"
        },
        "string-input-1214:1162:1207:642": {
            "type": "string",
            "default": ".*bld_energy_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. ",
            "example": ".*bld_energy_(.*)\\[.*"
        },
        "string-input-1165:803:1146:444": {
            "type": "string",
            "default": "cal_dhg_emissions_factor_heat-district",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_dhg_emissions_factor_heat-district"
        },
        "string-input-2812:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "boolean-input-1205:2081:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:3101:3085:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "file-chooser-2192:2807:4676": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/px-x-0204000000_104.xlsx"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/px-x-0204000000_104.xlsx",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "string-input-1165:803:1146:446": {
            "type": "string",
            "default": "dhg_(emissions_added-heat-district_...)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "dhg_(emissions_added-heat-district_...)\\[.*"
        },
        "boolean-input-1205:1014:646": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-1165:803:1146:445": {
            "type": "string",
            "default": "cal_rate_(.*)\\[%\\]",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_rate_(.*)\\[%\\]"
        },
        "single-selection-1176:1162:1166:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-1165:2089:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2808:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-1205:2640:2380:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-2819:5235:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "single-selection-1205:3101:2808:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "column-filter-1205:2942:2933:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "gas-bio+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "gas-ff-natural+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "heat-ambient+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "heat-geothermal+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "heat-solar+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "solid-bio+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "solid-ff-coal+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])",
                    "solid-waste+Sum(energy-demand_calibrated_decentral_unrenovated[TWh])"
                ]
            }
        },
        "single-selection-1165:803:1151:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1200:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-selection-2590:1601:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "technology"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "technology"
            }
        },
        "column-filter-1205:3431:2927:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(energy-demand_calibrated_[TWh])",
                    "cooking+Sum(energy-demand_calibrated_[TWh])",
                    "hot-water+Sum(energy-demand_calibrated_[TWh])",
                    "lighting+Sum(energy-demand_calibrated_[TWh])",
                    "space-cooling+Sum(energy-demand_calibrated_[TWh])"
                ]
            }
        },
        "single-selection-1205:3101:2808:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "No"
            }
        },
        "single-selection-1214:1182:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "2.3 District Heating"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "2.3 District Heating"
            }
        },
        "string-input-1205:3099:3104:349": {
            "type": "string",
            "default": "1991-1996",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "1991-1996"
        },
        "string-input-2590:2006:460": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TWh"
        },
        "column-filter-1205:3008:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_non-residential_hot-water_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_non-residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_non-residential_appliances_electricity[TWh]",
                    "bld_energy-demand_residential_appliances_electricity[TWh]",
                    "bld_energy-demand_heat_residential_electricity[TWh]",
                    "bld_energy-demand_heat_non-residential_electricity[TWh]"
                ]
            }
        },
        "column-filter-1205:2793:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "emission-factor_CO2[Mt/TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "emission-factor_CO2[Mt/TWh]"
                ]
            }
        },
        "string-input-1205:2086:1597": {
            "type": "string",
            "default": "$4",
            "description": "Enter Description",
            "example": "$4"
        },
        "string-input-1205:2086:1596": {
            "type": "string",
            "default": "(.*)-(.*)_(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)-(.*)_(.*)_(.*)\\[.*"
        },
        "string-input-1205:2086:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "single-selection-1205:721:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "single-selection-1214:1200:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "1.4 Climate Emissions"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "1.4 Climate Emissions"
            }
        },
        "data-type-1218:643:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-1205:2783:460": {
            "type": "string",
            "default": "GWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "GWh"
        },
        "string-input-2819:5235:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "boolean-input-1154:441:441:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-2819:5235:1599": {
            "type": "string",
            "default": "energycarrier-old",
            "description": "Enter Description",
            "example": "energycarrier-old"
        },
        "string-input-1205:3432:2951:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:3432:2951:357": {
            "type": "string",
            "default": "(.*)\\+.*dem.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*dem.*\\[.*"
        },
        "column-filter-1218:1091:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_building-insulation-cooling_sfh[kWh/m2 year]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_building-insulation-cooling_sfh[kWh/m2 year]",
                    "ots_bld_building-insulation-cooling_mfh[kWh/m2 year]",
                    "ots_bld_building-insulation-cooling_trade[kWh/m2 year]",
                    "ots_bld_building-insulation-cooling_education[kWh/m2 year]",
                    "ots_bld_building-insulation-cooling_hotels[kWh/m2 year]",
                    "ots_bld_building-insulation-cooling_health[kWh/m2 year]",
                    "ots_bld_building-insulation-cooling_offices[kWh/m2 year]",
                    "ots_bld_building-insulation-cooling_other[kWh/m2 year]"
                ]
            }
        },
        "string-input-1205:721:460": {
            "type": "string",
            "default": "GWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "GWh"
        },
        "string-input-1205:3429:2951:357": {
            "type": "string",
            "default": "(.*)\\+.*dem.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*dem.*\\[.*"
        },
        "column-filter-1205:3099:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "multiple-selection-2819:58": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "2115"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "2115",
                    "2116",
                    "2117",
                    "2118",
                    "2210",
                    "2112",
                    "2121",
                    "2122",
                    "2130",
                    "2230",
                    "2310",
                    "2330",
                    "2410",
                    "3105",
                    "3106",
                    "3191",
                    "3192",
                    "3193",
                    "3214",
                    "3215",
                    "3220",
                    "3234",
                    "3235",
                    "3246",
                    "3247",
                    "3244",
                    "3250",
                    "3260",
                    "3270A",
                    "3281",
                    "3282",
                    "3283",
                    "3285",
                    "3286",
                    "3295",
                    "4100",
                    "4210",
                    "4220",
                    "4230",
                    "4240",
                    "5535",
                    "5532",
                    "5541",
                    "5544",
                    "5542",
                    "55431",
                    "5546",
                    "5547",
                    "5549",
                    "5548",
                    "5550",
                    "7100",
                    "55432",
                    "5100",
                    "5200",
                    "6000"
                ]
            }
        },
        "column-filter-1205:3432:2952:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_uncalibrated_appliances[TWh]",
                    "fed_uncalibrated_cooking[TWh]",
                    "fed_uncalibrated_hot-water[TWh]",
                    "fed_uncalibrated_lighting[TWh]",
                    "fed_uncalibrated_space-cooling[TWh]"
                ]
            }
        },
        "string-input-1205:3429:2951:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-2192:5239:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2192:5239:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "single-selection-1154:1175:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-2192:5239:1599": {
            "type": "string",
            "default": "technology-old",
            "description": "Enter Description",
            "example": "technology-old"
        },
        "single-selection-1205:2640:2380:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:1393:1146:444": {
            "type": "string",
            "default": "cal_bld_factor",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_bld_factor"
        },
        "string-input-1205:1393:1146:446": {
            "type": "string",
            "default": "bld_(emissions_.*residential_...)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "bld_(emissions_.*residential_...)\\[.*"
        },
        "string-input-1205:1393:1146:445": {
            "type": "string",
            "default": "cal_rate_(.*)\\[%\\]",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_rate_(.*)\\[%\\]"
        },
        "string-input-1205:3430:2952:843": {
            "type": "string",
            "default": "EU uncalibrated",
            "description": "Enter Description",
            "example": "EU uncalibrated"
        },
        "boolean-input-1205:3099:3103:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "string-input-1205:3429:2955:843": {
            "type": "string",
            "default": "EU calibration rate",
            "description": "Enter Description",
            "example": "EU calibration rate"
        },
        "string-input-1205:3213:2380:444": {
            "type": "string",
            "default": "energy-demand_calibrated",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-demand_calibrated"
        },
        "single-selection-1154:1175:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "string-input-1214:1162:445": {
            "type": "string",
            "default": "cal_rate_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_rate_(.*)\\[.*"
        },
        "string-input-1214:1162:446": {
            "type": "string",
            "default": "cal_bld_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "cal_bld_(.*)\\[.*"
        },
        "string-input-1214:1162:444": {
            "type": "string",
            "default": "cal_product",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_product"
        },
        "string-input-2815:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:3431:2923:843": {
            "type": "string",
            "default": "EU calibration rate",
            "description": "Enter Description",
            "example": "EU calibration rate"
        },
        "string-input-1205:3213:2380:446": {
            "type": "string",
            "default": "energy-demand.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "energy-demand.*"
        },
        "column-filter-1205:3430:2933:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(energy-demand[TWh])",
                    "cooking+Sum(energy-demand[TWh])",
                    "hot-water+Sum(energy-demand[TWh])",
                    "lighting+Sum(energy-demand[TWh])",
                    "space-cooling+Sum(energy-demand[TWh])"
                ]
            }
        },
        "string-input-1205:3213:2380:445": {
            "type": "string",
            "default": "cal_rate_(.*)\\[%\\]",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_rate_(.*)\\[%\\]"
        },
        "string-input-1205:2421:446": {
            "type": "string",
            "default": "cal_rate_\\[.*\\]",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "cal_rate_\\[.*\\]"
        },
        "single-selection-1205:2847:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:2421:444": {
            "type": "string",
            "default": "energy-demand_calibrated",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-demand_calibrated"
        },
        "string-input-1205:2421:445": {
            "type": "string",
            "default": "energy-demand(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "energy-demand(.*)\\[.*"
        },
        "boolean-input-1205:3391:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:1835:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-2819:5174:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "boolean-input-1205:1116:1436": {
            "type": "boolean",
            "default": "false",
            "description": "Include unit costs in output",
            "example": false
        },
        "agg-method-2816:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:1593:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-1205:1593:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "string-input-1205:1593:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "column-selection-2583:1595:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:721:444": {
            "type": "string",
            "default": "energy-demand",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-demand"
        },
        "column-selection-1205:3158:1601:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "technology"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "technology"
            }
        },
        "boolean-input-1205:2789:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-1205:721:445": {
            "type": "string",
            "default": ".*appliance-use_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*appliance-use_(.*)\\[.*"
        },
        "string-input-1205:721:446": {
            "type": "string",
            "default": ".*appliance-efficiency_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*appliance-efficiency_(.*)\\[.*"
        },
        "string-input-2611:345": {
            "type": "string",
            "default": "bld_reno",
            "description": "Enter Description",
            "example": "bld_reno"
        },
        "multiple-selection-2192:2316:58": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "0000"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "0000",
                    "2000",
                    "2100",
                    "2111",
                    "2115",
                    "2116",
                    "2117",
                    "2118",
                    "2112",
                    "2120",
                    "2121",
                    "2122",
                    "2130",
                    "2200",
                    "2210",
                    "2310",
                    "2230",
                    "2330",
                    "2410",
                    "3000",
                    "3100",
                    "3110",
                    "3105",
                    "3106",
                    "3190",
                    "3191",
                    "3192",
                    "3193",
                    "3200",
                    "3210",
                    "3214",
                    "3215",
                    "3220",
                    "3230",
                    "3234",
                    "3235",
                    "3240",
                    "3246",
                    "3247",
                    "3244",
                    "3250",
                    "3260",
                    "3270A",
                    "3280",
                    "3281",
                    "3282",
                    "3283",
                    "3285",
                    "3286",
                    "3295",
                    "4000",
                    "4100",
                    "4200",
                    "4210",
                    "4220",
                    "4230",
                    "4240",
                    "5100",
                    "5200",
                    "5500",
                    "5510",
                    "5520",
                    "5530",
                    "5532",
                    "5534",
                    "5535",
                    "5540",
                    "5541",
                    "5544",
                    "5542",
                    "55431",
                    "5545",
                    "5546",
                    "5547",
                    "5549",
                    "5548",
                    "5550",
                    "6000",
                    "7200",
                    "7100",
                    "55432"
                ]
            }
        },
        "string-input-1205:1602:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "boolean-input-1205:3158:1600:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "boolean-input-2192:1603:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-2816:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_non-residential_appliances[TWh]",
                    "bld_energy-demand_non-residential_education[TWh]",
                    "bld_energy-demand_non-residential_health[TWh]",
                    "bld_energy-demand_non-residential_hotels[TWh]",
                    "bld_energy-demand_non-residential_offices[TWh]",
                    "bld_energy-demand_non-residential_other[TWh]",
                    "bld_energy-demand_non-residential_trade[TWh]",
                    "bld_energy-demand_residential_appliances[TWh]",
                    "bld_energy-demand_residential_mfh[TWh]",
                    "bld_energy-demand_residential_sfh[TWh]"
                ]
            }
        },
        "string-input-1205:3106:3222:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "string-input-1205:3436:2914:843": {
            "type": "string",
            "default": "EU before calibration",
            "description": "Enter Description",
            "example": "EU before calibration"
        },
        "string-input-1205:2939:2864:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "boolean-input-2584:2063:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:3037:349": {
            "type": "string",
            "default": "bld_emissions",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_emissions"
        },
        "string-input-1218:643:343": {
            "type": "string",
            "default": "building-insulation",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-insulation"
        },
        "column-selection-1205:2063:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "buildingtype"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "buildingtype"
            }
        },
        "string-input-1214:1162:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "boolean-input-1205:2847:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-filter-1215:1175:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_district-fixed-assumptions_replacement-rate[-]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_district-fixed-assumptions_replacement-rate[-]"
                ]
            }
        },
        "string-input-2192:1604:1596": {
            "type": "string",
            "default": "(.*)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)"
        },
        "string-input-1205:3429:2951:349": {
            "type": "string",
            "default": "fed_uncalibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_uncalibrated"
        },
        "multiple-selection-2192:2316:66": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "data"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "data"
                ]
            }
        },
        "single-selection-435:327:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "fts"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "fts"
            }
        },
        "single-selection-1176:1162:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:3099:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "boolean-input-2192:1632:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:3431:2951:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:3037:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "boolean-input-1205:722:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "single-selection-1205:3106:3218:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "agg-method-2812:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:3037:357": {
            "type": "string",
            "default": "bld_emissions-(..._.*)_.*_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "bld_emissions-(..._.*)_.*_.*\\[.*"
        },
        "boolean-input-1217:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-1205:1393:1146:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "column-filter-1154:1169:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_surface-per-floorarea_wall_sfh[%]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_surface-per-floorarea_wall_sfh[%]",
                    "ots_bld_surface-per-floorarea_wall_mfh[%]",
                    "ots_bld_surface-per-floorarea_wall_offices[%]",
                    "ots_bld_surface-per-floorarea_wall_hotels[%]",
                    "ots_bld_surface-per-floorarea_wall_trade[%]",
                    "ots_bld_surface-per-floorarea_wall_education[%]",
                    "ots_bld_surface-per-floorarea_wall_health[%]",
                    "ots_bld_surface-per-floorarea_wall_other[%]",
                    "ots_bld_surface-per-floorarea_window_sfh[%]",
                    "ots_bld_surface-per-floorarea_window_mfh[%]",
                    "ots_bld_surface-per-floorarea_window_offices[%]",
                    "ots_bld_surface-per-floorarea_window_hotels[%]",
                    "ots_bld_surface-per-floorarea_window_trade[%]",
                    "ots_bld_surface-per-floorarea_window_education[%]",
                    "ots_bld_surface-per-floorarea_window_health[%]",
                    "ots_bld_surface-per-floorarea_window_other[%]",
                    "ots_bld_surface-per-floorarea_roof_sfh[%]",
                    "ots_bld_surface-per-floorarea_roof_mfh[%]",
                    "ots_bld_surface-per-floorarea_roof_offices[%]",
                    "ots_bld_surface-per-floorarea_roof_hotels[%]",
                    "ots_bld_surface-per-floorarea_roof_trade[%]",
                    "ots_bld_surface-per-floorarea_roof_education[%]",
                    "ots_bld_surface-per-floorarea_roof_health[%]",
                    "ots_bld_surface-per-floorarea_roof_other[%]"
                ]
            }
        },
        "column-filter-1205:2721:1017:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_floor-area_residential_sfh[Mm2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_floor-area_residential_sfh[Mm2]",
                    "bld_floor-area_residential_mfh[Mm2]"
                ]
            }
        },
        "string-input-1205:2421:460": {
            "type": "string",
            "default": "GWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "GWh"
        },
        "boolean-input-1165:802:1146:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-2192:1604:1599": {
            "type": "string",
            "default": "energycarrier-JRC",
            "description": "Enter Description",
            "example": "energycarrier-JRC"
        },
        "single-selection-1214:419:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "0.2 Pathway Explorer"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "0.2 Pathway Explorer"
            }
        },
        "string-input-2192:1604:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "column-filter-1205:3432:2927:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(energy-demand_calibrated_[TWh])",
                    "cooking+Sum(energy-demand_calibrated_[TWh])",
                    "hot-water+Sum(energy-demand_calibrated_[TWh])",
                    "lighting+Sum(energy-demand_calibrated_[TWh])",
                    "space-cooling+Sum(energy-demand_calibrated_[TWh])"
                ]
            }
        },
        "string-input-1205:3101:3083:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:2792:460": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mt"
        },
        "single-selection-1205:3099:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "column-filter-1205:2939:2859:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "subsector",
                    "Years",
                    "Years_number",
                    "use",
                    "technology_cal",
                    "energycarrier_cal",
                    "energy-demand[GWh]",
                    "gas",
                    "cal_rate_[%]"
                ]
            }
        },
        "string-input-2590:2006:446": {
            "type": "string",
            "default": "factor_technology",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "factor_technology"
        },
        "string-input-2590:2006:445": {
            "type": "string",
            "default": "energy-need_decentral(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "energy-need_decentral(.*)\\[.*"
        },
        "single-selection-1165:2789:821:1175:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:3101:3083:357": {
            "type": "string",
            "default": ".*heat.*tial.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*heat.*tial.*"
        },
        "column-filter-2789:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "bld_new_dhg_pipe[km]",
                    "bld_floor-area_new_non-residential[m2]",
                    "bld_floor-area_reno_non-residential[m2]",
                    "bld_floor-area_new_residential[m2]",
                    "bld_floor-area_reno_residential[m2]",
                    "bld_fridge[num]",
                    "bld_freezer[num]",
                    "bld_wmachine[num]",
                    "bld_dishwasher[num]",
                    "bld_dryer[num]",
                    "bld_tv[num]",
                    "bld_computer[num]",
                    "bld_phone[num]"
                ]
            }
        },
        "single-selection-1205:3099:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Yes"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "Yes"
            }
        },
        "boolean-input-1205:2420:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-filter-1205:3213:2232:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "boolean-input-1154:441:643:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-441:413:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "fts"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "fts"
            }
        },
        "boolean-input-1165:2800:2570:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1205:3101:3086:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-selection-2192:1604:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:3432:2951:349": {
            "type": "string",
            "default": "fed_uncalibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_uncalibrated"
        },
        "boolean-input-1205:3042:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "double-input-1165:2078:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "boolean-input-1176:1162:1208:646": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-filter-441:441:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "single-selection-1165:1604:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "single-selection-438:327:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "fts"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "fts"
            }
        },
        "string-input-2590:1601:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "string-input-1205:2640:2231:445": {
            "type": "string",
            "default": "cal_delta_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_delta_(.*)\\[.*"
        },
        "single-selection-2611:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-2590:1601:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1205:2640:2231:446": {
            "type": "string",
            "default": "energy-demand.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "energy-demand.*"
        },
        "column-filter-1205:3158:2009:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "factor_technology"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "factor_technology"
                ]
            }
        },
        "string-input-2590:1601:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-1205:2640:2231:444": {
            "type": "string",
            "default": "cal_rate",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate"
        },
        "string-input-1205:3101:3083:349": {
            "type": "string",
            "default": "energydemand-by-sector&ec",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "energydemand-by-sector&ec"
        },
        "single-selection-1214:421:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "4.3 Agriculture"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "4.3 Agriculture"
            }
        },
        "column-selection-2192:5047:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "column-filter-1205:3430:2947:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_calibrated_appliances[TWh]",
                    "fed_calibrated_cooking[TWh]",
                    "fed_calibrated_hot-water[TWh]",
                    "fed_calibrated_lighting[TWh]",
                    "fed_calibrated_space-cooling[TWh]"
                ]
            }
        },
        "string-input-1205:3099:3100:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-2805:3991:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "column-selection-2192:4930:4919:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-2590:2006:444": {
            "type": "string",
            "default": "energy-demand",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-demand"
        },
        "column-filter-1165:1230:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_heat-district-technology-fuel_gas-ff-natural[%]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_heat-district-technology-fuel_gas-ff-natural[%]",
                    "bld_heat-district-technology-fuel_liquid-ff-heatingoil[%]",
                    "bld_heat-district-technology-fuel_solid-ff-coal[%]",
                    "bld_heat-district-technology-fuel_solid-bio[%]",
                    "bld_heat-district-technology-fuel_heat-ambient[%]",
                    "bld_heat-district-technology-fuel_heat-solar[%]",
                    "bld_heat-district-technology-fuel_heat-geothermal[%]"
                ]
            }
        },
        "column-selection-2819:1604:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1165:2092:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-1165:802:1151:446": {
            "type": "string",
            "default": "dhg_(energy-demand_.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "dhg_(energy-demand_.*)\\[.*"
        },
        "single-selection-1217:647:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1165:2092:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "string-input-1165:2092:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)\\[.*"
        },
        "string-input-1165:802:1151:444": {
            "type": "string",
            "default": "cal_delta",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_delta"
        },
        "string-input-1165:802:1151:445": {
            "type": "string",
            "default": "cal_dhg_(energy-demand_.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_dhg_(energy-demand_.*)\\[.*"
        },
        "column-filter-1205:1130:1421": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_floorarea_reno-med-off[m2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_floorarea_reno-med-off[m2]",
                    "bld_floorarea_reno-med-sfh[m2]"
                ]
            }
        },
        "boolean-input-1205:3106:3218:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-filter-1165:2799:1259": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "elc_emissions-CO2_specific[kt/TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "elc_emissions-CO2_specific[kt/TWh]",
                    "bld_emissions-CO2_heat_residential_electricity[kt]",
                    "bld_emissions-CO2_heat_non-residential_electricity[kt]",
                    "bld_emissions-CO2_non-residential_appliances_electricity[kt]",
                    "bld_emissions-CO2_non-residential_hot-water_electricity[kt]",
                    "bld_emissions-CO2_non-residential_lighting_electricity[kt]",
                    "bld_emissions-CO2_non-residential_space-cooling_electricity[kt]",
                    "bld_emissions-CO2_residential_appliances_electricity[kt]",
                    "bld_emissions-CO2_residential_cooking_electricity[kt]",
                    "bld_emissions-CO2_residential_hot-water_electricity[kt]",
                    "bld_emissions-CO2_residential_lighting_electricity[kt]",
                    "bld_emissions-CO2_residential_space-cooling_electricity[kt]"
                ]
            }
        },
        "single-selection-1218:1091:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-1205:2792:444": {
            "type": "string",
            "default": "emissions_CH4",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "emissions_CH4"
        },
        "string-input-1205:2792:445": {
            "type": "string",
            "default": "energy-demand_calibrated_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "energy-demand_calibrated_(.*)\\[.*"
        },
        "string-input-1205:2792:446": {
            "type": "string",
            "default": "emission-factor_CH4\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "emission-factor_CH4\\[.*"
        },
        "boolean-input-1165:2799:1258": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1165:1232:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "column-filter-1205:3429:2923:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+cal_rate_[%]",
                    "cooking+cal_rate_[%]",
                    "hot-water+cal_rate_[%]",
                    "lighting+cal_rate_[%]",
                    "space-cooling+cal_rate_[%]"
                ]
            }
        },
        "column-filter-2805:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "column-filter-1205:3432:2923:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+cal_rate_[%]",
                    "cooking+cal_rate_[%]",
                    "hot-water+cal_rate_[%]",
                    "lighting+cal_rate_[%]",
                    "space-cooling+cal_rate_[%]"
                ]
            }
        },
        "column-filter-1205:2540:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-need_residential_district_mfh[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-need_residential_district_mfh[GWh]",
                    "bld_energy-need_residential_district_sfh[GWh]"
                ]
            }
        },
        "boolean-input-1205:1130:1436": {
            "type": "boolean",
            "default": "false",
            "description": "Include unit costs in output",
            "example": false
        },
        "string-input-1165:802:1151:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "boolean-input-2192:4960:4909:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-2443:1015:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1217:1087:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "boolean-input-441:643:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "boolean-input-2819:1603:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1205:2783:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "boolean-input-1214:1162:1208:646": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-filter-2815:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1200:345": {
            "type": "string",
            "default": "dhg_emp",
            "description": "Enter Description",
            "example": "dhg_emp"
        },
        "string-input-2789:843": {
            "type": "string",
            "default": "Industry",
            "description": "Enter Description",
            "example": "Industry"
        },
        "single-selection-1218:1091:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "string-input-2800:843": {
            "type": "string",
            "default": "Electricity",
            "description": "Enter Description",
            "example": "Electricity"
        },
        "string-input-2192:5226:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "string-input-2192:5226:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2192:5226:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "single-selection-1205:722:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-1217:1087:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "boolean-input-1205:3057:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-1165:1172:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_energy-demand_contribution_heat-waste[TWh/year]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_energy-demand_contribution_heat-waste[TWh/year]",
                    "dhg_energy-demand_contribution_CHP[TWh]",
                    "dhg_energy-demand_gas-ff-natural[TWh/year]",
                    "dhg_energy-demand_liquid-ff-heatingoil[TWh/year]",
                    "dhg_energy-demand_solid-ff-coal[TWh/year]",
                    "dhg_energy-demand_solid-bio[TWh/year]",
                    "dhg_energy-demand_heat-ambient[TWh/year]",
                    "dhg_energy-demand_heat-solar[TWh/year]",
                    "dhg_energy-demand_heat-geothermal[TWh/year]"
                ]
            }
        },
        "single-selection-1154:441:639:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "column-selection-2192:2331:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "column-selection-2192:5227:4909:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "sectormap-2192:2807:4885": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/sectormap.csv"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/sectormap.csv",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "string-input-2819:5226:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "column-filter-1205:3104:2618:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "bld_floor-area_new_non-residential[m2]",
                    "bld_floor-area_reno_non-residential[m2]",
                    "bld_floor-area_new_residential[m2]",
                    "bld_floor-area_reno_residential[m2]"
                ]
            }
        },
        "boolean-input-1205:3213:2231:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "single-selection-1176:1162:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "district_heating"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "district_heating"
            }
        },
        "single-selection-1154:1174:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-2819:5226:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-2819:5226:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-1205:3106:3222:446": {
            "type": "string",
            "default": "Sum.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "Sum.*"
        },
        "string-input-1165:2789:808:460": {
            "type": "string",
            "default": "gCO2",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "gCO2"
        },
        "string-input-441:639:460": {
            "type": "string",
            "default": "1000m2",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "1000m2"
        },
        "string-input-2819:4960:4909:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "string-input-2808:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-2819:4960:4909:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-1205:3106:3222:445": {
            "type": "string",
            "default": "(.*)\\+ratio",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "(.*)\\+ratio"
        },
        "string-input-1205:3106:3222:444": {
            "type": "string",
            "default": "std",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "std"
        },
        "string-input-1165:2789:808:446": {
            "type": "string",
            "default": ".*co2factor_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*co2factor_(.*)\\[.*"
        },
        "string-input-1165:2789:808:445": {
            "type": "string",
            "default": ".*energy-demand_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*energy-demand_(.*)\\[.*"
        },
        "string-input-1165:2789:808:444": {
            "type": "string",
            "default": "dhg_emissions_heat_heat-district_CO2",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "dhg_emissions_heat_heat-district_CO2"
        },
        "single-selection-1175:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "district_heating"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "district_heating"
            }
        },
        "column-selection-1205:2086:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "energycarrier"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "energycarrier"
            }
        },
        "string-input-1205:3065:349": {
            "type": "string",
            "default": "bld_emissions",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_emissions"
        },
        "column-selection-2443:1593:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "buildingtype"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "buildingtype"
            }
        },
        "string-input-1205:3430:2927:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "column-filter-1205:3436:2906:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "cooking+ColumnValues",
                    "hot-water+ColumnValues",
                    "lighting+ColumnValues",
                    "space-cooling+ColumnValues"
                ]
            }
        },
        "string-input-1205:1602:1599": {
            "type": "string",
            "default": "technology",
            "description": "Enter Description",
            "example": "technology"
        },
        "boolean-input-1205:3106:3219:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "string-input-1205:1602:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-2812:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1176:1162:1207:644": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-1176:1162:1207:642": {
            "type": "string",
            "default": ".*dhg_energy_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. ",
            "example": ".*dhg_energy_(.*)\\[.*"
        },
        "string-input-1176:1162:1207:643": {
            "type": "string",
            "default": "energy.*",
            "description": "Pattern selecting the fixed column. The pattern should return only one column.  \nExamples: \"sector_demand_.*\"",
            "example": "energy.*"
        },
        "string-input-2815:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "single-selection-1205:1533:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1176:1162:1207:641": {
            "type": "string",
            "default": "cal_rate_energy",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_rate_energy"
        },
        "single-selection-1218:643:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-441:639:446": {
            "type": "string",
            "default": ".*1000m2",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*1000m2"
        },
        "single-selection-1154:644:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "column-selection-2819:4960:4977:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "ecmap-2192:2807:4884": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/ecmap.csv"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/ecmap.csv",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "double-input-2192:5386:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "column-filter-1165:1216:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_energy-need_gas-ff-natural[TWh/year]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_energy-need_gas-ff-natural[TWh/year]",
                    "dhg_energy-need_liquid-ff-heatingoil[TWh/year]",
                    "dhg_energy-need_solid-ff-coal[TWh/year]",
                    "dhg_energy-need_solid-bio[TWh/year]",
                    "dhg_energy-need_heat-ambient[TWh/year]",
                    "dhg_energy-need_heat-solar[TWh/year]",
                    "dhg_energy-need_heat-geothermal[TWh/year]"
                ]
            }
        },
        "column-filter-2812:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1205:3213:2380:460": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TWh"
        },
        "single-selection-438:643:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "single-selection-1165:803:1150:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2617:843": {
            "type": "string",
            "default": "floor area",
            "description": "Enter Description",
            "example": "floor area"
        },
        "column-filter-1205:3099:2794:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "non-residential+Sum(Sum(constructed-area[Mm2]))",
                    "non-residential+Sum(Sum(renovated-area[Mm2]))",
                    "residential+Sum(Sum(constructed-area[Mm2]))",
                    "residential+Sum(Sum(renovated-area[Mm2]))"
                ]
            }
        },
        "string-input-441:639:445": {
            "type": "string",
            "default": ".*nonres-floorarea_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*nonres-floorarea_(.*)\\[.*"
        },
        "string-input-441:639:444": {
            "type": "string",
            "default": "ots_bld_nonres-floorarea",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "ots_bld_nonres-floorarea"
        },
        "double-input-1205:1638:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "single-selection-1205:2420:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-1154:1174:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1176:1191:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "6.4 Employment"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "6.4 Employment"
            }
        },
        "single-selection-1165:803:1150:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "string-input-1205:2337:460": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mt"
        },
        "multiple-selection-2819:66": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cres"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "cres",
                    "cressh",
                    "cressc",
                    "creswh",
                    "cresco",
                    "cresrf",
                    "creswm",
                    "cresdr",
                    "cresdw",
                    "crestv",
                    "cresit",
                    "cresli",
                    "cresoa",
                    "cser",
                    "csersh",
                    "csersc",
                    "cserhw",
                    "cserbl"
                ]
            }
        },
        "string-input-1218:1077:343": {
            "type": "string",
            "default": "building-construction-mix",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-construction-mix"
        },
        "column-filter-1214:1162:1181:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "double-input-1205:2078:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "string-input-2805:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-selection-2819:5226:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "column-filter-1205:3430:2906:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances[TWh]",
                    "cooking[TWh]",
                    "hot-water[TWh]",
                    "lighting[TWh]",
                    "space-cooling[TWh]"
                ]
            }
        },
        "single-selection-1205:3101:3086:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Yes"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "Yes"
            }
        },
        "string-input-1205:3099:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:3436:2927:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "string-input-1165:803:1146:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "single-selection-1214:1216:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "4.2 Minerals"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "4.2 Minerals"
            }
        },
        "single-selection-1205:3101:3086:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "single-selection-1205:2096:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:2337:445": {
            "type": "string",
            "default": "emission-factor_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "emission-factor_(.*)\\[.*"
        },
        "column-filter-1205:3106:3218:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Austria_Sum"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "Austria_Sum",
                    "Belgium_Sum",
                    "Bulgaria_Sum",
                    "Croatia_Sum",
                    "Cyprus_Sum",
                    "Czech Republic_Sum",
                    "Denmark_Sum",
                    "Estonia_Sum",
                    "Finland_Sum",
                    "France_Sum",
                    "Germany_Sum",
                    "Greece_Sum",
                    "Hungary_Sum",
                    "Ireland_Sum",
                    "Italy_Sum",
                    "Latvia_Sum",
                    "Lithuania_Sum",
                    "Luxembourg_Sum",
                    "Malta_Sum",
                    "Netherlands_Sum",
                    "Poland_Sum",
                    "Portugal_Sum",
                    "Romania_Sum",
                    "Slovakia_Sum",
                    "Slovenia_Sum",
                    "Spain_Sum",
                    "Sweden_Sum",
                    "Switzerland_Sum",
                    "United Kingdom_Sum"
                ]
            }
        },
        "string-input-1205:2337:444": {
            "type": "string",
            "default": "emissions",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "emissions"
        },
        "string-input-1205:2337:446": {
            "type": "string",
            "default": "energy-demand.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "energy-demand.*"
        },
        "column-filter-2808:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "single-selection-1205:837:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-435:643:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "boolean-input-1205:3429:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-1205:1393:1150:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "column-filter-1165:1612:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_energy-need_district[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_energy-need_district[GWh]"
                ]
            }
        },
        "column-filter-1214:1162:1208:653": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "single-selection-2443:1017:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-filter-1205:2938:2904:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "energy-demand_decentral_renovated[GWh]",
                    "energy-demand_decentral_constructed[GWh]",
                    "energy-demand_decentral_unrenovated[GWh]"
                ]
            }
        },
        "column-filter-2819:5385:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ColumnValues"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "ColumnValues"
                ]
            }
        },
        "boolean-input-2192:4930:2366:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1214:408:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "1.1 Lifestyle"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "1.1 Lifestyle"
            }
        },
        "single-selection-1205:1393:1146:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "single-selection-1165:715:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1205:3450:2667:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:2420:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-demand_decentral_renovated[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-demand_decentral_renovated[GWh]",
                    "energy-demand_decentral_constructed[GWh]",
                    "energy-demand_decentral_unrenovated[GWh]",
                    "energy-demand_decentral_[GWh]"
                ]
            }
        },
        "single-selection-1205:837:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "single-selection-1205:441:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:3146:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "string-input-1205:2640:2380:446": {
            "type": "string",
            "default": "energy-demand.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "energy-demand.*"
        },
        "string-input-1205:3146:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1205:2640:2380:444": {
            "type": "string",
            "default": "energy-demand_calibrated",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-demand_calibrated"
        },
        "string-input-1205:2640:2380:445": {
            "type": "string",
            "default": "cal_rate_(.*)\\[%\\]",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_rate_(.*)\\[%\\]"
        },
        "boolean-input-1205:652:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "string-input-2583:1596:1599": {
            "type": "string",
            "default": "renovationcategory",
            "description": "Enter Description",
            "example": "renovationcategory"
        },
        "string-input-1205:3146:1599": {
            "type": "string",
            "default": "technology",
            "description": "Enter Description",
            "example": "technology"
        },
        "string-input-1205:3158:2009:1246": {
            "type": "string",
            "default": "TWhperGWh",
            "description": "Enter Description",
            "example": "TWhperGWh"
        },
        "boolean-input-1165:802:1150:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-2790:345": {
            "type": "string",
            "default": "dhg_cal-nrg-ref",
            "description": "Enter Description",
            "example": "dhg_cal-nrg-ref"
        },
        "string-input-1205:3158:2009:1245": {
            "type": "string",
            "default": "factor_technology",
            "description": "Enter Description",
            "example": "factor_technology"
        },
        "column-filter-2805:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_bioenergy_liquid_biodiesel[TWh]",
                    "bld_bioenergy_liquid_biogasoline[TWh]"
                ]
            }
        },
        "boolean-input-2191:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "single-selection-2187:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1217:648:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "column-filter-1165:1187:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-need_residential_district_mfh[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-need_residential_district_mfh[GWh]",
                    "bld_energy-need_residential_district_sfh[GWh]"
                ]
            }
        },
        "boolean-input-1205:1393:1151:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-filter-1205:2939:2864:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "subsector",
                    "Years",
                    "Years_number",
                    "use",
                    "technology_cal",
                    "energycarrier_cal",
                    "energy-demand[GWh]",
                    "gas",
                    "cal_rate_[%]"
                ]
            }
        },
        "disabled-1165:803:1171": {
            "type": "boolean",
            "default": "false",
            "description": "Disable the node. The first input is copied to the output, and calibration rates are set to 1.",
            "example": false
        },
        "string-input-1205:1393:1163": {
            "type": "string",
            "default": "1990",
            "description": "Enter Description",
            "example": "1990"
        },
        "string-input-1205:1393:1164": {
            "type": "string",
            "default": "2015",
            "description": "Enter Description",
            "example": "2015"
        },
        "column-filter-1205:3101:3084:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_heat_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_heat_electricity[TWh]",
                    "bld_energy-demand_heat_gas-bio[TWh]",
                    "bld_energy-demand_heat_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_heat-ambient[TWh]",
                    "bld_energy-demand_heat_heat-geothermal[TWh]",
                    "bld_energy-demand_heat_heat-solar[TWh]",
                    "bld_energy-demand_heat_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_heat_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_heat_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_solid-bio[TWh]",
                    "bld_energy-demand_heat_solid-ff-coal[TWh]",
                    "bld_energy-demand_heat_solid-waste[TWh]"
                ]
            }
        },
        "usemap-2192:2806:4886": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/usemap.csv"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/usemap.csv",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "column-selection-2192:1603:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "boolean-input-1205:3016:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "boolean-input-2583:1595:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-438:441:460": {
            "type": "string",
            "default": "kWh/h",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "kWh/h"
        },
        "string-input-1205:2640:2380:460": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TWh"
        },
        "column-filter-1165:2102:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_emissions_added-heat-district_CO2_gas-ff-natural[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_emissions_added-heat-district_CO2_gas-ff-natural[Mt]",
                    "dhg_emissions_added-heat-district_CH4_gas-ff-natural[Mt]",
                    "dhg_emissions_added-heat-district_N2O_gas-ff-natural[Mt]",
                    "dhg_emissions_added-heat-district_CO2_heat-ambient[Mt]",
                    "dhg_emissions_added-heat-district_CH4_heat-ambient[Mt]",
                    "dhg_emissions_added-heat-district_N2O_heat-ambient[Mt]",
                    "dhg_emissions_added-heat-district_CO2_heat-geothermal[Mt]",
                    "dhg_emissions_added-heat-district_CH4_heat-geothermal[Mt]",
                    "dhg_emissions_added-heat-district_N2O_heat-geothermal[Mt]",
                    "dhg_emissions_added-heat-district_CO2_heat-solar[Mt]",
                    "dhg_emissions_added-heat-district_CH4_heat-solar[Mt]",
                    "dhg_emissions_added-heat-district_N2O_heat-solar[Mt]",
                    "dhg_emissions_added-heat-district_CO2_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions_added-heat-district_CH4_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions_added-heat-district_N2O_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions_added-heat-district_CO2_solid-bio[Mt]",
                    "dhg_emissions_added-heat-district_CH4_solid-bio[Mt]",
                    "dhg_emissions_added-heat-district_N2O_solid-bio[Mt]",
                    "dhg_emissions_added-heat-district_CO2_solid-ff-coal[Mt]",
                    "dhg_emissions_added-heat-district_CH4_solid-ff-coal[Mt]",
                    "dhg_emissions_added-heat-district_N2O_solid-ff-coal[Mt]"
                ]
            }
        },
        "single-selection-1205:2421:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2819:5044:1596": {
            "type": "string",
            "default": "(.*)_(.*)-(.*)-(.*)-(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)_(.*)-(.*)-(.*)-(.*)_(.*)\\[.*"
        },
        "string-input-2819:5044:1597": {
            "type": "string",
            "default": "$4",
            "description": "Enter Description",
            "example": "$4"
        },
        "boolean-input-1205:3078:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1205:3432:2952:843": {
            "type": "string",
            "default": "EU uncalibrated",
            "description": "Enter Description",
            "example": "EU uncalibrated"
        },
        "string-input-2819:5044:1599": {
            "type": "string",
            "default": "subsector-eurostat",
            "description": "Enter Description",
            "example": "subsector-eurostat"
        },
        "column-filter-1205:837:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "constructed-area[Mm2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "constructed-area[Mm2]"
                ]
            }
        },
        "column-selection-1205:3391:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "single-selection-1205:2845:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-1205:1713:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-1205:2793:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-1205:3057:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "column-filter-2181:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_emissions-CH4[Mt]",
                    "bld_emissions-CO2[Mt]",
                    "bld_emissions-N2O[Mt]"
                ]
            }
        },
        "string-input-1205:3057:357": {
            "type": "string",
            "default": ".*_non-res.*_.*_(.*)\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*_non-res.*_.*_(.*)\\[.*"
        },
        "column-selection-1205:1595:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:1595:1599": {
            "type": "string",
            "default": "buildingtype",
            "description": "Enter Description",
            "example": "buildingtype"
        },
        "string-input-2806:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "single-selection-1215:1170:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:3065:357": {
            "type": "string",
            "default": ".*emissions.(...)_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*emissions.(...)_.*\\[.*"
        },
        "string-input-1205:1595:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)-(.*)_(.*)-(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)-(.*)_(.*)-(.*)(\\[.*)"
        },
        "string-input-1205:1595:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "string-input-2815:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-1205:3065:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "string-input-1205:2942:2947:843": {
            "type": "string",
            "default": "EU calibrated",
            "description": "Enter Description",
            "example": "EU calibrated"
        },
        "column-selection-1205:1602:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1217:647:446": {
            "type": "string",
            "default": "onehundred",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "onehundred"
        },
        "string-input-1217:647:445": {
            "type": "string",
            "default": "ots_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "ots_(.*)\\[.*"
        },
        "single-selection-1205:3154:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "double-input-2590:2009:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "column-selection-2192:4930:4909:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1165:2089:460": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mt"
        },
        "string-input-2819:4960:4909:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-2796:843": {
            "type": "string",
            "default": "minerals",
            "description": "Enter Description",
            "example": "minerals"
        },
        "file-chooser-2192:2817:4676": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/buildings/data/EnergyBalancesEU/nrg_bal_c.xls"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/buildings/data/EnergyBalancesEU/nrg_bal_c.xls",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "single-selection-1205:1819:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1217:647:444": {
            "type": "string",
            "default": "ots",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "ots"
        },
        "column-filter-1205:2789:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-need_renovated[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-need_renovated[GWh]",
                    "energy-need_constructed[GWh]",
                    "energy-need_unrenovated[GWh]",
                    "energy-need[GWh]"
                ]
            }
        },
        "string-input-438:441:444": {
            "type": "string",
            "default": "fts_bld_appliance-efficiency",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "fts_bld_appliance-efficiency"
        },
        "single-selection-441:441:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-438:441:445": {
            "type": "string",
            "default": "ots_bld_appliance-efficiency_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "ots_bld_appliance-efficiency_(.*)\\[.*"
        },
        "string-input-438:441:446": {
            "type": "string",
            "default": "ll_bld_appliance-efficiency_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "ll_bld_appliance-efficiency_(.*)\\[.*"
        },
        "string-input-1205:3391:1599": {
            "type": "string",
            "default": "use",
            "description": "Enter Description",
            "example": "use"
        },
        "string-input-1205:3391:1597": {
            "type": "string",
            "default": "$5",
            "description": "Enter Description",
            "example": "$5"
        },
        "string-input-1205:3391:1596": {
            "type": "string",
            "default": "(.)\\+(.*)_(.*)_(.*)-(.*)-(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.)\\+(.*)_(.*)_(.*)-(.*)-(.*)(\\[.*)"
        },
        "column-selection-2583:1611:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "Years"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "Years"
            }
        },
        "column-filter-1205:2938:2913:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity[GWh]",
                    "gas-bio[GWh]",
                    "gas-ff-natural[GWh]",
                    "heat-ambient[GWh]",
                    "heat-geothermal[GWh]",
                    "heat-solar[GWh]",
                    "liquid-bio-diesel[GWh]",
                    "liquid-bio-gasoline[GWh]",
                    "liquid-ff-heatingoil[GWh]",
                    "solid-bio[GWh]",
                    "solid-ff-coal[GWh]",
                    "solid-waste[GWh]"
                ]
            }
        },
        "single-selection-1179:1146:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "data-type-435:643:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "single-selection-1214:1194:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "1.2 Climate"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "1.2 Climate"
            }
        },
        "string-input-1205:3057:349": {
            "type": "string",
            "default": "bld_energy-demand_heat_non-residential",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand_heat_non-residential"
        },
        "single-selection-1179:1146:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "single-selection-1205:2337:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:2081:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "string-input-1165:803:1163": {
            "type": "string",
            "default": "1990",
            "description": "Enter Description",
            "example": "1990"
        },
        "string-input-1205:2081:1599": {
            "type": "string",
            "default": "gas",
            "description": "Enter Description",
            "example": "gas"
        },
        "string-input-1165:803:1164": {
            "type": "string",
            "default": "2015",
            "description": "Enter Description",
            "example": "2015"
        },
        "column-filter-1205:2942:2906:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity[TWh]",
                    "gas-bio[TWh]",
                    "gas-ff-natural[TWh]",
                    "heat-ambient[TWh]",
                    "heat-geothermal[TWh]",
                    "heat-solar[TWh]",
                    "liquid-bio-diesel[TWh]",
                    "liquid-bio-gasoline[TWh]",
                    "liquid-ff-heatingoil[TWh]",
                    "solid-bio[TWh]",
                    "solid-ff-coal[TWh]",
                    "solid-waste[TWh]"
                ]
            }
        },
        "string-input-1165:2089:444": {
            "type": "string",
            "default": "emissions",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "emissions"
        },
        "string-input-438:643:343": {
            "type": "string",
            "default": "residential-appeff",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "residential-appeff"
        },
        "column-selection-1205:2081:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "energycarrier"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "energycarrier"
            }
        },
        "string-input-1165:2089:446": {
            "type": "string",
            "default": "energy-demand\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "energy-demand\\[.*"
        },
        "string-input-1165:2089:445": {
            "type": "string",
            "default": "emission-factor_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "emission-factor_(.*)\\[.*"
        },
        "string-input-1205:3158:1601:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "column-filter-1205:3436:2933:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "cooking+ColumnValues",
                    "hot-water+ColumnValues",
                    "lighting+ColumnValues",
                    "space-cooling+ColumnValues"
                ]
            }
        },
        "column-filter-1205:2942:2923:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity+Sum(cal_rate_[%])",
                    "gas-bio+Sum(cal_rate_[%])",
                    "gas-ff-natural+Sum(cal_rate_[%])",
                    "heat-ambient+Sum(cal_rate_[%])",
                    "heat-geothermal+Sum(cal_rate_[%])",
                    "heat-solar+Sum(cal_rate_[%])",
                    "liquid-bio-diesel+Sum(cal_rate_[%])",
                    "liquid-bio-gasoline+Sum(cal_rate_[%])",
                    "liquid-ff-heatingoil+Sum(cal_rate_[%])",
                    "solid-bio+Sum(cal_rate_[%])",
                    "solid-ff-coal+Sum(cal_rate_[%])",
                    "solid-waste+Sum(cal_rate_[%])"
                ]
            }
        },
        "string-input-2179:345": {
            "type": "string",
            "default": "dhg_gtap",
            "description": "Enter Description",
            "example": "dhg_gtap"
        },
        "single-selection-1217:317:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "fts"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "fts"
            }
        },
        "boolean-input-1205:3373:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:3158:1601:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "column-filter-1205:3430:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "appliances+energy-demand_calibrated_[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "appliances+energy-demand_calibrated_[TWh]",
                    "cooking+energy-demand_calibrated_[TWh]",
                    "hot-water+energy-demand_calibrated_[TWh]",
                    "lighting+energy-demand_calibrated_[TWh]",
                    "space-cooling+energy-demand_calibrated_[TWh]"
                ]
            }
        },
        "string-input-1205:3158:1601:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "column-selection-2192:2307:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-2583:1596:1597": {
            "type": "string",
            "default": "$4",
            "description": "Enter Description",
            "example": "$4"
        },
        "string-input-2583:1596:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)-(.*)_(.*)-(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)-(.*)_(.*)-(.*)(\\[.*)"
        },
        "boolean-input-1205:3085:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-2584:2063:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2584:2063:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)(\\[.*)"
        },
        "string-input-2584:2063:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "string-input-1205:2987:349": {
            "type": "string",
            "default": "bld_energy-demand",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand"
        },
        "string-input-2583:1684:1599": {
            "type": "string",
            "default": "renovationcategory",
            "description": "Enter Description",
            "example": "renovationcategory"
        },
        "double-input-1165:2799:1254": {
            "type": "string",
            "default": "0.001",
            "description": "Enter Description",
            "example": "0.001"
        },
        "string-input-1165:802:1163": {
            "type": "string",
            "default": "1990",
            "description": "Enter Description",
            "example": "1990"
        },
        "string-input-1205:2081:1596": {
            "type": "string",
            "default": "(.*)-(.*)_(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)-(.*)_(.*)_(.*)\\[.*"
        },
        "string-input-1165:802:1164": {
            "type": "string",
            "default": "2015",
            "description": "Enter Description",
            "example": "2015"
        },
        "boolean-input-1205:3433:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "single-selection-1205:3042:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-2583:1684:1596": {
            "type": "string",
            "default": "(.*)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)"
        },
        "string-input-2583:1684:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "boolean-input-1217:647:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "single-selection-1154:1178:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "single-selection-1154:1178:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "usemap-2192:2807:4886": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/usemap.csv"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/usemap.csv",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "string-input-1199:345": {
            "type": "string",
            "default": "dhg_clt",
            "description": "Enter Description",
            "example": "dhg_clt"
        },
        "string-input-2583:1611:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "double-input-1205:3216:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "string-input-2583:1611:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "column-filter-1205:3099:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "column-filter-1165:2089:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-demand[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-demand[TWh]"
                ]
            }
        },
        "string-input-2583:1611:1599": {
            "type": "string",
            "default": "Years_number",
            "description": "Enter Description",
            "example": "Years_number"
        },
        "string-input-1205:2987:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:2987:357": {
            "type": "string",
            "default": ".*energy-demand_(.*residential_.*)_.*_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand_(.*residential_.*)_.*_.*\\[.*"
        },
        "single-selection-1214:1162:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-2606:345": {
            "type": "string",
            "default": "bld_clt",
            "description": "Enter Description",
            "example": "bld_clt"
        },
        "column-filter-1154:1164:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_conversion-rates_kWh_to_TWh[%]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_conversion-rates_kWh_to_TWh[%]",
                    "ots_bld_conversion-rates_g_to_Mt[%]",
                    "ots_bld_conversion-rates_gkWh_to_MtTWh[%]",
                    "ots_bld_conversion-rates_one[%]",
                    "ots_bld_conversion-rates_1000m2_to_Mm2[%]"
                ]
            }
        },
        "single-selection-2590:2006:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-2819:2817:4867": {
            "type": "string",
            "default": "eurostat",
            "description": "Enter Description",
            "example": "eurostat"
        },
        "string-input-1205:2942:2911:843": {
            "type": "string",
            "default": "EU before calibration",
            "description": "Enter Description",
            "example": "EU before calibration"
        },
        "string-input-1205:2940:2870:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "multiple-selection-2192:66": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "cres"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "cres",
                    "cressh",
                    "cressc",
                    "creswh",
                    "cresco",
                    "cresrf",
                    "creswm",
                    "cresdr",
                    "cresdw",
                    "crestv",
                    "cresit",
                    "cresli",
                    "cresoa",
                    "cser",
                    "csersh",
                    "csersc",
                    "cserhw",
                    "cserbl"
                ]
            }
        },
        "string-input-1205:2834:349": {
            "type": "string",
            "default": "dhg_energy-need",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "dhg_energy-need"
        },
        "string-input-1165:802:445": {
            "type": "string",
            "default": "cal_dhg_(energy-demand_.*)\\[.*",
            "description": "Pattern selecting the group of calibration columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_dhg_(energy-demand_.*)\\[.*"
        },
        "string-input-1165:802:444": {
            "type": "string",
            "default": "cal_dhg_energy_factor",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_dhg_energy_factor"
        },
        "single-selection-0:643:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:2941:2895:843": {
            "type": "string",
            "default": "After joining cal data and main data",
            "description": "Enter Description",
            "example": "After joining cal data and main data"
        },
        "string-input-1205:2727:2794:843": {
            "type": "string",
            "default": "Floor area",
            "description": "Enter Description",
            "example": "Floor area"
        },
        "single-selection-1165:2789:808:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1165:802:446": {
            "type": "string",
            "default": "dhg_(energy-demand_.*)\\[.*",
            "description": "Pattern selecting the group of columns to be calibrated. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "dhg_(energy-demand_.*)\\[.*"
        },
        "string-input-2792:345": {
            "type": "string",
            "default": "bld_reno_aggr",
            "description": "Enter Description",
            "example": "bld_reno_aggr"
        },
        "column-filter-1205:2938:2902:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "energy-demand_decentral_renovated[GWh]",
                    "energy-demand_decentral_constructed[GWh]",
                    "energy-demand_decentral_unrenovated[GWh]"
                ]
            }
        },
        "string-input-441:643:343": {
            "type": "string",
            "default": "nonres-floorarea",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "nonres-floorarea"
        },
        "string-input-2583:1595:1599": {
            "type": "string",
            "default": "buildingtype",
            "description": "Enter Description",
            "example": "buildingtype"
        },
        "column-filter-1154:1166:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_CO2-factors_solid-ff-coal[gCO2/kWh]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_CO2-factors_solid-ff-coal[gCO2/kWh]",
                    "ots_bld_CO2-factors_liquid-ff-heatingoil[gCO2/kWh]",
                    "ots_bld_CO2-factors_gas-ff-natural[gCO2/kWh]",
                    "ots_bld_CO2-factors_electricity[gCO2/kWh]",
                    "ots_bld_CO2-factors_solid-bio-woodlog[gCO2/kWh]",
                    "ots_bld_CO2-factors_solid-bio-pellets[gCO2/kWh]",
                    "ots_bld_CO2-factors_heat-ambient[gCO2/kWh]",
                    "ots_bld_CO2-factors_heat-solar[gCO2/kWh]",
                    "ots_bld_CO2-factors_heat-geothermal[gCO2/kWh]",
                    "ots_bld_CO2-factors_N2O[gCO2/kWh]",
                    "ots_bld_CO2-factors_CH4[gCO2/kWh]",
                    "ots_bld_CO2-factors_SO2[gCO2/kWh]"
                ]
            }
        },
        "single-selection-1176:1162:1207:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "SPLIT"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "SPLIT"
            }
        },
        "string-input-1165:2787:349": {
            "type": "string",
            "default": "dhg_energy-demand_contribution_CHP",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "dhg_energy-demand_contribution_CHP"
        },
        "string-input-1205:3430:2923:843": {
            "type": "string",
            "default": "EU calibration rate",
            "description": "Enter Description",
            "example": "EU calibration rate"
        },
        "string-input-1217:643:343": {
            "type": "string",
            "default": "heatcool-technology-fuel",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "heatcool-technology-fuel"
        },
        "string-input-2583:1595:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)-(.*)_(.*)-(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)-(.*)_(.*)-(.*)(\\[.*)"
        },
        "string-input-441:441:444": {
            "type": "string",
            "default": "fts_bld_nonres-floorarea",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "fts_bld_nonres-floorarea"
        },
        "string-input-2583:1595:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "multiple-selection-2192:58": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "2115"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "2115",
                    "2116",
                    "2117",
                    "2118",
                    "2210",
                    "2112",
                    "2121",
                    "2122",
                    "2130",
                    "2230",
                    "2310",
                    "2330",
                    "2410",
                    "3105",
                    "3106",
                    "3191",
                    "3192",
                    "3193",
                    "3214",
                    "3215",
                    "3220",
                    "3234",
                    "3235",
                    "3246",
                    "3247",
                    "3244",
                    "3250",
                    "3260",
                    "3270A",
                    "3281",
                    "3282",
                    "3283",
                    "3285",
                    "3286",
                    "3295",
                    "4100",
                    "4210",
                    "4220",
                    "4230",
                    "4240",
                    "5535",
                    "5532",
                    "5541",
                    "5544",
                    "5542",
                    "55431",
                    "5546",
                    "5547",
                    "5549",
                    "5548",
                    "5550",
                    "7100",
                    "55432",
                    "5100",
                    "5200",
                    "6000"
                ]
            }
        },
        "boolean-input-1205:3099:3105:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "string-input-1205:2420:460": {
            "type": "string",
            "default": "GWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "GWh"
        },
        "string-input-441:441:446": {
            "type": "string",
            "default": "ll_bld_nonres-floorarea_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "ll_bld_nonres-floorarea_(.*)\\[.*"
        },
        "string-input-441:441:445": {
            "type": "string",
            "default": "ots_bld_nonres-floorarea_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "ots_bld_nonres-floorarea_(.*)\\[.*"
        },
        "string-input-2819:5399:1599": {
            "type": "string",
            "default": "technology-old",
            "description": "Enter Description",
            "example": "technology-old"
        },
        "single-selection-1184:1189:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-2819:5399:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2819:5399:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-1205:1713:1599": {
            "type": "string",
            "default": "parameter-name",
            "description": "Enter Description",
            "example": "parameter-name"
        },
        "string-input-2816:3991:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "boolean-input-2583:1594:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:3431:2933:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(energy-demand[TWh])",
                    "cooking+Sum(energy-demand[TWh])",
                    "hot-water+Sum(energy-demand[TWh])",
                    "lighting+Sum(energy-demand[TWh])",
                    "space-cooling+Sum(energy-demand[TWh])"
                ]
            }
        },
        "single-selection-441:639:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "single-selection-435:328:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "ots"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "ots"
            }
        },
        "single-selection-1205:3106:3218:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-2192:1611:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "column-filter-1205:3058:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_non-residential_education_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_non-residential_education_electricity[TWh]",
                    "bld_energy-demand_non-residential_health_electricity[TWh]",
                    "bld_energy-demand_non-residential_hotels_electricity[TWh]",
                    "bld_energy-demand_non-residential_offices_electricity[TWh]",
                    "bld_energy-demand_non-residential_other_electricity[TWh]",
                    "bld_energy-demand_non-residential_trade_electricity[TWh]",
                    "bld_energy-demand_residential_mfh_electricity[TWh]",
                    "bld_energy-demand_residential_sfh_electricity[TWh]",
                    "bld_energy-demand_non-residential_education_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_health_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_hotels_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_offices_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_other_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_trade_gas-bio[TWh]",
                    "bld_energy-demand_residential_mfh_gas-bio[TWh]",
                    "bld_energy-demand_residential_sfh_gas-bio[TWh]",
                    "bld_energy-demand_non-residential_education_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_health_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_hotels_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_offices_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_other_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_trade_gas-ff-natural[TWh]",
                    "bld_energy-demand_residential_mfh_gas-ff-natural[TWh]",
                    "bld_energy-demand_residential_sfh_gas-ff-natural[TWh]",
                    "bld_energy-demand_non-residential_education_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_health_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_hotels_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_offices_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_other_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_trade_heat-ambient[TWh]",
                    "bld_energy-demand_residential_mfh_heat-ambient[TWh]",
                    "bld_energy-demand_residential_sfh_heat-ambient[TWh]",
                    "bld_energy-demand_non-residential_education_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_health_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_hotels_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_offices_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_other_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_trade_heat-geothermal[TWh]",
                    "bld_energy-demand_residential_mfh_heat-geothermal[TWh]",
                    "bld_energy-demand_residential_sfh_heat-geothermal[TWh]",
                    "bld_energy-demand_non-residential_education_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_health_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_hotels_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_offices_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_other_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_trade_heat-solar[TWh]",
                    "bld_energy-demand_residential_mfh_heat-solar[TWh]",
                    "bld_energy-demand_residential_sfh_heat-solar[TWh]",
                    "bld_energy-demand_non-residential_education_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_health_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_hotels_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_offices_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_other_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_trade_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_residential_mfh_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_residential_sfh_liquid-bio-diesel[TWh]",
                    "bld_energy-demand_non-residential_education_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_health_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_hotels_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_offices_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_other_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_trade_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_residential_mfh_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_residential_sfh_liquid-bio-gasoline[TWh]",
                    "bld_energy-demand_non-residential_education_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_health_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_hotels_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_offices_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_other_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_trade_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_residential_mfh_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_residential_sfh_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_non-residential_education_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_health_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_hotels_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_offices_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_other_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_trade_solid-bio[TWh]",
                    "bld_energy-demand_residential_mfh_solid-bio[TWh]",
                    "bld_energy-demand_residential_sfh_solid-bio[TWh]",
                    "bld_energy-demand_non-residential_education_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_health_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_hotels_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_offices_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_other_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_trade_solid-ff-coal[TWh]",
                    "bld_energy-demand_residential_mfh_solid-ff-coal[TWh]",
                    "bld_energy-demand_residential_sfh_solid-ff-coal[TWh]",
                    "bld_energy-demand_non-residential_education_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_health_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_hotels_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_offices_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_other_solid-waste[TWh]",
                    "bld_energy-demand_non-residential_trade_solid-waste[TWh]",
                    "bld_energy-demand_residential_mfh_solid-waste[TWh]",
                    "bld_energy-demand_residential_sfh_solid-waste[TWh]"
                ]
            }
        },
        "string-input-1205:2106:349": {
            "type": "string",
            "default": "bld_emissions",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_emissions"
        },
        "string-input-2192:1611:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "double-input-1205:3217:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "string-input-2192:1611:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "single-selection-1214:1162:1166:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1205:3037:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:1713:1596": {
            "type": "string",
            "default": "(.*)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)"
        },
        "single-selection-1205:2006:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1205:1713:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2819:1604:1596": {
            "type": "string",
            "default": "(.*)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)"
        },
        "string-input-2819:1604:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-2192:5047:1599": {
            "type": "string",
            "default": "energycarrier-eurostat",
            "description": "Enter Description",
            "example": "energycarrier-eurostat"
        },
        "string-input-2192:5047:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)\\[.*",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)\\[.*"
        },
        "string-input-2192:5047:1597": {
            "type": "string",
            "default": "$3",
            "description": "Enter Description",
            "example": "$3"
        },
        "single-selection-1176:1162:1207:645": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "string-input-2819:1604:1599": {
            "type": "string",
            "default": "energycarrier-JRC",
            "description": "Enter Description",
            "example": "energycarrier-JRC"
        },
        "boolean-input-1205:3174:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "boolean-input-2821:2331:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1165:1230:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "boolean-input-1205:2086:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "boolean-input-1165:1217:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "column-filter-2183:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_energy-demand_heat_electricity[TWh]",
                    "bld_energy-demand_heat_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_solid-ff-coal[TWh]",
                    "bld_energy-demand_heat_gas-bio[TWh]",
                    "bld_energy-demand_heat_liquid-bio[TWh]",
                    "bld_energy-demand_heat_solid-bio[TWh]",
                    "bld_energy-demand_heat_heat-solar[TWh]",
                    "bld_energy-demand_heat_heat-ambient[TWh]",
                    "bld_energy-demand_heat_heat-geothermal[TWh]",
                    "bld_energy-demand_heat_solid-waste[TWh]"
                ]
            }
        },
        "single-selection-1176:1162:1207:658": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-1205:1594:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:2640:2231:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "boolean-input-2819:1605:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "string-input-1205:2106:357": {
            "type": "string",
            "default": ".*emissions_(.*)\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*emissions_(.*)\\[.*"
        },
        "single-selection-1165:1217:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:2106:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "string-input-1184:1191:343": {
            "type": "string",
            "default": "climate-monthly-temp-out-air",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "climate-monthly-temp-out-air"
        },
        "string-input-1165:2787:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "boolean-input-2192:2331:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1205:3189:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1165:2787:357": {
            "type": "string",
            "default": ".*heat-supply.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*heat-supply.*"
        },
        "boolean-input-1205:3158:3144:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "string-input-1205:2834:357": {
            "type": "string",
            "default": ".*energy-need.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-need.*"
        },
        "string-input-1215:1174:343": {
            "type": "string",
            "default": "district-fixed-assumptions",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "district-fixed-assumptions"
        },
        "string-input-1205:2834:354": {
            "type": "string",
            "default": "GWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "GWh"
        },
        "string-input-1165:1232:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "string-input-2599:345": {
            "type": "string",
            "default": "bld_pe",
            "description": "Enter Description",
            "example": "bld_pe"
        },
        "string-input-1205:3432:2933:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "single-selection-1179:1167:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "district_heating"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "district_heating"
            }
        },
        "single-selection-1205:3016:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:3083:354": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "Mt"
        },
        "column-filter-2443:1014:653": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_building-mix_sfh_1800-2010[%]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_building-mix_sfh_1800-2010[%]",
                    "bld_building-mix_mfh_1800-2010[%]"
                ]
            }
        },
        "string-input-2192:5235:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-2192:5235:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-1205:3083:357": {
            "type": "string",
            "default": ".*emissions-(.*ial_[^e].*)_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*emissions-(.*ial_[^e].*)_.*\\[.*"
        },
        "string-input-1205:2942:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-2192:5235:1599": {
            "type": "string",
            "default": "energycarrier-old",
            "description": "Enter Description",
            "example": "energycarrier-old"
        },
        "string-input-1205:2942:357": {
            "type": "string",
            "default": "(.*)\\+.*calibrated.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*calibrated.*\\[.*"
        },
        "single-selection-1205:3099:3104:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "column-selection-2192:5235:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "energycarrier"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "energycarrier"
            }
        },
        "single-selection-1170:395": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "2.1 Buildings"
                }
            },
            "description": "Name of the current module",
            "example": {
                "variable_value": "2.1 Buildings"
            }
        },
        "column-selection-2819:5044:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "boolean-input-2192:1602:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-2192:4960:4909:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2192:4960:4909:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-2192:4960:4909:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "single-selection-1205:2337:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "boolean-input-438:643:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1205:1393:1151:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Subtraction 1-2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Subtraction 1-2"
            }
        },
        "single-selection-1154:441:643:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:2942:349": {
            "type": "string",
            "default": "fed_calibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_calibrated"
        },
        "single-selection-1154:1169:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "string-input-1176:1162:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "column-filter-1205:1819:1421": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_new_dh_pipes[km]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_new_dh_pipes[km]"
                ]
            }
        },
        "single-selection-1176:1211:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "6.3 Air Pollution"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "6.3 Air Pollution"
            }
        },
        "single-selection-1154:1169:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "column-filter-1205:2942:2914:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity[TWh]",
                    "gas-bio[TWh]",
                    "gas-ff-natural[TWh]",
                    "heat-ambient[TWh]",
                    "heat-geothermal[TWh]",
                    "heat-solar[TWh]",
                    "liquid-bio-diesel[TWh]",
                    "liquid-bio-gasoline[TWh]",
                    "liquid-ff-heatingoil[TWh]",
                    "solid-bio[TWh]",
                    "solid-ff-coal[TWh]",
                    "solid-waste[TWh]"
                ]
            }
        },
        "boolean-input-1205:3431:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1165:1232:445": {
            "type": "string",
            "default": ".*eff.*Xdemandshare_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*eff.*Xdemandshare_(.*)\\[.*"
        },
        "string-input-1165:1232:444": {
            "type": "string",
            "default": "dhg_energy-need-technology-share",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "dhg_energy-need-technology-share"
        },
        "single-selection-1165:802:1151:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "string-input-1165:1232:446": {
            "type": "string",
            "default": ".*eff.*Xdemandshare-.*\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": ".*eff.*Xdemandshare-.*\\[.*"
        },
        "column-filter-2592:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_emissions-CH4[Mt]",
                    "bld_emissions-CO2[Mt]",
                    "bld_emissions-N2O[Mt]"
                ]
            }
        },
        "column-filter-2809:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "column-selection-2192:1611:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-2608:345": {
            "type": "string",
            "default": "bld_emp",
            "description": "Enter Description",
            "example": "bld_emp"
        },
        "boolean-input-1165:1216:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-441:441:460": {
            "type": "string",
            "default": "1000m2",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "1000m2"
        },
        "boolean-input-1218:1114:360": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-2192:2313:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1165:1198:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_energy-demand_contribution_heat-waste[TWh/year]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_energy-demand_contribution_heat-waste[TWh/year]"
                ]
            }
        },
        "single-selection-1165:802:1146:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "column-filter-1176:1162:1182:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Sum(cal_rate_emissions_heat-district-CO2[%])"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "Sum(cal_rate_emissions_heat-district-CO2[%])",
                    "Sum(cal_rate_emissions_heat-district-CH4[%])",
                    "Sum(cal_rate_emissions_heat-district-N2O[%])",
                    "Sum(cal_dhg_emissions_heat-district-CO2[Mt])",
                    "Sum(cal_dhg_emissions_heat-district-CH4[Mt])",
                    "Sum(cal_dhg_emissions_heat-district-N2O[Mt])"
                ]
            }
        },
        "column-filter-1165:1232:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_efficiencyXdemandshare_gas-ff-natural[%]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_efficiencyXdemandshare_gas-ff-natural[%]",
                    "dhg_efficiencyXdemandshare_liquid-ff-heatingoil[%]",
                    "dhg_efficiencyXdemandshare_solid-ff-coal[%]",
                    "dhg_efficiencyXdemandshare_solid-bio[%]",
                    "dhg_efficiencyXdemandshare_heat-ambient[%]",
                    "dhg_efficiencyXdemandshare_heat-solar[%]",
                    "dhg_efficiencyXdemandshare_heat-geothermal[%]"
                ]
            }
        },
        "string-input-1176:1162:444": {
            "type": "string",
            "default": "cal_product",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "cal_product"
        },
        "column-filter-2809:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1176:1162:445": {
            "type": "string",
            "default": "cal_rate_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "cal_rate_(.*)\\[.*"
        },
        "string-input-1176:1162:446": {
            "type": "string",
            "default": "cal_dhg_(.*)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "cal_dhg_(.*)\\[.*"
        },
        "column-filter-2443:1638:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_nonres-floor-area_non-residential_offices[1000m2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_nonres-floor-area_non-residential_offices[1000m2]",
                    "bld_nonres-floor-area_non-residential_hotels[1000m2]",
                    "bld_nonres-floor-area_non-residential_trade[1000m2]",
                    "bld_nonres-floor-area_non-residential_education[1000m2]",
                    "bld_nonres-floor-area_non-residential_health[1000m2]",
                    "bld_nonres-floor-area_non-residential_other[1000m2]",
                    "bld_floor-area_residential_sfh[1000m2]",
                    "bld_floor-area_residential_mfh[1000m2]"
                ]
            }
        },
        "string-input-1205:2783:445": {
            "type": "string",
            "default": ".*need(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*need(.*)\\[.*"
        },
        "boolean-input-2192:4930:4911:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:2783:446": {
            "type": "string",
            "default": "bld_district-heating-share_dh.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "bld_district-heating-share_dh.*"
        },
        "string-input-1205:2783:444": {
            "type": "string",
            "default": "energy-nee_district",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-nee_district"
        },
        "column-filter-2192:5174:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_Final consumption - other sectors - commercial and public services - energy use_Total[Gigawatt-hour]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "ots_Final consumption - other sectors - commercial and public services - energy use_Total[Gigawatt-hour]",
                    "ots_Final consumption - other sectors - households - energy use_Total[Gigawatt-hour]"
                ]
            }
        },
        "column-filter-1205:652:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-demand_fridge[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-demand_fridge[GWh]",
                    "energy-demand_freezer[GWh]",
                    "energy-demand_dishwasher[GWh]",
                    "energy-demand_dryer[GWh]",
                    "energy-demand_wmachine[GWh]",
                    "energy-demand_tv[GWh]",
                    "energy-demand_phone[GWh]",
                    "energy-demand_comp[GWh]"
                ]
            }
        },
        "boolean-input-2821:2323:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:3083:349": {
            "type": "string",
            "default": "bld_emissions_non-space-heating",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_emissions_non-space-heating"
        },
        "single-selection-1205:1393:1150:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "column-filter-1205:1116:1421": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "appliance-new_fridge[num]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "appliance-new_fridge[num]",
                    "appliance-new_freezer[num]",
                    "appliance-new_wmachine[num]",
                    "appliance-new_dishwasher[num]",
                    "appliance-new_dryer[num]",
                    "appliance-new_tv[num]",
                    "appliance-new_comp[num]",
                    "appliance-new_phone[num]"
                ]
            }
        },
        "multiple-selection-2192:1167:131": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "CO2"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "CO2",
                    "N2O",
                    "CH4"
                ]
            }
        },
        "column-filter-1205:3217:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-demand[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-demand[GWh]",
                    "energy-demand_calibrated_[GWh]"
                ]
            }
        },
        "string-input-1205:3148:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "boolean-input-1205:2640:2232:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "string-input-1205:2941:2893:843": {
            "type": "string",
            "default": "After joining cal data and main data",
            "description": "Enter Description",
            "example": "After joining cal data and main data"
        },
        "string-input-1205:3148:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2809:3994:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "boolean-input-1218:1087:360": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:3148:1596": {
            "type": "string",
            "default": "bld_(.*)_.*(\\[.*)",
            "description": "Enter Description",
            "example": "bld_(.*)_.*(\\[.*)"
        },
        "string-input-1165:790:446": {
            "type": "string",
            "default": "cal_rate.*(...)\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "cal_rate.*(...)\\[.*"
        },
        "column-filter-1205:2942:2910:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity[TWh]",
                    "gas-bio[TWh]",
                    "gas-ff-natural[TWh]",
                    "heat-ambient[TWh]",
                    "heat-geothermal[TWh]",
                    "heat-solar[TWh]",
                    "liquid-bio-diesel[TWh]",
                    "liquid-bio-gasoline[TWh]",
                    "liquid-ff-heatingoil[TWh]",
                    "solid-bio[TWh]",
                    "solid-ff-coal[TWh]",
                    "solid-waste[TWh]"
                ]
            }
        },
        "string-input-1165:790:444": {
            "type": "string",
            "default": "dhg_emissions",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "dhg_emissions"
        },
        "data-type-1154:1091:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "country-list-2806:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "string-input-1165:790:445": {
            "type": "string",
            "default": "emissions_(...)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "emissions_(...)\\[.*"
        },
        "string-input-1165:2786:2785:1599": {
            "type": "string",
            "default": "unit",
            "description": "Enter Description",
            "example": "unit"
        },
        "single-selection-1205:837:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-1165:790:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-2816:3809:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "string-input-2816:3993:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "column-filter-2596:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_floor-area_non-residential_education[million_m2]",
                    "bld_floor-area_non-residential_health[million_m2]",
                    "bld_floor-area_non-residential_hotels[million_m2]",
                    "bld_floor-area_non-residential_offices[million_m2]",
                    "bld_floor-area_non-residential_other[million_m2]",
                    "bld_floor-area_non-residential_trade[million_m2]"
                ]
            }
        },
        "multiple-selection-2192:1167:128": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "CRF1A4A - Fuel combustion in commercial and institutional sector"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "CRF1A4A - Fuel combustion in commercial and institutional sector",
                    "CRF1A4B - Fuel combustion by households"
                ]
            }
        },
        "column-selection-2819:5399:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "technology"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "technology"
            }
        },
        "boolean-input-1205:1393:1146:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "boolean-input-1205:2998:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "string-input-1205:2942:2913:843": {
            "type": "string",
            "default": "EU before calibration",
            "description": "Enter Description",
            "example": "EU before calibration"
        },
        "boolean-input-1205:3147:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-2806:3809:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "sectormap-2192:2806:4885": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/sectormap.csv"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/sectormap.csv",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "boolean-input-0:643:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "string-input-2192:2307:1599": {
            "type": "string",
            "default": "energycarrier-JRC",
            "description": "Enter Description",
            "example": "energycarrier-JRC"
        },
        "column-filter-1205:3436:2927:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "cooking+ColumnValues",
                    "hot-water+ColumnValues",
                    "lighting+ColumnValues",
                    "space-cooling+ColumnValues"
                ]
            }
        },
        "column-filter-1165:790:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "emissions_CO2[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "emissions_CO2[Mt]",
                    "emissions_CH4[Mt]",
                    "emissions_N2O[Mt]"
                ]
            }
        },
        "string-input-2192:2307:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1218:1114:343": {
            "type": "string",
            "default": "building-demolition-rate",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-demolition-rate"
        },
        "string-input-2192:2307:1596": {
            "type": "string",
            "default": "(.*)_(.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)"
        },
        "string-input-1205:2339:1597": {
            "type": "string",
            "default": "$4",
            "description": "Enter Description",
            "example": "$4"
        },
        "string-input-1205:2339:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "single-selection-2191:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1165:1238:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "single-selection-1165:2787:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1215:1174:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:2789:445": {
            "type": "string",
            "default": ".*need(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*need(.*)\\[.*"
        },
        "string-input-1165:790:460": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mt"
        },
        "string-input-1205:2789:446": {
            "type": "string",
            "default": "bld_decentral-heating-share_dh.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "bld_decentral-heating-share_dh.*"
        },
        "string-input-1205:2789:444": {
            "type": "string",
            "default": "energy-need_decentral",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-need_decentral"
        },
        "boolean-input-2187:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-2806:3993:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "column-filter-1165:1238:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_energy-demand-prelim_gas-ff-natural[TWh/year]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_energy-demand-prelim_gas-ff-natural[TWh/year]",
                    "dhg_energy-demand-prelim_liquid-ff-heatingoil[TWh/year]",
                    "dhg_energy-demand-prelim_solid-ff-coal[TWh/year]",
                    "dhg_energy-demand-prelim_solid-bio[TWh/year]",
                    "dhg_energy-demand-prelim_heat-ambient[TWh/year]",
                    "dhg_energy-demand-prelim_heat-solar[TWh/year]",
                    "dhg_energy-demand-prelim_heat-geothermal[TWh/year]"
                ]
            }
        },
        "single-selection-1205:2792:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-1205:2715:2505:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1205:3158:3144:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "boolean-input-1218:1072:360": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "string-input-1205:3158:3144:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1205:3158:3144:1599": {
            "type": "string",
            "default": "new_name",
            "description": "Enter Description",
            "example": "new_name"
        },
        "string-input-1218:1072:343": {
            "type": "string",
            "default": "building-demolition-rate",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-demolition-rate"
        },
        "column-filter-1205:2852:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_appliances-hotwater-cooling-cooking-lighting_gas-ff-natural[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_appliances-hotwater-cooling-cooking-lighting_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_gas-ff-natural[TWh]",
                    "bld_energy-demand_heat_liquid-ff-heatingoil[TWh]",
                    "bld_energy-demand_heat_solid-ff-coal[TWh]"
                ]
            }
        },
        "country-list-1205:3099:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "double-input-1205:2540:1247": {
            "type": "number",
            "default": 1.0,
            "description": "Enter Description",
            "example": 1.0
        },
        "single-selection-2585:2004:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1165:2786:2785:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1165:2786:2785:1596": {
            "type": "string",
            "default": "(.*)\\[(.*)\\]",
            "description": "Enter Description",
            "example": "(.*)\\[(.*)\\]"
        },
        "single-selection-1205:3078:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1205:3213:2380:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-filter-1176:1162:1207:653": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Sum(cal_dhg_energy_heat-district[TWh])"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "Sum(cal_dhg_energy_heat-district[TWh])"
                ]
            }
        },
        "single-selection-1205:2793:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-2443:1638:1246": {
            "type": "string",
            "default": "Mm2",
            "description": "Enter Description",
            "example": "Mm2"
        },
        "string-input-2443:1638:1245": {
            "type": "string",
            "default": ".*floor-area(.*)\\[.*",
            "description": "Enter Description",
            "example": ".*floor-area(.*)\\[.*"
        },
        "single-selection-2605:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1218:1087:343": {
            "type": "string",
            "default": "building-insulation-cooling",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "building-insulation-cooling"
        },
        "single-selection-1165:2789:808:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-1205:2987:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-2192:2817:4867": {
            "type": "string",
            "default": "eurostat",
            "description": "Enter Description",
            "example": "eurostat"
        },
        "string-input-1165:1615:349": {
            "type": "string",
            "default": "dhg_energy-demand",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "dhg_energy-demand"
        },
        "string-input-1205:3436:2947:843": {
            "type": "string",
            "default": "EU calibrated",
            "description": "Enter Description",
            "example": "EU calibrated"
        },
        "string-input-1205:3429:2933:843": {
            "type": "string",
            "default": "Romania after calibration",
            "description": "Enter Description",
            "example": "Romania after calibration"
        },
        "string-input-0:643:343": {
            "type": "string",
            "default": "heatcool-efficiency",
            "description": "the lever name should be the same as the file name (without prefix ots-fts-ll)",
            "example": "heatcool-efficiency"
        },
        "agg-method-1205:3101:2808:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1165:802:1146:460": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "unit"
        },
        "column-filter-1154:1175:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "ots_bld_appliance-lifetime_fridge[a]"
                    }
                }
            },
            "description": "Select the columns for data completion",
            "example": {
                "columns": [
                    "ots_bld_appliance-lifetime_fridge[a]",
                    "ots_bld_appliance-lifetime_freezer[a]",
                    "ots_bld_appliance-lifetime_wmachine[a]",
                    "ots_bld_appliance-lifetime_dishwasher[a]",
                    "ots_bld_appliance-lifetime_dryer[a]",
                    "ots_bld_appliance-lifetime_ac[a]",
                    "ots_bld_appliance-lifetime_tv[a]",
                    "ots_bld_appliance-lifetime_comp[a]",
                    "ots_bld_appliance-lifetime_phone[a]"
                ]
            }
        },
        "string-input-1165:2789:821:1175:460": {
            "type": "string",
            "default": "Mt",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "Mt"
        },
        "string-input-2175:2723:843": {
            "type": "string",
            "default": "Energy Demand calibrated",
            "description": "Enter Description",
            "example": "Energy Demand calibrated"
        },
        "country-list-1205:3101:3086:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "single-selection-1165:802:1150:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "string-input-1165:1615:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "data-type-1154:1165:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical"
                ]
            }
        },
        "column-filter-1165:2097:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_emissions_added-heat-district_CO2_gas-ff-natural[Mt]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_emissions_added-heat-district_CO2_gas-ff-natural[Mt]",
                    "dhg_emissions_added-heat-district_CH4_gas-ff-natural[Mt]",
                    "dhg_emissions_added-heat-district_N2O_gas-ff-natural[Mt]",
                    "dhg_emissions_added-heat-district_CO2_heat-ambient[Mt]",
                    "dhg_emissions_added-heat-district_CH4_heat-ambient[Mt]",
                    "dhg_emissions_added-heat-district_N2O_heat-ambient[Mt]",
                    "dhg_emissions_added-heat-district_CO2_heat-geothermal[Mt]",
                    "dhg_emissions_added-heat-district_CH4_heat-geothermal[Mt]",
                    "dhg_emissions_added-heat-district_N2O_heat-geothermal[Mt]",
                    "dhg_emissions_added-heat-district_CO2_heat-solar[Mt]",
                    "dhg_emissions_added-heat-district_CH4_heat-solar[Mt]",
                    "dhg_emissions_added-heat-district_N2O_heat-solar[Mt]",
                    "dhg_emissions_added-heat-district_CO2_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions_added-heat-district_CH4_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions_added-heat-district_N2O_liquid-ff-heatingoil[Mt]",
                    "dhg_emissions_added-heat-district_CO2_solid-bio[Mt]",
                    "dhg_emissions_added-heat-district_CH4_solid-bio[Mt]",
                    "dhg_emissions_added-heat-district_N2O_solid-bio[Mt]",
                    "dhg_emissions_added-heat-district_CO2_solid-ff-coal[Mt]",
                    "dhg_emissions_added-heat-district_CH4_solid-ff-coal[Mt]",
                    "dhg_emissions_added-heat-district_N2O_solid-ff-coal[Mt]"
                ]
            }
        },
        "column-filter-1205:3432:2906:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances[TWh]",
                    "cooking[TWh]",
                    "hot-water[TWh]",
                    "lighting[TWh]",
                    "space-cooling[TWh]"
                ]
            }
        },
        "column-filter-1205:3431:2952:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_uncalibrated_appliances[TWh]",
                    "fed_uncalibrated_cooking[TWh]",
                    "fed_uncalibrated_hot-water[TWh]",
                    "fed_uncalibrated_lighting[TWh]",
                    "fed_uncalibrated_space-cooling[TWh]"
                ]
            }
        },
        "column-filter-1205:3430:2951:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "appliances+energy-demand[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "appliances+energy-demand[TWh]",
                    "cooking+energy-demand[TWh]",
                    "hot-water+energy-demand[TWh]",
                    "lighting+energy-demand[TWh]",
                    "space-cooling+energy-demand[TWh]"
                ]
            }
        },
        "sectormap-2819:2806:4885": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/Switzerland/sectormap.csv"
                            },
                            "type": {
                                "type": "string",
                                "default": "UNKNOWN"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/Switzerland/sectormap.csv",
                        "type": "UNKNOWN"
                    }
                ]
            }
        },
        "single-selection-1205:3174:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1165:2092:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "column-filter-1205:3106:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "standardized_subsector_Austria[TWhstd]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "standardized_subsector_Austria[TWhstd]",
                    "standardized_subsector_Belgium[TWhstd]",
                    "standardized_subsector_Bulgaria[TWhstd]",
                    "standardized_subsector_Croatia[TWhstd]",
                    "standardized_subsector_Cyprus[TWhstd]",
                    "standardized_subsector_Czech Republic[TWhstd]",
                    "standardized_subsector_Denmark[TWhstd]",
                    "standardized_subsector_Estonia[TWhstd]",
                    "standardized_subsector_Finland[TWhstd]",
                    "standardized_subsector_France[TWhstd]",
                    "standardized_subsector_Germany[TWhstd]",
                    "standardized_subsector_Greece[TWhstd]",
                    "standardized_subsector_Hungary[TWhstd]",
                    "standardized_subsector_Ireland[TWhstd]",
                    "standardized_subsector_Italy[TWhstd]",
                    "standardized_subsector_Latvia[TWhstd]",
                    "standardized_subsector_Lithuania[TWhstd]",
                    "standardized_subsector_Luxembourg[TWhstd]",
                    "standardized_subsector_Malta[TWhstd]",
                    "standardized_subsector_Netherlands[TWhstd]",
                    "standardized_subsector_Poland[TWhstd]",
                    "standardized_subsector_Portugal[TWhstd]",
                    "standardized_subsector_Romania[TWhstd]",
                    "standardized_subsector_Slovakia[TWhstd]",
                    "standardized_subsector_Slovenia[TWhstd]",
                    "standardized_subsector_Spain[TWhstd]",
                    "standardized_subsector_Sweden[TWhstd]",
                    "standardized_subsector_Switzerland[TWhstd]",
                    "standardized_subsector_United Kingdom[TWhstd]"
                ]
            }
        },
        "string-input-1205:3085:357": {
            "type": "string",
            "default": ".*capex.*reno.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*capex.*reno.*"
        },
        "string-input-1205:3431:2955:843": {
            "type": "string",
            "default": "EU calibration rate",
            "description": "Enter Description",
            "example": "EU calibration rate"
        },
        "string-input-1205:1819:1420": {
            "type": "string",
            "default": ".*(dh_pipes)\\[.*]",
            "description": "Pattern selecting the activity to use for cost calculation. The technology is identified by a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the technology identifier.\n",
            "example": ".*(dh_pipes)\\[.*]"
        },
        "string-input-1205:3085:354": {
            "type": "string",
            "default": "MEUR",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "MEUR"
        },
        "string-input-1165:1615:357": {
            "type": "string",
            "default": "dhg_energy-demand.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "dhg_energy-demand.*"
        },
        "single-selection-1205:3213:2232:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-2819:4960:4909:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-2175:2728:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "energy-demand_renovated[TWh]",
                    "energy-demand_constructed[TWh]",
                    "energy-demand_unrenovated[TWh]"
                ]
            }
        },
        "column-filter-1165:803:1150:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "column-filter-2585:2004:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "energy-need-renovated[GWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "energy-need-renovated[GWh]",
                    "energy-need-constructed[GWh]",
                    "energy-need-unrenovated[GWh]"
                ]
            }
        },
        "column-selection-2192:5399:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "technology"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "technology"
            }
        },
        "string-input-1205:3430:2906:843": {
            "type": "string",
            "default": "EU after calibration",
            "description": "Enter Description",
            "example": "EU after calibration"
        },
        "data-type-1184:1190:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "baseyear"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "baseyear"
                ]
            }
        },
        "string-input-1205:2998:349": {
            "type": "string",
            "default": "bld_energy-demand_appliances-hotwater-cooling-cooking-lighting",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand_appliances-hotwater-cooling-cooking-lighting"
        },
        "string-input-2602:345": {
            "type": "string",
            "default": "bld_ind",
            "description": "Enter Description",
            "example": "bld_ind"
        },
        "string-input-1205:3085:349": {
            "type": "string",
            "default": "bld_capex_renovation",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "bld_capex_renovation"
        },
        "string-input-1205:2339:1596": {
            "type": "string",
            "default": "(.*)_(.*)_(.*)_(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)_(.*)_(.*)_(.*)(\\[.*)"
        },
        "boolean-input-2821:2316:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "string-input-1165:2789:821:1175:445": {
            "type": "string",
            "default": "co2factor_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "co2factor_(.*)\\[.*"
        },
        "boolean-input-1205:3106:3222:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "string-input-1165:2789:821:1175:446": {
            "type": "string",
            "default": "g/kWh_to_Mt/TWh",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "g/kWh_to_Mt/TWh"
        },
        "string-input-1205:3433:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "single-selection-438:441:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "column-filter-1205:3105:2951:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "dhg_pipes-total[km]",
                    "dhg_new_dh_pipes[km]"
                ]
            }
        },
        "boolean-input-1205:3212:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "string-input-1165:2789:821:1175:444": {
            "type": "string",
            "default": "co2factor",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "co2factor"
        },
        "single-selection-1165:1628:1419": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "CAPEX"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "CAPEX"
            }
        },
        "string-input-1205:2998:357": {
            "type": "string",
            "default": ".*energy-demand_.*_.*_([^e].*)\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand_.*_.*_([^e].*)\\[.*"
        },
        "string-input-1205:3433:357": {
            "type": "string",
            "default": "(.*)\\+.*calibrated.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*calibrated.*\\[.*"
        },
        "string-input-1205:2998:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "boolean-input-2590:2006:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-selection-1205:2339:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-2192:5399:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "column-filter-2175:2597:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "unrenovated-area-acc[Mm2]",
                    "renovated-area-acc[Mm2]",
                    "constructed-area-acc[Mm2]"
                ]
            }
        },
        "string-input-2192:5399:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "column-filter-2809:535": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Select the columns for data selection",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_emissions-CO2_residential_appliances[Mt]",
                    "bld_emissions-CO2_non-residential_appliances[Mt]",
                    "bld_emissions-CO2_non-residential_education[Mt]",
                    "bld_emissions-CO2_non-residential_health[Mt]",
                    "bld_emissions-CO2_non-residential_hotels[Mt]",
                    "bld_emissions-CO2_non-residential_offices[Mt]",
                    "bld_emissions-CO2_non-residential_other[Mt]",
                    "bld_emissions-CO2_non-residential_trade[Mt]",
                    "bld_emissions-CO2_residential_mfh[Mt]",
                    "bld_emissions-CO2_residential_sfh[Mt]"
                ]
            }
        },
        "string-input-2192:5399:1599": {
            "type": "string",
            "default": "technology-old",
            "description": "Enter Description",
            "example": "technology-old"
        },
        "string-input-1205:3217:1246": {
            "type": "string",
            "default": "TWh",
            "description": "Enter Description",
            "example": "TWh"
        },
        "column-filter-1205:2078:1253": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "emission-factor[g/kWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "emission-factor[g/kWh]"
                ]
            }
        },
        "string-input-1205:3217:1245": {
            "type": "string",
            "default": ".*\\[GWh\\]",
            "description": "Enter Description",
            "example": ".*\\[GWh\\]"
        },
        "agg-method-2808:4544": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "Sum"
            }
        },
        "string-input-1205:3433:349": {
            "type": "string",
            "default": "fed_calibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_calibrated"
        },
        "column-filter-1205:3434:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "bld_energy-demand_non-residential_hot-water_electricity[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "bld_energy-demand_non-residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_non-residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_residential_hot-water_electricity[TWh]",
                    "bld_energy-demand_residential_space-cooling_electricity[TWh]",
                    "bld_energy-demand_non-residential_appliances_electricity[TWh]",
                    "bld_energy-demand_residential_appliances_electricity[TWh]"
                ]
            }
        },
        "single-selection-1205:3433:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1205:1835:586": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation.",
            "example": false
        },
        "column-filter-1165:802:1151:652": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array"
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                ]
            }
        },
        "string-input-1205:2940:2883:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "data-type-1218:1047:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "column-filter-1165:1231:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "dhg_efficiencyXdemandshare_gas-ff-natural[%]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "dhg_efficiencyXdemandshare_gas-ff-natural[%]",
                    "dhg_efficiencyXdemandshare_liquid-ff-heatingoil[%]",
                    "dhg_efficiencyXdemandshare_solid-ff-coal[%]",
                    "dhg_efficiencyXdemandshare_solid-bio[%]",
                    "dhg_efficiencyXdemandshare_heat-ambient[%]",
                    "dhg_efficiencyXdemandshare_heat-solar[%]",
                    "dhg_efficiencyXdemandshare_heat-geothermal[%]"
                ]
            }
        },
        "string-input-1205:2994:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:2715:2505:1596": {
            "type": "string",
            "default": "(.*)\\[(.*)\\]",
            "description": "Enter Description",
            "example": "(.*)\\[(.*)\\]"
        },
        "single-selection-1205:3106:3222:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "string-input-1205:1116:1420": {
            "type": "string",
            "default": "appliance-new_(.+)\\[.*",
            "description": "Pattern selecting the activity to use for cost calculation. The technology is identified by a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the technology identifier.\n",
            "example": "appliance-new_(.+)\\[.*"
        },
        "string-input-1214:1162:1181:349": {
            "type": "string",
            "default": "energy_total",
            "description": "Name of resulting column. The name will be appended with the unit (see below)",
            "example": "energy_total"
        },
        "string-input-1205:2715:2505:1597": {
            "type": "string",
            "default": "$2",
            "description": "Enter Description",
            "example": "$2"
        },
        "string-input-1205:3433:2947:843": {
            "type": "string",
            "default": "EU calibrated",
            "description": "Enter Description",
            "example": "EU calibrated"
        },
        "string-input-1205:2715:2505:1599": {
            "type": "string",
            "default": "unit",
            "description": "Enter Description",
            "example": "unit"
        },
        "column-filter-1205:2942:2927:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "electricity+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "gas-bio+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "gas-ff-natural+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "heat-ambient+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "heat-geothermal+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "heat-solar+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "liquid-bio-diesel+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "liquid-bio-gasoline+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "liquid-ff-heatingoil+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "solid-bio+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "solid-ff-coal+Sum(energy-demand_calibrated_decentral_renovated[TWh])",
                    "solid-waste+Sum(energy-demand_calibrated_decentral_renovated[TWh])"
                ]
            }
        },
        "column-filter-1205:3430:2955:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(cal_rate_[%])",
                    "cooking+Sum(cal_rate_[%])",
                    "hot-water+Sum(cal_rate_[%])",
                    "lighting+Sum(cal_rate_[%])",
                    "space-cooling+Sum(cal_rate_[%])"
                ]
            }
        },
        "string-input-1205:3431:2951:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1205:3213:2231:460": {
            "type": "string",
            "default": "%",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "%"
        },
        "single-selection-1205:1130:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:3431:2951:357": {
            "type": "string",
            "default": "(.*)\\+.*dem.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*dem.*\\[.*"
        },
        "single-selection-1214:1162:1208:658": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "single-selection-0:328:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "ots"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "ots"
            }
        },
        "string-input-1205:2994:357": {
            "type": "string",
            "default": ".*energy-demand_(.*_.*)_[a,c,l].*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy-demand_(.*_.*)_[a,c,l].*\\[.*"
        },
        "column-selection-2819:4960:4909:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "string-input-2585:2004:444": {
            "type": "string",
            "default": "energy-need_decentral",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "energy-need_decentral"
        },
        "boolean-input-1205:2942:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "single-selection-1176:1186:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "2.1 Buildings"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "2.1 Buildings"
            }
        },
        "string-input-1205:3104:2618:843": {
            "type": "string",
            "default": "Industry",
            "description": "Enter Description",
            "example": "Industry"
        },
        "string-input-1205:3106:3218:444": {
            "type": "string",
            "default": "standardized_subsector",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "standardized_subsector"
        },
        "column-filter-2816:3994:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "test_value1[unit]",
                    "test_value2[unit]"
                ]
            }
        },
        "string-input-1205:3106:3218:445": {
            "type": "string",
            "default": "(.*)\\+.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "(.*)\\+.*"
        },
        "string-input-1205:3106:3218:446": {
            "type": "string",
            "default": "(.*)_S.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "(.*)_S.*"
        },
        "string-input-1214:1162:1181:357": {
            "type": "string",
            "default": ".*bld_energy.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*bld_energy.*"
        },
        "column-filter-1205:3430:2927:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "appliances+Sum(energy-demand_calibrated_[TWh])",
                    "cooking+Sum(energy-demand_calibrated_[TWh])",
                    "hot-water+Sum(energy-demand_calibrated_[TWh])",
                    "lighting+Sum(energy-demand_calibrated_[TWh])",
                    "space-cooling+Sum(energy-demand_calibrated_[TWh])"
                ]
            }
        },
        "single-selection-1184:1193:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1214:1162:1181:354": {
            "type": "string",
            "default": "unit",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "unit"
        },
        "string-input-2592:843": {
            "type": "string",
            "default": "Emissions",
            "description": "Enter Description",
            "example": "Emissions"
        },
        "string-input-2585:2004:446": {
            "type": "string",
            "default": "factor_decentral",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "factor_decentral"
        },
        "string-input-2585:2004:445": {
            "type": "string",
            "default": ".*need-(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": ".*need-(.*)\\[.*"
        },
        "string-input-1165:1238:460": {
            "type": "string",
            "default": "TWh/year",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TWh/year"
        },
        "string-input-1205:3431:2951:349": {
            "type": "string",
            "default": "fed_uncalibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_uncalibrated"
        },
        "boolean-input-2192:4987:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "boolean-input-2583:1713:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-1205:3436:2914:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "cooking+ColumnValues",
                    "hot-water+ColumnValues",
                    "lighting+ColumnValues",
                    "space-cooling+ColumnValues"
                ]
            }
        },
        "boolean-input-1205:2063:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "single-selection-1214:1162:1208:645": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Division 1/2"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Division 1/2"
            }
        },
        "boolean-input-1214:1162:1181:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "double-input-1165:1612:1247": {
            "type": "number",
            "default": 0.001,
            "description": "Enter Description",
            "example": 0.001
        },
        "string-input-2794:843": {
            "type": "string",
            "default": "Agriculture",
            "description": "Enter Description",
            "example": "Agriculture"
        },
        "country-list-2809:4543": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "EU28+1"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "EU28+1"
            }
        },
        "single-selection-1205:2847:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "boolean-input-2819:4987:1598": {
            "type": "boolean",
            "default": "true",
            "description": "Enter Description",
            "example": true
        },
        "column-filter-2796:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Country"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Country",
                    "Years",
                    "bld_new_dhg_pipe[km]",
                    "bld_floor-area_new_non-residential[m2]",
                    "bld_floor-area_reno_non-residential[m2]",
                    "bld_floor-area_new_residential[m2]",
                    "bld_floor-area_reno_residential[m2]",
                    "bld_new_fridge[num]",
                    "bld_new_freezer[num]",
                    "bld_new_wmachine[num]",
                    "bld_new_dishwasher[num]",
                    "bld_new_dryer[num]",
                    "bld_new_tv[num]",
                    "bld_new_computer[num]",
                    "bld_new_phone[num]"
                ]
            }
        },
        "string-input-1205:2939:2869:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "data-type-0:643:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "boolean-input-2192:2309:1598": {
            "type": "boolean",
            "default": "false",
            "description": "Enter Description",
            "example": false
        },
        "single-selection-1205:721:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-1205:2127:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "single-selection-1205:3154:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:3174:349": {
            "type": "string",
            "default": "bld_energy-demand_heat",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand_heat"
        },
        "string-input-2590:2009:1245": {
            "type": "string",
            "default": "factor_technology",
            "description": "Enter Description",
            "example": "factor_technology"
        },
        "single-selection-1218:1102:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "linear interpolation"
                }
            },
            "description": "Choose the completion method",
            "example": {
                "variable_value": "linear interpolation"
            }
        },
        "string-input-2590:2009:1246": {
            "type": "string",
            "default": "TWhperGWh",
            "description": "Enter Description",
            "example": "TWhperGWh"
        },
        "column-selection-2192:4930:4911:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "single-selection-1218:1102:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Replace negative values by 0",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-2585:2004:460": {
            "type": "string",
            "default": "GWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "GWh"
        },
        "boolean-input-1165:1628:1436": {
            "type": "boolean",
            "default": "false",
            "description": "Include unit costs in output",
            "example": false
        },
        "boolean-input-1205:1533:586": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation.",
            "example": true
        },
        "column-selection-2584:2063:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "buildingtype"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "buildingtype"
            }
        },
        "single-selection-1184:1265:314": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "fts"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "fts"
            }
        },
        "string-input-1205:3174:357": {
            "type": "string",
            "default": ".*energy.*_.*(liquid-bio)-.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": ".*energy.*_.*(liquid-bio)-.*"
        },
        "string-input-1205:2994:349": {
            "type": "string",
            "default": "bld_energy-demand_appliances",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "bld_energy-demand_appliances"
        },
        "string-input-1165:1238:446": {
            "type": "string",
            "default": "..._energy-demand-share.*\\[.*",
            "description": "Pattern selecting the second group of columns. The columns in this group will be matched with columns from the first group using the iterator. The iterator is defined similarly to the pattern in group 1. \nExample: single column \"sector_demand_.*\", multiple columns \"sector_variable_(.*)\\[.*\"\n\nThis pattern can also optionally include a second iterator for combining each column from the first group with multiple columns from the second group.\nExample: \"sector_variable_(.*)_(.*)\\[.*\"\n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).\n\nOnly in the Python version, a named regex group can be used to explicitly identify the iterator if it's not the first group. The pattern is \"sector_variable_(.*)_(?P<i>.*)\\[.*\". This give the name \"i\" (as in iterator) to the second group. The naming of the resulting variable is not affected by this (i.e. it's still the iterator,, then the second group of the first pattern, then the second group of the second pattern.",
            "example": "..._energy-demand-share.*\\[.*"
        },
        "string-input-1165:1238:444": {
            "type": "string",
            "default": "dhg_energy-demand",
            "description": "Name of resulting columns. The name will be appended with the iterator(s) (see below).",
            "example": "dhg_energy-demand"
        },
        "string-input-1205:3174:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "string-input-1165:1238:445": {
            "type": "string",
            "default": "..._energy-demand-prelim_(.*)\\[.*",
            "description": "Pattern selecting the first group of columns. The resulting columns will be appended with the iterator, which is a Regex capture group embedded in the pattern. \nExample: \"sector_variable_(.*)\\[.*\" to use the last item before the unit as the iterator. \n\nNote that these patterns can also be used to identify flow variables. They work exactly the same, flow variables matching the name will be transformed into columns in the data (with the same value for every row).",
            "example": "..._energy-demand-prelim_(.*)\\[.*"
        },
        "single-selection-1217:643:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:3189:349": {
            "type": "string",
            "default": "cal_bld_energy",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "cal_bld_energy"
        },
        "column-selection-1205:3148:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "ColumnNames"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "ColumnNames"
            }
        },
        "string-input-1205:3189:357": {
            "type": "string",
            "default": "energy_(.*_.*)_.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "energy_(.*_.*)_.*\\[.*"
        },
        "column-filter-1205:3099:3104:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "1991+renovated-area[Mm2]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "1991+renovated-area[Mm2]",
                    "1992+renovated-area[Mm2]",
                    "1993+renovated-area[Mm2]",
                    "1994+renovated-area[Mm2]",
                    "1995+renovated-area[Mm2]",
                    "1996+renovated-area[Mm2]"
                ]
            }
        },
        "string-input-1205:3189:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "single-selection-1205:2792:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "single-selection-1218:1072:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "string-input-1205:3430:2947:843": {
            "type": "string",
            "default": "EU calibrated",
            "description": "Enter Description",
            "example": "EU calibrated"
        },
        "file-chooser-2821:4676": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "default": "knime://LOCAL/_common/data/JRC%20IDEES%20powergen/JRC-IDEES-2015_PowerGen_AT.xlsx"
                            },
                            "type": {
                                "type": "string",
                                "default": "DATA"
                            }
                        }
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "items": [
                    {
                        "path": "knime://LOCAL/_common/data/JRC%20IDEES%20powergen/JRC-IDEES-2015_PowerGen_AT.xlsx",
                        "type": "DATA"
                    }
                ]
            }
        },
        "data-type-1184:1192:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "scenario"
                ]
            }
        },
        "boolean-input-1205:2127:359": {
            "type": "boolean",
            "default": "false",
            "description": "Remove columns used in the calculation",
            "example": false
        },
        "column-selection-2192:5227:4977:1595": {
            "type": "object",
            "properties": {
                "column": {
                    "type": "string",
                    "default": "use"
                }
            },
            "description": "Enter Description",
            "example": {
                "column": "use"
            }
        },
        "string-input-2604:345": {
            "type": "string",
            "default": "bld_min",
            "description": "Enter Description",
            "example": "bld_min"
        },
        "string-input-1205:2789:460": {
            "type": "string",
            "default": "GWh",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "GWh"
        },
        "string-input-1205:2942:2930:843": {
            "type": "string",
            "default": "Romania before calibration",
            "description": "Enter Description",
            "example": "Romania before calibration"
        },
        "string-input-1179:1167:343": {
            "type": "string",
            "default": "energy",
            "description": "the calibration name should be the same as the file name (without prefix ots-fts-ll and module trigram)",
            "example": "energy"
        },
        "string-input-1205:3436:2906:843": {
            "type": "string",
            "default": "EU after calibration",
            "description": "Enter Description",
            "example": "EU after calibration"
        },
        "single-selection-1176:1162:463": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Product"
                }
            },
            "description": "Method used to combine columns. For asymetric operations, the direction of the operation is specified, e.g. \"Division 2/1\" means dividing columns from the second group by columns from the first group.",
            "example": {
                "variable_value": "Product"
            }
        },
        "single-selection-1205:2942:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "boolean-input-1205:3431:2951:359": {
            "type": "boolean",
            "default": "true",
            "description": "Remove columns used in the calculation",
            "example": true
        },
        "column-filter-1205:3432:2947:844": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "Years"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "columns": [
                    "Years",
                    "fed_calibrated_appliances[TWh]",
                    "fed_calibrated_cooking[TWh]",
                    "fed_calibrated_hot-water[TWh]",
                    "fed_calibrated_lighting[TWh]",
                    "fed_calibrated_space-cooling[TWh]"
                ]
            }
        },
        "string-input-1205:1592:1599": {
            "type": "string",
            "default": "subsector",
            "description": "Enter Description",
            "example": "subsector"
        },
        "string-input-1205:1592:1596": {
            "type": "string",
            "default": "(.*)_(.*)(\\[.*)",
            "description": "Enter Description",
            "example": "(.*)_(.*)(\\[.*)"
        },
        "string-input-1205:3431:2914:843": {
            "type": "string",
            "default": "EU before calibration",
            "description": "Enter Description",
            "example": "EU before calibration"
        },
        "string-input-1205:1592:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-2819:4960:4977:1596": {
            "type": "string",
            "default": "(.*)",
            "description": "Enter Description",
            "example": "(.*)"
        },
        "string-input-2819:4960:4977:1597": {
            "type": "string",
            "default": "$1",
            "description": "Enter Description",
            "example": "$1"
        },
        "string-input-1205:2938:2889:843": {
            "type": "string",
            "default": "Title",
            "description": "Enter Description",
            "example": "Title"
        },
        "single-selection-2806:523": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "No"
                }
            },
            "description": "Display a unique variable for all individual country",
            "example": {
                "variable_value": "No"
            }
        },
        "string-input-2819:4960:4977:1599": {
            "type": "string",
            "default": "use-old",
            "description": "Enter Description",
            "example": "use-old"
        },
        "single-selection-2806:528": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "area graph"
                }
            },
            "description": "Choose the graph type",
            "example": {
                "variable_value": "area graph"
            }
        },
        "single-selection-1176:1162:1182:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        },
        "data-type-1218:1088:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "string-input-1205:3431:349": {
            "type": "string",
            "default": "fed_calibrated",
            "description": "Name of resulting column. The name will be appended with the unit (see below). A suffix can be added after a comma, for instance \"ind_energy,electricity\". The suffix will be added last to the variable name, but before the unit, for instance \"ind_energy_aluminium_electricity[TWh].\n",
            "example": "fed_calibrated"
        },
        "data-type-1217:1091:357": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "historical"
                    }
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": [
                    "historical",
                    "projection"
                ]
            }
        },
        "single-selection-1176:1200:394": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "1.4 Climate Emissions"
                }
            },
            "description": "Name of the linked module",
            "example": {
                "variable_value": "1.4 Climate Emissions"
            }
        },
        "string-input-1205:3106:3218:460": {
            "type": "string",
            "default": "TWhstd",
            "description": "New unit for the output columns. Not changing this option or setting it to \"unit\" keeps the unit from the first column group.",
            "example": "TWhstd"
        },
        "single-selection-1214:1162:1208:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "SPLIT"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "SPLIT"
            }
        },
        "string-input-1205:3431:354": {
            "type": "string",
            "default": "TWh",
            "description": "New unit for the output columns. Will be added to the name of the new column.",
            "example": "TWh"
        },
        "single-selection-1205:3213:2232:659:661": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "PARALLEL_OP"
                }
            },
            "description": "Enter Description",
            "example": {
                "variable_value": "PARALLEL_OP"
            }
        },
        "string-input-1205:3431:357": {
            "type": "string",
            "default": "(.*)\\+.*calibrated.*\\[.*",
            "description": "Pattern selecting the columns to aggregate following the aggregation method (see below).\nThis pattern must be written in a Regex format.\nExample: \"sector_variable_.*\" to aggregate all the columns of the same variable from one sector.",
            "example": "(.*)\\+.*calibrated.*\\[.*"
        },
        "single-selection-1154:441:639:653": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Java"
                }
            },
            "description": "Select code language to use",
            "example": {
                "variable_value": "Java"
            }
        },
        "column-filter-1205:3432:362": {
            "type": "object",
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "appliances+energy-demand_calibrated_[TWh]"
                    }
                }
            },
            "description": "This filter is ther for testing purpose. It allows the user to test the regex pattern used in the Pattern section.",
            "example": {
                "columns": [
                    "appliances+energy-demand_calibrated_[TWh]",
                    "cooking+energy-demand_calibrated_[TWh]",
                    "hot-water+energy-demand_calibrated_[TWh]",
                    "lighting+energy-demand_calibrated_[TWh]",
                    "space-cooling+energy-demand_calibrated_[TWh]"
                ]
            }
        },
        "single-selection-2607:355": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "buildings"
                }
            },
            "description": "Module Selection",
            "example": {
                "variable_value": "buildings"
            }
        },
        "single-selection-1165:2800:2570:350": {
            "type": "object",
            "properties": {
                "variable_value": {
                    "type": "string",
                    "default": "Sum"
                }
            },
            "description": "Method used to combine columns.",
            "example": {
                "variable_value": "Sum"
            }
        }
    }
}